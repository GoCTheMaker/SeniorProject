Component: ARM Compiler 6.12 Tool: armlink [5d624300]

==============================================================================

Section Cross References

    startup_stm32l071xx.o(RESET) refers to startup_stm32l071xx.o(STACK) for __initial_sp
    startup_stm32l071xx.o(RESET) refers to startup_stm32l071xx.o(.text) for Reset_Handler
    startup_stm32l071xx.o(RESET) refers to stm32l0xx_it.o(.text.NMI_Handler) for NMI_Handler
    startup_stm32l071xx.o(RESET) refers to stm32l0xx_it.o(.text.HardFault_Handler) for HardFault_Handler
    startup_stm32l071xx.o(RESET) refers to stm32l0xx_it.o(.text.SVC_Handler) for SVC_Handler
    startup_stm32l071xx.o(RESET) refers to stm32l0xx_it.o(.text.PendSV_Handler) for PendSV_Handler
    startup_stm32l071xx.o(RESET) refers to stm32l0xx_it.o(.text.SysTick_Handler) for SysTick_Handler
    startup_stm32l071xx.o(RESET) refers to stm32l0xx_it.o(.text.RTC_IRQHandler) for RTC_IRQHandler
    startup_stm32l071xx.o(RESET) refers to stm32l0xx_it.o(.text.USART4_5_IRQHandler) for USART4_5_IRQHandler
    startup_stm32l071xx.o(RESET) refers to stm32l0xx_it.o(.text.TIM2_IRQHandler) for TIM2_IRQHandler
    startup_stm32l071xx.o(RESET) refers to stm32l0xx_it.o(.text.SPI1_IRQHandler) for SPI1_IRQHandler
    startup_stm32l071xx.o(RESET) refers to stm32l0xx_it.o(.text.USART1_IRQHandler) for USART1_IRQHandler
    startup_stm32l071xx.o(.text) refers to system_stm32l0xx_1.o(.text.SystemInit) for SystemInit
    startup_stm32l071xx.o(.text) refers to entry.o(.ARM.Collect$$$$00000000) for __main
    comport.o(.ARM.exidx.text.CC_ComPortPresent) refers to comport.o(.text.CC_ComPortPresent) for [Anonymous Symbol]
    comport.o(.text.CC_SendByte) refers to comport.o(.text.LL_USART_TransmitData8) for LL_USART_TransmitData8
    comport.o(.ARM.exidx.text.CC_SendByte) refers to comport.o(.text.CC_SendByte) for [Anonymous Symbol]
    comport.o(.ARM.exidx.text.LL_USART_TransmitData8) refers to comport.o(.text.LL_USART_TransmitData8) for [Anonymous Symbol]
    comport.o(.text.CC_SendData) refers to comport.o(.text.CC_SendByte) for CC_SendByte
    comport.o(.ARM.exidx.text.CC_SendData) refers to comport.o(.text.CC_SendData) for [Anonymous Symbol]
    comport.o(.text.CC_CheckForHandshake) refers to strcmp.o(.text) for strcmp
    comport.o(.text.CC_CheckForHandshake) refers to comport.o(.text.CC_SendData) for CC_SendData
    comport.o(.text.CC_CheckForHandshake) refers to comport.o(.bss.ComRxReadFrom) for ComRxReadFrom
    comport.o(.text.CC_CheckForHandshake) refers to comport.o(.bss.ComRxWriteIndex) for ComRxWriteIndex
    comport.o(.text.CC_CheckForHandshake) refers to comport.o(.bss.ComRxBuff) for ComRxBuff
    comport.o(.text.CC_CheckForHandshake) refers to comport.o(.rodata.str1.1) for .L.str
    comport.o(.ARM.exidx.text.CC_CheckForHandshake) refers to comport.o(.text.CC_CheckForHandshake) for [Anonymous Symbol]
    comport.o(.text.CC_ParseCommand) refers to memseta.o(.text) for __aeabi_memclr
    comport.o(.text.CC_ParseCommand) refers to strcmp.o(.text) for strcmp
    comport.o(.text.CC_ParseCommand) refers to comport.o(.bss.ComRxWriteIndex) for ComRxWriteIndex
    comport.o(.text.CC_ParseCommand) refers to comport.o(.bss.ComRxReadFrom) for ComRxReadFrom
    comport.o(.text.CC_ParseCommand) refers to comport.o(.bss.ComRxBuff) for ComRxBuff
    comport.o(.text.CC_ParseCommand) refers to comport.o(.bss.ComRxReadTo) for ComRxReadTo
    comport.o(.text.CC_ParseCommand) refers to comport.o(.rodata.str1.1) for .L.str.1
    comport.o(.ARM.exidx.text.CC_ParseCommand) refers to comport.o(.text.CC_ParseCommand) for [Anonymous Symbol]
    comport.o(.text.CC_ExecuteCommand) refers to comport.o(.text.CC_SetRTC) for CC_SetRTC
    comport.o(.text.CC_ExecuteCommand) refers to comport.o(.text.CC_SendTimestamp) for CC_SendTimestamp
    comport.o(.text.CC_ExecuteCommand) refers to comport.o(.text.CC_SetProgram) for CC_SetProgram
    comport.o(.text.CC_ExecuteCommand) refers to comport.o(.text.CC_ReadProgram) for CC_ReadProgram
    comport.o(.text.CC_ExecuteCommand) refers to comport.o(.text.CC_ConfigureXbee) for CC_ConfigureXbee
    comport.o(.text.CC_ExecuteCommand) refers to xbee.o(.text.XB_GetConfig) for XB_GetConfig
    comport.o(.text.CC_ExecuteCommand) refers to xbee.o(.text.XB_GetSN) for XB_GetSN
    comport.o(.text.CC_ExecuteCommand) refers to flash.o(.text.FLASH_initDataStorage) for FLASH_initDataStorage
    comport.o(.ARM.exidx.text.CC_ExecuteCommand) refers to comport.o(.text.CC_ExecuteCommand) for [Anonymous Symbol]
    comport.o(.text.CC_SetRTC) refers to comport.o(.text.LL_RTC_DATE_GetDay) for LL_RTC_DATE_GetDay
    comport.o(.text.CC_SetRTC) refers to idiv.o(.text) for __aeabi_idivmod
    comport.o(.text.CC_SetRTC) refers to stm32l0xx_ll_rtc.o(.text.LL_RTC_TIME_Init) for LL_RTC_TIME_Init
    comport.o(.text.CC_SetRTC) refers to stm32l0xx_ll_rtc.o(.text.LL_RTC_DATE_Init) for LL_RTC_DATE_Init
    comport.o(.text.CC_SetRTC) refers to comport.o(.text.LL_RTC_TIME_GetSecond) for LL_RTC_TIME_GetSecond
    comport.o(.text.CC_SetRTC) refers to comport.o(.text.LL_RTC_TIME_GetMinute) for LL_RTC_TIME_GetMinute
    comport.o(.text.CC_SetRTC) refers to comport.o(.text.LL_RTC_TIME_GetHour) for LL_RTC_TIME_GetHour
    comport.o(.text.CC_SetRTC) refers to comport.o(.text.LL_RTC_DATE_GetMonth) for LL_RTC_DATE_GetMonth
    comport.o(.text.CC_SetRTC) refers to comport.o(.text.LL_RTC_DATE_GetYear) for LL_RTC_DATE_GetYear
    comport.o(.text.CC_SetRTC) refers to comport.o(.text.LL_RTC_DATE_GetWeekDay) for LL_RTC_DATE_GetWeekDay
    comport.o(.text.CC_SetRTC) refers to printfa.o(i.__0sprintf) for sprintf
    comport.o(.text.CC_SetRTC) refers to strlen.o(.text) for strlen
    comport.o(.text.CC_SetRTC) refers to comport.o(.text.CC_SendData) for CC_SendData
    comport.o(.text.CC_SetRTC) refers to comport.o(.bss.ComRxWriteIndex) for ComRxWriteIndex
    comport.o(.text.CC_SetRTC) refers to comport.o(.bss.ComRxBuff) for ComRxBuff
    comport.o(.text.CC_SetRTC) refers to comport.o(.bss.ComRxReadTo) for ComRxReadTo
    comport.o(.text.CC_SetRTC) refers to comport.o(.bss.ComRxReadFrom) for ComRxReadFrom
    comport.o(.text.CC_SetRTC) refers to comport.o(.rodata.str1.1) for .L.str.9
    comport.o(.ARM.exidx.text.CC_SetRTC) refers to comport.o(.text.CC_SetRTC) for [Anonymous Symbol]
    comport.o(.ARM.exidx.text.LL_RTC_DATE_GetDay) refers to comport.o(.text.LL_RTC_DATE_GetDay) for [Anonymous Symbol]
    comport.o(.ARM.exidx.text.LL_RTC_TIME_GetSecond) refers to comport.o(.text.LL_RTC_TIME_GetSecond) for [Anonymous Symbol]
    comport.o(.ARM.exidx.text.LL_RTC_TIME_GetMinute) refers to comport.o(.text.LL_RTC_TIME_GetMinute) for [Anonymous Symbol]
    comport.o(.ARM.exidx.text.LL_RTC_TIME_GetHour) refers to comport.o(.text.LL_RTC_TIME_GetHour) for [Anonymous Symbol]
    comport.o(.ARM.exidx.text.LL_RTC_DATE_GetMonth) refers to comport.o(.text.LL_RTC_DATE_GetMonth) for [Anonymous Symbol]
    comport.o(.ARM.exidx.text.LL_RTC_DATE_GetYear) refers to comport.o(.text.LL_RTC_DATE_GetYear) for [Anonymous Symbol]
    comport.o(.ARM.exidx.text.LL_RTC_DATE_GetWeekDay) refers to comport.o(.text.LL_RTC_DATE_GetWeekDay) for [Anonymous Symbol]
    comport.o(.text.CC_SendTimestamp) refers to comport.o(.text.LL_RTC_TIME_GetSecond) for LL_RTC_TIME_GetSecond
    comport.o(.text.CC_SendTimestamp) refers to comport.o(.text.LL_RTC_TIME_GetMinute) for LL_RTC_TIME_GetMinute
    comport.o(.text.CC_SendTimestamp) refers to comport.o(.text.LL_RTC_TIME_GetHour) for LL_RTC_TIME_GetHour
    comport.o(.text.CC_SendTimestamp) refers to comport.o(.text.LL_RTC_DATE_GetDay) for LL_RTC_DATE_GetDay
    comport.o(.text.CC_SendTimestamp) refers to comport.o(.text.LL_RTC_DATE_GetMonth) for LL_RTC_DATE_GetMonth
    comport.o(.text.CC_SendTimestamp) refers to comport.o(.text.LL_RTC_DATE_GetYear) for LL_RTC_DATE_GetYear
    comport.o(.text.CC_SendTimestamp) refers to comport.o(.text.LL_RTC_DATE_GetWeekDay) for LL_RTC_DATE_GetWeekDay
    comport.o(.text.CC_SendTimestamp) refers to printfa.o(i.__0sprintf) for sprintf
    comport.o(.text.CC_SendTimestamp) refers to strlen.o(.text) for strlen
    comport.o(.text.CC_SendTimestamp) refers to comport.o(.text.CC_SendData) for CC_SendData
    comport.o(.text.CC_SendTimestamp) refers to comport.o(.rodata.str1.1) for .L.str.9
    comport.o(.ARM.exidx.text.CC_SendTimestamp) refers to comport.o(.text.CC_SendTimestamp) for [Anonymous Symbol]
    comport.o(.text.CC_SetProgram) refers to memseta.o(.text) for __aeabi_memclr
    comport.o(.text.CC_SetProgram) refers to flash.o(.text.FLASH_Unlock) for FLASH_Unlock
    comport.o(.text.CC_SetProgram) refers to flash.o(.text.EEPROM_WriteData) for EEPROM_WriteData
    comport.o(.text.CC_SetProgram) refers to flash.o(.text.FLASH_Lock) for FLASH_Lock
    comport.o(.text.CC_SetProgram) refers to strlen.o(.text) for strlen
    comport.o(.text.CC_SetProgram) refers to comport.o(.bss.ComRxWriteIndex) for ComRxWriteIndex
    comport.o(.text.CC_SetProgram) refers to comport.o(.bss.ComRxBuff) for ComRxBuff
    comport.o(.text.CC_SetProgram) refers to comport.o(.bss.ComRxReadTo) for ComRxReadTo
    comport.o(.text.CC_SetProgram) refers to comport.o(.bss.ComRxReadFrom) for ComRxReadFrom
    comport.o(.ARM.exidx.text.CC_SetProgram) refers to comport.o(.text.CC_SetProgram) for [Anonymous Symbol]
    comport.o(.text.CC_ReadProgram) refers to flash.o(.text.FLASH_ReadData) for FLASH_ReadData
    comport.o(.text.CC_ReadProgram) refers to strlen.o(.text) for strlen
    comport.o(.text.CC_ReadProgram) refers to comport.o(.text.CC_SendData) for CC_SendData
    comport.o(.ARM.exidx.text.CC_ReadProgram) refers to comport.o(.text.CC_ReadProgram) for [Anonymous Symbol]
    comport.o(.text.CC_ConfigureXbee) refers to memseta.o(.text) for __aeabi_memclr
    comport.o(.text.CC_ConfigureXbee) refers to strlen.o(.text) for strlen
    comport.o(.text.CC_ConfigureXbee) refers to xbee.o(.text.XB_ConfigureDevice) for XB_ConfigureDevice
    comport.o(.text.CC_ConfigureXbee) refers to comport.o(.bss.ComRxWriteIndex) for ComRxWriteIndex
    comport.o(.text.CC_ConfigureXbee) refers to comport.o(.bss.ComRxBuff) for ComRxBuff
    comport.o(.text.CC_ConfigureXbee) refers to comport.o(.bss.ComRxReadTo) for ComRxReadTo
    comport.o(.text.CC_ConfigureXbee) refers to comport.o(.bss.ComRxReadFrom) for ComRxReadFrom
    comport.o(.ARM.exidx.text.CC_ConfigureXbee) refers to comport.o(.text.CC_ConfigureXbee) for [Anonymous Symbol]
    flash.o(.ARM.exidx.text.FLASH_Unlock) refers to flash.o(.text.FLASH_Unlock) for [Anonymous Symbol]
    flash.o(.ARM.exidx.text.FLASH_Lock) refers to flash.o(.text.FLASH_Lock) for [Anonymous Symbol]
    flash.o(.ARM.exidx.text.EEPROM_WriteByte) refers to flash.o(.text.EEPROM_WriteByte) for [Anonymous Symbol]
    flash.o(.text.EEPROM_WriteData) refers to flash.o(.text.EEPROM_WriteByte) for EEPROM_WriteByte
    flash.o(.ARM.exidx.text.EEPROM_WriteData) refers to flash.o(.text.EEPROM_WriteData) for [Anonymous Symbol]
    flash.o(.ARM.exidx.text.FLASH_ReadData) refers to flash.o(.text.FLASH_ReadData) for [Anonymous Symbol]
    flash.o(.ARM.exidx.text.FLASH_unlockPrgm) refers to flash.o(.text.FLASH_unlockPrgm) for [Anonymous Symbol]
    flash.o(.ARM.exidx.text.FLASH_writeWord) refers to flash.o(.text.FLASH_writeWord) for [Anonymous Symbol]
    flash.o(.ARM.exidx.text.FLASH_erasePage) refers to flash.o(.text.FLASH_erasePage) for [Anonymous Symbol]
    flash.o(.text.FLASH_initDataStorage) refers to flash.o(.text.FLASH_Unlock) for FLASH_Unlock
    flash.o(.text.FLASH_initDataStorage) refers to flash.o(.text.EEPROM_WriteData) for EEPROM_WriteData
    flash.o(.text.FLASH_initDataStorage) refers to flash.o(.text.FLASH_unlockPrgm) for FLASH_unlockPrgm
    flash.o(.text.FLASH_initDataStorage) refers to flash.o(.text.FLASH_erasePage) for FLASH_erasePage
    flash.o(.text.FLASH_initDataStorage) refers to flash.o(.text.FLASH_Lock) for FLASH_Lock
    flash.o(.ARM.exidx.text.FLASH_initDataStorage) refers to flash.o(.text.FLASH_initDataStorage) for [Anonymous Symbol]
    flash.o(.text.FLASH_saveFix) refers to flash.o(.text.FLASH_ReadData) for FLASH_ReadData
    flash.o(.text.FLASH_saveFix) refers to flash.o(.text.FLASH_Unlock) for FLASH_Unlock
    flash.o(.text.FLASH_saveFix) refers to flash.o(.text.EEPROM_WriteByte) for EEPROM_WriteByte
    flash.o(.text.FLASH_saveFix) refers to flash.o(.text.FLASH_unlockPrgm) for FLASH_unlockPrgm
    flash.o(.text.FLASH_saveFix) refers to flash.o(.text.FLASH_erasePage) for FLASH_erasePage
    flash.o(.text.FLASH_saveFix) refers to flash.o(.text.FLASH_writeWord) for FLASH_writeWord
    flash.o(.text.FLASH_saveFix) refers to flash.o(.text.FLASH_Lock) for FLASH_Lock
    flash.o(.ARM.exidx.text.FLASH_saveFix) refers to flash.o(.text.FLASH_saveFix) for [Anonymous Symbol]
    flash.o(.text.FLASH_readFixes) refers to flash.o(.text.FLASH_ReadData) for FLASH_ReadData
    flash.o(.text.FLASH_readFixes) refers to flash.o(.data.FLASH_readFixes.currAddr) for [Anonymous Symbol]
    flash.o(.ARM.exidx.text.FLASH_readFixes) refers to flash.o(.text.FLASH_readFixes) for [Anonymous Symbol]
    gps.o(.ARM.exidx.text.GPS_GPSEnable) refers to gps.o(.text.GPS_GPSEnable) for [Anonymous Symbol]
    gps.o(.ARM.exidx.text.GPS_GPSDisable) refers to gps.o(.text.GPS_GPSDisable) for [Anonymous Symbol]
    gps.o(.ARM.exidx.text.GPS_GPSCSLow) refers to gps.o(.text.GPS_GPSCSLow) for [Anonymous Symbol]
    gps.o(.ARM.exidx.text.GPS_GPSCSHigh) refers to gps.o(.text.GPS_GPSCSHigh) for [Anonymous Symbol]
    gps.o(.text.GPS_SendByte) refers to gps.o(.text.LL_SPI_TransmitData8) for LL_SPI_TransmitData8
    gps.o(.ARM.exidx.text.GPS_SendByte) refers to gps.o(.text.GPS_SendByte) for [Anonymous Symbol]
    gps.o(.ARM.exidx.text.LL_SPI_TransmitData8) refers to gps.o(.text.LL_SPI_TransmitData8) for [Anonymous Symbol]
    gps.o(.text.GPS_SendData) refers to gps.o(.text.GPS_SendByte) for GPS_SendByte
    gps.o(.ARM.exidx.text.GPS_SendData) refers to gps.o(.text.GPS_SendData) for [Anonymous Symbol]
    gps.o(.text.GPS_ClockInByte) refers to gps.o(.text.GPS_SendByte) for GPS_SendByte
    gps.o(.text.GPS_ClockInByte) refers to gps.o(.text.LL_SPI_ReceiveData8) for LL_SPI_ReceiveData8
    gps.o(.ARM.exidx.text.GPS_ClockInByte) refers to gps.o(.text.GPS_ClockInByte) for [Anonymous Symbol]
    gps.o(.ARM.exidx.text.LL_SPI_ReceiveData8) refers to gps.o(.text.LL_SPI_ReceiveData8) for [Anonymous Symbol]
    gps.o(.text.GPS_GetDataWord) refers to gps.o(.text.GPS_ClockInByte) for GPS_ClockInByte
    gps.o(.ARM.exidx.text.GPS_GetDataWord) refers to gps.o(.text.GPS_GetDataWord) for [Anonymous Symbol]
    gps.o(.text.GPS_getNMEA) refers to memseta.o(.text) for __aeabi_memclr
    gps.o(.text.GPS_getNMEA) refers to gps.o(.text.LL_SPI_TransmitData8) for LL_SPI_TransmitData8
    gps.o(.text.GPS_getNMEA) refers to gps.o(.text.LL_SPI_ReceiveData8) for LL_SPI_ReceiveData8
    gps.o(.text.GPS_getNMEA) refers to gps.o(.text.LL_USART_TransmitData8) for LL_USART_TransmitData8
    gps.o(.text.GPS_getNMEA) refers to comport.o(.text.CC_SendData) for CC_SendData
    gps.o(.text.GPS_getNMEA) refers to strtok.o(.text) for strtok
    gps.o(.text.GPS_getNMEA) refers to strncpy.o(.text) for strncpy
    gps.o(.text.GPS_getNMEA) refers to atoi.o(.text) for atoi
    gps.o(.text.GPS_getNMEA) refers to fflti.o(.text) for __aeabi_i2f
    gps.o(.text.GPS_getNMEA) refers to strlen.o(.text) for strlen
    gps.o(.text.GPS_getNMEA) refers to gps.o(.bss.GPS_getNMEA.position) for [Anonymous Symbol]
    gps.o(.text.GPS_getNMEA) refers to gps.o(.rodata.str1.1) for .L.str
    gps.o(.ARM.exidx.text.GPS_getNMEA) refers to gps.o(.text.GPS_getNMEA) for [Anonymous Symbol]
    gps.o(.ARM.exidx.text.LL_USART_TransmitData8) refers to gps.o(.text.LL_USART_TransmitData8) for [Anonymous Symbol]
    gps.o(.text.GPS_UBX_enablePUBX_Position) refers to gps.o(.text.LL_SPI_TransmitData8) for LL_SPI_TransmitData8
    gps.o(.ARM.exidx.text.GPS_UBX_enablePUBX_Position) refers to gps.o(.text.GPS_UBX_enablePUBX_Position) for [Anonymous Symbol]
    gps.o(.text.GPS_subroutine) refers to memseta.o(.text) for __aeabi_memclr4
    gps.o(.text.GPS_subroutine) refers to gps.o(.text.GPS_GPSEnable) for GPS_GPSEnable
    gps.o(.text.GPS_subroutine) refers to gps.o(.text.GPS_GPSCSHigh) for GPS_GPSCSHigh
    gps.o(.text.GPS_subroutine) refers to timers.o(.text.TIM2_delay) for TIM2_delay
    gps.o(.text.GPS_subroutine) refers to gps.o(.text.GPS_GPSCSLow) for GPS_GPSCSLow
    gps.o(.text.GPS_subroutine) refers to gps.o(.text.GPS_UBX_enablePUBX_Position) for GPS_UBX_enablePUBX_Position
    gps.o(.text.GPS_subroutine) refers to timers.o(.text.TIM2_initDelay_inline) for TIM2_initDelay_inline
    gps.o(.text.GPS_subroutine) refers to fcmpgt.o(.text) for __aeabi_fcmpgt
    gps.o(.text.GPS_subroutine) refers to gps.o(.text.GPS_getNMEA) for GPS_getNMEA
    gps.o(.text.GPS_subroutine) refers to fcmple.o(.text) for __aeabi_fcmple
    gps.o(.text.GPS_subroutine) refers to uidiv.o(.text) for __aeabi_uidiv
    gps.o(.text.GPS_subroutine) refers to idiv.o(.text) for __aeabi_idivmod
    gps.o(.text.GPS_subroutine) refers to timers.o(.text.RTC_setTimeDate) for RTC_setTimeDate
    gps.o(.text.GPS_subroutine) refers to timers.o(.text.RTC_getTimeDate) for RTC_getTimeDate
    gps.o(.text.GPS_subroutine) refers to gps.o(.bss.GPS_subroutine.position) for [Anonymous Symbol]
    gps.o(.ARM.exidx.text.GPS_subroutine) refers to gps.o(.text.GPS_subroutine) for [Anonymous Symbol]
    scheduler.o(.text.scheduler) refers to timers.o(.text.RTC_getTimeDate) for RTC_getTimeDate
    scheduler.o(.text.scheduler) refers to scheduler.o(.bss.scheduler.gps_lastHours) for [Anonymous Symbol]
    scheduler.o(.text.scheduler) refers to scheduler.o(.bss.scheduler.gps_lastMins) for [Anonymous Symbol]
    scheduler.o(.ARM.exidx.text.scheduler) refers to scheduler.o(.text.scheduler) for [Anonymous Symbol]
    timers.o(.ARM.exidx.text.TIM2_init) refers to timers.o(.text.TIM2_init) for [Anonymous Symbol]
    timers.o(.ARM.exidx.text.TIM2_delay) refers to timers.o(.text.TIM2_delay) for [Anonymous Symbol]
    timers.o(.ARM.exidx.text.TIM2_initDelay_inline) refers to timers.o(.text.TIM2_initDelay_inline) for [Anonymous Symbol]
    timers.o(.text.RTC_initAlarm) refers to timers.o(.text.LL_RTC_DisableWriteProtection) for LL_RTC_DisableWriteProtection
    timers.o(.text.RTC_initAlarm) refers to timers.o(.text.LL_RTC_ALMA_Disable) for LL_RTC_ALMA_Disable
    timers.o(.text.RTC_initAlarm) refers to timers.o(.text.LL_RTC_ALMA_SetSecond) for LL_RTC_ALMA_SetSecond
    timers.o(.text.RTC_initAlarm) refers to timers.o(.text.LL_RTC_ALMA_SetMask) for LL_RTC_ALMA_SetMask
    timers.o(.text.RTC_initAlarm) refers to timers.o(.text.LL_RTC_ALMA_Enable) for LL_RTC_ALMA_Enable
    timers.o(.text.RTC_initAlarm) refers to timers.o(.text.LL_RTC_EnableWriteProtection) for LL_RTC_EnableWriteProtection
    timers.o(.ARM.exidx.text.RTC_initAlarm) refers to timers.o(.text.RTC_initAlarm) for [Anonymous Symbol]
    timers.o(.ARM.exidx.text.LL_RTC_DisableWriteProtection) refers to timers.o(.text.LL_RTC_DisableWriteProtection) for [Anonymous Symbol]
    timers.o(.ARM.exidx.text.LL_RTC_ALMA_Disable) refers to timers.o(.text.LL_RTC_ALMA_Disable) for [Anonymous Symbol]
    timers.o(.ARM.exidx.text.LL_RTC_ALMA_SetSecond) refers to timers.o(.text.LL_RTC_ALMA_SetSecond) for [Anonymous Symbol]
    timers.o(.ARM.exidx.text.LL_RTC_ALMA_SetMask) refers to timers.o(.text.LL_RTC_ALMA_SetMask) for [Anonymous Symbol]
    timers.o(.ARM.exidx.text.LL_RTC_ALMA_Enable) refers to timers.o(.text.LL_RTC_ALMA_Enable) for [Anonymous Symbol]
    timers.o(.ARM.exidx.text.LL_RTC_EnableWriteProtection) refers to timers.o(.text.LL_RTC_EnableWriteProtection) for [Anonymous Symbol]
    timers.o(.text.RTC_setTimeDate) refers to stm32l0xx_ll_rtc.o(.text.LL_RTC_TIME_Init) for LL_RTC_TIME_Init
    timers.o(.text.RTC_setTimeDate) refers to stm32l0xx_ll_rtc.o(.text.LL_RTC_DATE_Init) for LL_RTC_DATE_Init
    timers.o(.ARM.exidx.text.RTC_setTimeDate) refers to timers.o(.text.RTC_setTimeDate) for [Anonymous Symbol]
    timers.o(.text.RTC_getTimeDate) refers to timers.o(.text.LL_RTC_TIME_GetHour) for LL_RTC_TIME_GetHour
    timers.o(.text.RTC_getTimeDate) refers to timers.o(.text.LL_RTC_TIME_GetMinute) for LL_RTC_TIME_GetMinute
    timers.o(.text.RTC_getTimeDate) refers to timers.o(.text.LL_RTC_TIME_GetSecond) for LL_RTC_TIME_GetSecond
    timers.o(.text.RTC_getTimeDate) refers to timers.o(.text.LL_RTC_TIME_GetFormat) for LL_RTC_TIME_GetFormat
    timers.o(.text.RTC_getTimeDate) refers to timers.o(.text.LL_RTC_DATE_GetDay) for LL_RTC_DATE_GetDay
    timers.o(.text.RTC_getTimeDate) refers to timers.o(.text.LL_RTC_DATE_GetMonth) for LL_RTC_DATE_GetMonth
    timers.o(.text.RTC_getTimeDate) refers to timers.o(.text.LL_RTC_DATE_GetYear) for LL_RTC_DATE_GetYear
    timers.o(.text.RTC_getTimeDate) refers to timers.o(.text.LL_RTC_DATE_GetWeekDay) for LL_RTC_DATE_GetWeekDay
    timers.o(.ARM.exidx.text.RTC_getTimeDate) refers to timers.o(.text.RTC_getTimeDate) for [Anonymous Symbol]
    timers.o(.ARM.exidx.text.LL_RTC_TIME_GetHour) refers to timers.o(.text.LL_RTC_TIME_GetHour) for [Anonymous Symbol]
    timers.o(.ARM.exidx.text.LL_RTC_TIME_GetMinute) refers to timers.o(.text.LL_RTC_TIME_GetMinute) for [Anonymous Symbol]
    timers.o(.ARM.exidx.text.LL_RTC_TIME_GetSecond) refers to timers.o(.text.LL_RTC_TIME_GetSecond) for [Anonymous Symbol]
    timers.o(.ARM.exidx.text.LL_RTC_TIME_GetFormat) refers to timers.o(.text.LL_RTC_TIME_GetFormat) for [Anonymous Symbol]
    timers.o(.ARM.exidx.text.LL_RTC_DATE_GetDay) refers to timers.o(.text.LL_RTC_DATE_GetDay) for [Anonymous Symbol]
    timers.o(.ARM.exidx.text.LL_RTC_DATE_GetMonth) refers to timers.o(.text.LL_RTC_DATE_GetMonth) for [Anonymous Symbol]
    timers.o(.ARM.exidx.text.LL_RTC_DATE_GetYear) refers to timers.o(.text.LL_RTC_DATE_GetYear) for [Anonymous Symbol]
    timers.o(.ARM.exidx.text.LL_RTC_DATE_GetWeekDay) refers to timers.o(.text.LL_RTC_DATE_GetWeekDay) for [Anonymous Symbol]
    xbee.o(.text.XB_XbeeSubroutine) refers to xbee.o(.text.XB_EnableXbee) for XB_EnableXbee
    xbee.o(.text.XB_XbeeSubroutine) refers to xbee.o(.text.XB_CheckForDongle) for XB_CheckForDongle
    xbee.o(.text.XB_XbeeSubroutine) refers to xbee.o(.text.XB_ParseCommand) for XB_ParseCommand
    xbee.o(.text.XB_XbeeSubroutine) refers to xbee.o(.text.XB_ExecuteCommand) for XB_ExecuteCommand
    xbee.o(.text.XB_XbeeSubroutine) refers to xbee.o(.bss.XbeeDongleConnected) for XbeeDongleConnected
    xbee.o(.ARM.exidx.text.XB_XbeeSubroutine) refers to xbee.o(.text.XB_XbeeSubroutine) for [Anonymous Symbol]
    xbee.o(.text.XB_ExecuteCommand) refers to xbee.o(.text.XB_TransmitFixes) for XB_TransmitFixes
    xbee.o(.ARM.exidx.text.XB_ExecuteCommand) refers to xbee.o(.text.XB_ExecuteCommand) for [Anonymous Symbol]
    xbee.o(.ARM.exidx.text.XB_EnableXbee) refers to xbee.o(.text.XB_EnableXbee) for [Anonymous Symbol]
    xbee.o(.ARM.exidx.text.XB_DisableXbee) refers to xbee.o(.text.XB_DisableXbee) for [Anonymous Symbol]
    xbee.o(.text.XB_SendByte) refers to xbee.o(.text.LL_USART_TransmitData8) for LL_USART_TransmitData8
    xbee.o(.ARM.exidx.text.XB_SendByte) refers to xbee.o(.text.XB_SendByte) for [Anonymous Symbol]
    xbee.o(.ARM.exidx.text.LL_USART_TransmitData8) refers to xbee.o(.text.LL_USART_TransmitData8) for [Anonymous Symbol]
    xbee.o(.text.XB_SendData) refers to xbee.o(.text.XB_SendByte) for XB_SendByte
    xbee.o(.ARM.exidx.text.XB_SendData) refers to xbee.o(.text.XB_SendData) for [Anonymous Symbol]
    xbee.o(.text.XB_GetResponse) refers to strlen.o(.text) for strlen
    xbee.o(.text.XB_GetResponse) refers to xbee.o(.bss.XbeeRxWriteIndex) for XbeeRxWriteIndex
    xbee.o(.text.XB_GetResponse) refers to xbee.o(.bss.XbeeRxBuff) for XbeeRxBuff
    xbee.o(.text.XB_GetResponse) refers to xbee.o(.bss.XbeeRxReadTo) for XbeeRxReadTo
    xbee.o(.text.XB_GetResponse) refers to xbee.o(.bss.XbeeRxReadFrom) for XbeeRxReadFrom
    xbee.o(.text.XB_GetResponse) refers to xbee.o(.bss.XbeeRxBufferActive) for XbeeRxBufferActive
    xbee.o(.ARM.exidx.text.XB_GetResponse) refers to xbee.o(.text.XB_GetResponse) for [Anonymous Symbol]
    xbee.o(.text.XB_ConfigureDevice) refers to memcpya.o(.text) for __aeabi_memcpy
    xbee.o(.text.XB_ConfigureDevice) refers to xbee.o(.text.XB_SendData) for XB_SendData
    xbee.o(.text.XB_ConfigureDevice) refers to xbee.o(.text.XB_GetResponse) for XB_GetResponse
    xbee.o(.text.XB_ConfigureDevice) refers to comport.o(.text.CC_SendData) for CC_SendData
    xbee.o(.text.XB_ConfigureDevice) refers to xbee.o(.text.XB_SendByte) for XB_SendByte
    xbee.o(.text.XB_ConfigureDevice) refers to strlen.o(.text) for strlen
    xbee.o(.text.XB_ConfigureDevice) refers to xbee.o(.rodata.str1.1) for .L.str
    xbee.o(.ARM.exidx.text.XB_ConfigureDevice) refers to xbee.o(.text.XB_ConfigureDevice) for [Anonymous Symbol]
    xbee.o(.text.XB_GetConfig) refers to memseta.o(.text) for __aeabi_memclr
    xbee.o(.text.XB_GetConfig) refers to xbee.o(.text.XB_SendData) for XB_SendData
    xbee.o(.text.XB_GetConfig) refers to xbee.o(.text.XB_GetResponse) for XB_GetResponse
    xbee.o(.text.XB_GetConfig) refers to comport.o(.text.CC_SendData) for CC_SendData
    xbee.o(.text.XB_GetConfig) refers to xbee.o(.text.XB_SendByte) for XB_SendByte
    xbee.o(.text.XB_GetConfig) refers to xbee.o(.rodata.str1.1) for .L.str
    xbee.o(.ARM.exidx.text.XB_GetConfig) refers to xbee.o(.text.XB_GetConfig) for [Anonymous Symbol]
    xbee.o(.text.XB_GetSN) refers to memseta.o(.text) for __aeabi_memclr
    xbee.o(.text.XB_GetSN) refers to xbee.o(.text.XB_SendData) for XB_SendData
    xbee.o(.text.XB_GetSN) refers to xbee.o(.text.XB_GetResponse) for XB_GetResponse
    xbee.o(.text.XB_GetSN) refers to comport.o(.text.CC_SendData) for CC_SendData
    xbee.o(.text.XB_GetSN) refers to xbee.o(.text.XB_SendByte) for XB_SendByte
    xbee.o(.text.XB_GetSN) refers to xbee.o(.rodata.str1.1) for .L.str
    xbee.o(.ARM.exidx.text.XB_GetSN) refers to xbee.o(.text.XB_GetSN) for [Anonymous Symbol]
    xbee.o(.text.XB_CheckForDongle) refers to xbee.o(.text.XB_SendByte) for XB_SendByte
    xbee.o(.text.XB_CheckForDongle) refers to xbee.o(.bss.XbeeRxBufferActive) for XbeeRxBufferActive
    xbee.o(.text.XB_CheckForDongle) refers to xbee.o(.bss.XbeeRxReadFrom) for XbeeRxReadFrom
    xbee.o(.text.XB_CheckForDongle) refers to xbee.o(.bss.XbeeRxWriteIndex) for XbeeRxWriteIndex
    xbee.o(.text.XB_CheckForDongle) refers to xbee.o(.bss.XbeeRxBuff) for XbeeRxBuff
    xbee.o(.ARM.exidx.text.XB_CheckForDongle) refers to xbee.o(.text.XB_CheckForDongle) for [Anonymous Symbol]
    xbee.o(.text.XB_ParseCommand) refers to memseta.o(.text) for __aeabi_memclr
    xbee.o(.text.XB_ParseCommand) refers to strcmp.o(.text) for strcmp
    xbee.o(.text.XB_ParseCommand) refers to xbee.o(.bss.XbeeRxWriteIndex) for XbeeRxWriteIndex
    xbee.o(.text.XB_ParseCommand) refers to xbee.o(.bss.XbeeRxReadFrom) for XbeeRxReadFrom
    xbee.o(.text.XB_ParseCommand) refers to xbee.o(.bss.XbeeRxBuff) for XbeeRxBuff
    xbee.o(.text.XB_ParseCommand) refers to xbee.o(.bss.XbeeRxReadTo) for XbeeRxReadTo
    xbee.o(.text.XB_ParseCommand) refers to xbee.o(.rodata.str1.1) for .L.str.11
    xbee.o(.ARM.exidx.text.XB_ParseCommand) refers to xbee.o(.text.XB_ParseCommand) for [Anonymous Symbol]
    xbee.o(.text.XB_TransmitFixes) refers to memcpya.o(.text) for __aeabi_memcpy
    xbee.o(.text.XB_TransmitFixes) refers to strlen.o(.text) for strlen
    xbee.o(.text.XB_TransmitFixes) refers to xbee.o(.text.XB_SendData) for XB_SendData
    xbee.o(.text.XB_TransmitFixes) refers to xbee.o(.text.XB_SendByte) for XB_SendByte
    xbee.o(.text.XB_TransmitFixes) refers to xbee.o(.rodata.str1.1) for .L__const.XB_TransmitFixes.test
    xbee.o(.text.XB_TransmitFixes) refers to xbee.o(.bss.XbeeDongleConnected) for XbeeDongleConnected
    xbee.o(.ARM.exidx.text.XB_TransmitFixes) refers to xbee.o(.text.XB_TransmitFixes) for [Anonymous Symbol]
    main.o(.text.main) refers to main.o(.text.LL_APB2_GRP1_EnableClock) for LL_APB2_GRP1_EnableClock
    main.o(.text.main) refers to main.o(.text.LL_APB1_GRP1_EnableClock) for LL_APB1_GRP1_EnableClock
    main.o(.text.main) refers to main.o(.text.SystemClock_Config) for SystemClock_Config
    main.o(.text.main) refers to main.o(.text.MX_GPIO_Init) for MX_GPIO_Init
    main.o(.text.main) refers to main.o(.text.MX_RTC_Init) for MX_RTC_Init
    main.o(.text.main) refers to main.o(.text.MX_SPI1_Init) for MX_SPI1_Init
    main.o(.text.main) refers to main.o(.text.MX_TIM2_Init) for MX_TIM2_Init
    main.o(.text.main) refers to main.o(.text.MX_USART1_UART_Init) for MX_USART1_UART_Init
    main.o(.text.main) refers to main.o(.text.MX_USART4_UART_Init) for MX_USART4_UART_Init
    main.o(.text.main) refers to main.o(.text.LL_USART_Disable) for LL_USART_Disable
    main.o(.text.main) refers to main.o(.text.LL_USART_Enable) for LL_USART_Enable
    main.o(.text.main) refers to timers.o(.text.RTC_initAlarm) for RTC_initAlarm
    main.o(.text.main) refers to timers.o(.text.TIM2_init) for TIM2_init
    main.o(.text.main) refers to xbee.o(.text.XB_EnableXbee) for XB_EnableXbee
    main.o(.text.main) refers to gps.o(.text.GPS_GPSDisable) for GPS_GPSDisable
    main.o(.text.main) refers to gps.o(.text.GPS_GPSCSHigh) for GPS_GPSCSHigh
    main.o(.text.main) refers to flash.o(.text.FLASH_initDataStorage) for FLASH_initDataStorage
    main.o(.text.main) refers to memseta.o(.text) for __aeabi_memset4
    main.o(.text.main) refers to flash.o(.text.FLASH_saveFix) for FLASH_saveFix
    main.o(.text.main) refers to flash.o(.text.FLASH_readFixes) for FLASH_readFixes
    main.o(.text.main) refers to strcpy.o(.text) for strcpy
    main.o(.ARM.exidx.text.main) refers to main.o(.text.main) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.LL_APB2_GRP1_EnableClock) refers to main.o(.text.LL_APB2_GRP1_EnableClock) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.LL_APB1_GRP1_EnableClock) refers to main.o(.text.LL_APB1_GRP1_EnableClock) for [Anonymous Symbol]
    main.o(.text.SystemClock_Config) refers to main.o(.text.LL_FLASH_SetLatency) for LL_FLASH_SetLatency
    main.o(.text.SystemClock_Config) refers to main.o(.text.LL_FLASH_GetLatency) for LL_FLASH_GetLatency
    main.o(.text.SystemClock_Config) refers to main.o(.text.Error_Handler) for Error_Handler
    main.o(.text.SystemClock_Config) refers to main.o(.text.LL_PWR_SetRegulVoltageScaling) for LL_PWR_SetRegulVoltageScaling
    main.o(.text.SystemClock_Config) refers to main.o(.text.LL_RCC_MSI_Enable) for LL_RCC_MSI_Enable
    main.o(.text.SystemClock_Config) refers to main.o(.text.LL_RCC_MSI_IsReady) for LL_RCC_MSI_IsReady
    main.o(.text.SystemClock_Config) refers to main.o(.text.LL_RCC_MSI_SetRange) for LL_RCC_MSI_SetRange
    main.o(.text.SystemClock_Config) refers to main.o(.text.LL_RCC_MSI_SetCalibTrimming) for LL_RCC_MSI_SetCalibTrimming
    main.o(.text.SystemClock_Config) refers to main.o(.text.LL_PWR_EnableBkUpAccess) for LL_PWR_EnableBkUpAccess
    main.o(.text.SystemClock_Config) refers to main.o(.text.LL_RCC_ForceBackupDomainReset) for LL_RCC_ForceBackupDomainReset
    main.o(.text.SystemClock_Config) refers to main.o(.text.LL_RCC_ReleaseBackupDomainReset) for LL_RCC_ReleaseBackupDomainReset
    main.o(.text.SystemClock_Config) refers to main.o(.text.LL_RCC_LSE_SetDriveCapability) for LL_RCC_LSE_SetDriveCapability
    main.o(.text.SystemClock_Config) refers to main.o(.text.LL_RCC_LSE_Enable) for LL_RCC_LSE_Enable
    main.o(.text.SystemClock_Config) refers to main.o(.text.LL_RCC_LSE_IsReady) for LL_RCC_LSE_IsReady
    main.o(.text.SystemClock_Config) refers to main.o(.text.LL_RCC_SetRTCClockSource) for LL_RCC_SetRTCClockSource
    main.o(.text.SystemClock_Config) refers to main.o(.text.LL_RCC_EnableRTC) for LL_RCC_EnableRTC
    main.o(.text.SystemClock_Config) refers to main.o(.text.LL_RCC_SetAHBPrescaler) for LL_RCC_SetAHBPrescaler
    main.o(.text.SystemClock_Config) refers to main.o(.text.LL_RCC_SetAPB1Prescaler) for LL_RCC_SetAPB1Prescaler
    main.o(.text.SystemClock_Config) refers to main.o(.text.LL_RCC_SetAPB2Prescaler) for LL_RCC_SetAPB2Prescaler
    main.o(.text.SystemClock_Config) refers to main.o(.text.LL_RCC_SetSysClkSource) for LL_RCC_SetSysClkSource
    main.o(.text.SystemClock_Config) refers to main.o(.text.LL_RCC_GetSysClkSource) for LL_RCC_GetSysClkSource
    main.o(.text.SystemClock_Config) refers to stm32l0xx_ll_utils.o(.text.LL_Init1msTick) for LL_Init1msTick
    main.o(.text.SystemClock_Config) refers to main.o(.text.LL_SYSTICK_SetClkSource) for LL_SYSTICK_SetClkSource
    main.o(.text.SystemClock_Config) refers to stm32l0xx_ll_utils.o(.text.LL_SetSystemCoreClock) for LL_SetSystemCoreClock
    main.o(.text.SystemClock_Config) refers to main.o(.text.LL_RCC_SetUSARTClockSource) for LL_RCC_SetUSARTClockSource
    main.o(.ARM.exidx.text.SystemClock_Config) refers to main.o(.text.SystemClock_Config) for [Anonymous Symbol]
    main.o(.text.MX_GPIO_Init) refers to main.o(.text.LL_IOP_GRP1_EnableClock) for LL_IOP_GRP1_EnableClock
    main.o(.text.MX_GPIO_Init) refers to main.o(.text.LL_GPIO_ResetOutputPin) for LL_GPIO_ResetOutputPin
    main.o(.text.MX_GPIO_Init) refers to stm32l0xx_ll_gpio.o(.text.LL_GPIO_Init) for LL_GPIO_Init
    main.o(.ARM.exidx.text.MX_GPIO_Init) refers to main.o(.text.MX_GPIO_Init) for [Anonymous Symbol]
    main.o(.text.MX_RTC_Init) refers to main.o(.text.LL_RCC_EnableRTC) for LL_RCC_EnableRTC
    main.o(.text.MX_RTC_Init) refers to main.o(.text.NVIC_SetPriority) for NVIC_SetPriority
    main.o(.text.MX_RTC_Init) refers to main.o(.text.NVIC_EnableIRQ) for NVIC_EnableIRQ
    main.o(.text.MX_RTC_Init) refers to stm32l0xx_ll_rtc.o(.text.LL_RTC_Init) for LL_RTC_Init
    main.o(.text.MX_RTC_Init) refers to stm32l0xx_ll_rtc.o(.text.LL_RTC_TIME_Init) for LL_RTC_TIME_Init
    main.o(.text.MX_RTC_Init) refers to stm32l0xx_ll_rtc.o(.text.LL_RTC_DATE_Init) for LL_RTC_DATE_Init
    main.o(.ARM.exidx.text.MX_RTC_Init) refers to main.o(.text.MX_RTC_Init) for [Anonymous Symbol]
    main.o(.text.MX_SPI1_Init) refers to memseta.o(.text) for __aeabi_memclr4
    main.o(.text.MX_SPI1_Init) refers to main.o(.text.LL_APB2_GRP1_EnableClock) for LL_APB2_GRP1_EnableClock
    main.o(.text.MX_SPI1_Init) refers to main.o(.text.LL_IOP_GRP1_EnableClock) for LL_IOP_GRP1_EnableClock
    main.o(.text.MX_SPI1_Init) refers to stm32l0xx_ll_gpio.o(.text.LL_GPIO_Init) for LL_GPIO_Init
    main.o(.text.MX_SPI1_Init) refers to main.o(.text.NVIC_SetPriority) for NVIC_SetPriority
    main.o(.text.MX_SPI1_Init) refers to main.o(.text.NVIC_EnableIRQ) for NVIC_EnableIRQ
    main.o(.text.MX_SPI1_Init) refers to stm32l0xx_ll_spi.o(.text.LL_SPI_Init) for LL_SPI_Init
    main.o(.text.MX_SPI1_Init) refers to main.o(.text.LL_SPI_SetStandard) for LL_SPI_SetStandard
    main.o(.ARM.exidx.text.MX_SPI1_Init) refers to main.o(.text.MX_SPI1_Init) for [Anonymous Symbol]
    main.o(.text.MX_TIM2_Init) refers to main.o(.text.LL_APB1_GRP1_EnableClock) for LL_APB1_GRP1_EnableClock
    main.o(.text.MX_TIM2_Init) refers to main.o(.text.NVIC_SetPriority) for NVIC_SetPriority
    main.o(.text.MX_TIM2_Init) refers to main.o(.text.NVIC_EnableIRQ) for NVIC_EnableIRQ
    main.o(.text.MX_TIM2_Init) refers to stm32l0xx_ll_tim.o(.text.LL_TIM_Init) for LL_TIM_Init
    main.o(.text.MX_TIM2_Init) refers to main.o(.text.LL_TIM_DisableARRPreload) for LL_TIM_DisableARRPreload
    main.o(.text.MX_TIM2_Init) refers to main.o(.text.LL_TIM_SetClockSource) for LL_TIM_SetClockSource
    main.o(.text.MX_TIM2_Init) refers to main.o(.text.LL_TIM_SetTriggerOutput) for LL_TIM_SetTriggerOutput
    main.o(.text.MX_TIM2_Init) refers to main.o(.text.LL_TIM_DisableMasterSlaveMode) for LL_TIM_DisableMasterSlaveMode
    main.o(.ARM.exidx.text.MX_TIM2_Init) refers to main.o(.text.MX_TIM2_Init) for [Anonymous Symbol]
    main.o(.text.MX_USART1_UART_Init) refers to main.o(.text.LL_APB2_GRP1_EnableClock) for LL_APB2_GRP1_EnableClock
    main.o(.text.MX_USART1_UART_Init) refers to main.o(.text.LL_IOP_GRP1_EnableClock) for LL_IOP_GRP1_EnableClock
    main.o(.text.MX_USART1_UART_Init) refers to stm32l0xx_ll_gpio.o(.text.LL_GPIO_Init) for LL_GPIO_Init
    main.o(.text.MX_USART1_UART_Init) refers to main.o(.text.NVIC_SetPriority) for NVIC_SetPriority
    main.o(.text.MX_USART1_UART_Init) refers to main.o(.text.NVIC_EnableIRQ) for NVIC_EnableIRQ
    main.o(.text.MX_USART1_UART_Init) refers to stm32l0xx_ll_usart.o(.text.LL_USART_Init) for LL_USART_Init
    main.o(.text.MX_USART1_UART_Init) refers to main.o(.text.LL_USART_ConfigAsyncMode) for LL_USART_ConfigAsyncMode
    main.o(.text.MX_USART1_UART_Init) refers to main.o(.text.LL_USART_Enable) for LL_USART_Enable
    main.o(.ARM.exidx.text.MX_USART1_UART_Init) refers to main.o(.text.MX_USART1_UART_Init) for [Anonymous Symbol]
    main.o(.text.MX_USART4_UART_Init) refers to main.o(.text.LL_APB1_GRP1_EnableClock) for LL_APB1_GRP1_EnableClock
    main.o(.text.MX_USART4_UART_Init) refers to main.o(.text.LL_IOP_GRP1_EnableClock) for LL_IOP_GRP1_EnableClock
    main.o(.text.MX_USART4_UART_Init) refers to stm32l0xx_ll_gpio.o(.text.LL_GPIO_Init) for LL_GPIO_Init
    main.o(.text.MX_USART4_UART_Init) refers to main.o(.text.NVIC_SetPriority) for NVIC_SetPriority
    main.o(.text.MX_USART4_UART_Init) refers to main.o(.text.NVIC_EnableIRQ) for NVIC_EnableIRQ
    main.o(.text.MX_USART4_UART_Init) refers to stm32l0xx_ll_usart.o(.text.LL_USART_Init) for LL_USART_Init
    main.o(.text.MX_USART4_UART_Init) refers to main.o(.text.LL_USART_SetTXRXSwap) for LL_USART_SetTXRXSwap
    main.o(.text.MX_USART4_UART_Init) refers to main.o(.text.LL_USART_ConfigAsyncMode) for LL_USART_ConfigAsyncMode
    main.o(.text.MX_USART4_UART_Init) refers to main.o(.text.LL_USART_Enable) for LL_USART_Enable
    main.o(.ARM.exidx.text.MX_USART4_UART_Init) refers to main.o(.text.MX_USART4_UART_Init) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.LL_USART_Disable) refers to main.o(.text.LL_USART_Disable) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.LL_USART_Enable) refers to main.o(.text.LL_USART_Enable) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.LL_FLASH_SetLatency) refers to main.o(.text.LL_FLASH_SetLatency) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.LL_FLASH_GetLatency) refers to main.o(.text.LL_FLASH_GetLatency) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.Error_Handler) refers to main.o(.text.Error_Handler) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.LL_PWR_SetRegulVoltageScaling) refers to main.o(.text.LL_PWR_SetRegulVoltageScaling) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.LL_RCC_MSI_Enable) refers to main.o(.text.LL_RCC_MSI_Enable) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.LL_RCC_MSI_IsReady) refers to main.o(.text.LL_RCC_MSI_IsReady) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.LL_RCC_MSI_SetRange) refers to main.o(.text.LL_RCC_MSI_SetRange) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.LL_RCC_MSI_SetCalibTrimming) refers to main.o(.text.LL_RCC_MSI_SetCalibTrimming) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.LL_PWR_EnableBkUpAccess) refers to main.o(.text.LL_PWR_EnableBkUpAccess) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.LL_RCC_ForceBackupDomainReset) refers to main.o(.text.LL_RCC_ForceBackupDomainReset) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.LL_RCC_ReleaseBackupDomainReset) refers to main.o(.text.LL_RCC_ReleaseBackupDomainReset) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.LL_RCC_LSE_SetDriveCapability) refers to main.o(.text.LL_RCC_LSE_SetDriveCapability) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.LL_RCC_LSE_Enable) refers to main.o(.text.LL_RCC_LSE_Enable) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.LL_RCC_LSE_IsReady) refers to main.o(.text.LL_RCC_LSE_IsReady) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.LL_RCC_SetRTCClockSource) refers to main.o(.text.LL_RCC_SetRTCClockSource) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.LL_RCC_EnableRTC) refers to main.o(.text.LL_RCC_EnableRTC) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.LL_RCC_SetAHBPrescaler) refers to main.o(.text.LL_RCC_SetAHBPrescaler) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.LL_RCC_SetAPB1Prescaler) refers to main.o(.text.LL_RCC_SetAPB1Prescaler) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.LL_RCC_SetAPB2Prescaler) refers to main.o(.text.LL_RCC_SetAPB2Prescaler) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.LL_RCC_SetSysClkSource) refers to main.o(.text.LL_RCC_SetSysClkSource) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.LL_RCC_GetSysClkSource) refers to main.o(.text.LL_RCC_GetSysClkSource) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.LL_SYSTICK_SetClkSource) refers to main.o(.text.LL_SYSTICK_SetClkSource) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.LL_RCC_SetUSARTClockSource) refers to main.o(.text.LL_RCC_SetUSARTClockSource) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.NVIC_SetPriority) refers to main.o(.text.NVIC_SetPriority) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.NVIC_EnableIRQ) refers to main.o(.text.NVIC_EnableIRQ) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.LL_IOP_GRP1_EnableClock) refers to main.o(.text.LL_IOP_GRP1_EnableClock) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.LL_SPI_SetStandard) refers to main.o(.text.LL_SPI_SetStandard) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.LL_TIM_DisableARRPreload) refers to main.o(.text.LL_TIM_DisableARRPreload) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.LL_TIM_SetClockSource) refers to main.o(.text.LL_TIM_SetClockSource) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.LL_TIM_SetTriggerOutput) refers to main.o(.text.LL_TIM_SetTriggerOutput) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.LL_TIM_DisableMasterSlaveMode) refers to main.o(.text.LL_TIM_DisableMasterSlaveMode) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.LL_USART_ConfigAsyncMode) refers to main.o(.text.LL_USART_ConfigAsyncMode) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.LL_USART_SetTXRXSwap) refers to main.o(.text.LL_USART_SetTXRXSwap) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.LL_GPIO_ResetOutputPin) refers to main.o(.text.LL_GPIO_ResetOutputPin) for [Anonymous Symbol]
    stm32l0xx_it.o(.ARM.exidx.text.NMI_Handler) refers to stm32l0xx_it.o(.text.NMI_Handler) for [Anonymous Symbol]
    stm32l0xx_it.o(.ARM.exidx.text.HardFault_Handler) refers to stm32l0xx_it.o(.text.HardFault_Handler) for [Anonymous Symbol]
    stm32l0xx_it.o(.ARM.exidx.text.SVC_Handler) refers to stm32l0xx_it.o(.text.SVC_Handler) for [Anonymous Symbol]
    stm32l0xx_it.o(.ARM.exidx.text.PendSV_Handler) refers to stm32l0xx_it.o(.text.PendSV_Handler) for [Anonymous Symbol]
    stm32l0xx_it.o(.ARM.exidx.text.SysTick_Handler) refers to stm32l0xx_it.o(.text.SysTick_Handler) for [Anonymous Symbol]
    stm32l0xx_it.o(.text.RTC_IRQHandler) refers to main.o(.bss.checkSchedule) for checkSchedule
    stm32l0xx_it.o(.ARM.exidx.text.RTC_IRQHandler) refers to stm32l0xx_it.o(.text.RTC_IRQHandler) for [Anonymous Symbol]
    stm32l0xx_it.o(.text.USART4_5_IRQHandler) refers to xbee.o(.bss.XbeeRxWriteIndex) for XbeeRxWriteIndex
    stm32l0xx_it.o(.text.USART4_5_IRQHandler) refers to xbee.o(.bss.XbeeRxBuff) for XbeeRxBuff
    stm32l0xx_it.o(.text.USART4_5_IRQHandler) refers to xbee.o(.bss.XbeeRxBufferActive) for XbeeRxBufferActive
    stm32l0xx_it.o(.ARM.exidx.text.USART4_5_IRQHandler) refers to stm32l0xx_it.o(.text.USART4_5_IRQHandler) for [Anonymous Symbol]
    stm32l0xx_it.o(.ARM.exidx.text.TIM2_IRQHandler) refers to stm32l0xx_it.o(.text.TIM2_IRQHandler) for [Anonymous Symbol]
    stm32l0xx_it.o(.ARM.exidx.text.SPI1_IRQHandler) refers to stm32l0xx_it.o(.text.SPI1_IRQHandler) for [Anonymous Symbol]
    stm32l0xx_it.o(.text.USART1_IRQHandler) refers to comport.o(.bss.ComRxWriteIndex) for ComRxWriteIndex
    stm32l0xx_it.o(.text.USART1_IRQHandler) refers to comport.o(.bss.ComRxBuff) for ComRxBuff
    stm32l0xx_it.o(.ARM.exidx.text.USART1_IRQHandler) refers to stm32l0xx_it.o(.text.USART1_IRQHandler) for [Anonymous Symbol]
    system_stm32l0xx_1.o(.ARM.exidx.text.SystemInit) refers to system_stm32l0xx_1.o(.text.SystemInit) for [Anonymous Symbol]
    system_stm32l0xx_1.o(.text.SystemCoreClockUpdate) refers to uidiv.o(.text) for __aeabi_uidiv
    system_stm32l0xx_1.o(.text.SystemCoreClockUpdate) refers to system_stm32l0xx_1.o(.data.SystemCoreClock) for SystemCoreClock
    system_stm32l0xx_1.o(.text.SystemCoreClockUpdate) refers to system_stm32l0xx_1.o(.rodata.PLLMulTable) for PLLMulTable
    system_stm32l0xx_1.o(.text.SystemCoreClockUpdate) refers to system_stm32l0xx_1.o(.rodata.AHBPrescTable) for AHBPrescTable
    system_stm32l0xx_1.o(.ARM.exidx.text.SystemCoreClockUpdate) refers to system_stm32l0xx_1.o(.text.SystemCoreClockUpdate) for [Anonymous Symbol]
    stm32l0xx_ll_gpio.o(.text.LL_GPIO_DeInit) refers to stm32l0xx_ll_gpio.o(.text.LL_IOP_GRP1_ForceReset) for LL_IOP_GRP1_ForceReset
    stm32l0xx_ll_gpio.o(.text.LL_GPIO_DeInit) refers to stm32l0xx_ll_gpio.o(.text.LL_IOP_GRP1_ReleaseReset) for LL_IOP_GRP1_ReleaseReset
    stm32l0xx_ll_gpio.o(.ARM.exidx.text.LL_GPIO_DeInit) refers to stm32l0xx_ll_gpio.o(.text.LL_GPIO_DeInit) for [Anonymous Symbol]
    stm32l0xx_ll_gpio.o(.ARM.exidx.text.LL_IOP_GRP1_ForceReset) refers to stm32l0xx_ll_gpio.o(.text.LL_IOP_GRP1_ForceReset) for [Anonymous Symbol]
    stm32l0xx_ll_gpio.o(.ARM.exidx.text.LL_IOP_GRP1_ReleaseReset) refers to stm32l0xx_ll_gpio.o(.text.LL_IOP_GRP1_ReleaseReset) for [Anonymous Symbol]
    stm32l0xx_ll_gpio.o(.text.LL_GPIO_Init) refers to stm32l0xx_ll_gpio.o(.text.LL_GPIO_SetPinMode) for LL_GPIO_SetPinMode
    stm32l0xx_ll_gpio.o(.text.LL_GPIO_Init) refers to stm32l0xx_ll_gpio.o(.text.LL_GPIO_SetPinSpeed) for LL_GPIO_SetPinSpeed
    stm32l0xx_ll_gpio.o(.text.LL_GPIO_Init) refers to stm32l0xx_ll_gpio.o(.text.LL_GPIO_SetPinPull) for LL_GPIO_SetPinPull
    stm32l0xx_ll_gpio.o(.text.LL_GPIO_Init) refers to stm32l0xx_ll_gpio.o(.text.LL_GPIO_SetAFPin_0_7) for LL_GPIO_SetAFPin_0_7
    stm32l0xx_ll_gpio.o(.text.LL_GPIO_Init) refers to stm32l0xx_ll_gpio.o(.text.LL_GPIO_SetAFPin_8_15) for LL_GPIO_SetAFPin_8_15
    stm32l0xx_ll_gpio.o(.text.LL_GPIO_Init) refers to stm32l0xx_ll_gpio.o(.text.LL_GPIO_SetPinOutputType) for LL_GPIO_SetPinOutputType
    stm32l0xx_ll_gpio.o(.ARM.exidx.text.LL_GPIO_Init) refers to stm32l0xx_ll_gpio.o(.text.LL_GPIO_Init) for [Anonymous Symbol]
    stm32l0xx_ll_gpio.o(.ARM.exidx.text.LL_GPIO_SetPinMode) refers to stm32l0xx_ll_gpio.o(.text.LL_GPIO_SetPinMode) for [Anonymous Symbol]
    stm32l0xx_ll_gpio.o(.ARM.exidx.text.LL_GPIO_SetPinSpeed) refers to stm32l0xx_ll_gpio.o(.text.LL_GPIO_SetPinSpeed) for [Anonymous Symbol]
    stm32l0xx_ll_gpio.o(.ARM.exidx.text.LL_GPIO_SetPinPull) refers to stm32l0xx_ll_gpio.o(.text.LL_GPIO_SetPinPull) for [Anonymous Symbol]
    stm32l0xx_ll_gpio.o(.ARM.exidx.text.LL_GPIO_SetAFPin_0_7) refers to stm32l0xx_ll_gpio.o(.text.LL_GPIO_SetAFPin_0_7) for [Anonymous Symbol]
    stm32l0xx_ll_gpio.o(.ARM.exidx.text.LL_GPIO_SetAFPin_8_15) refers to stm32l0xx_ll_gpio.o(.text.LL_GPIO_SetAFPin_8_15) for [Anonymous Symbol]
    stm32l0xx_ll_gpio.o(.ARM.exidx.text.LL_GPIO_SetPinOutputType) refers to stm32l0xx_ll_gpio.o(.text.LL_GPIO_SetPinOutputType) for [Anonymous Symbol]
    stm32l0xx_ll_gpio.o(.ARM.exidx.text.LL_GPIO_StructInit) refers to stm32l0xx_ll_gpio.o(.text.LL_GPIO_StructInit) for [Anonymous Symbol]
    stm32l0xx_ll_rtc.o(.text.LL_RTC_DeInit) refers to stm32l0xx_ll_rtc.o(.text.LL_RTC_DisableWriteProtection) for LL_RTC_DisableWriteProtection
    stm32l0xx_ll_rtc.o(.text.LL_RTC_DeInit) refers to stm32l0xx_ll_rtc.o(.text.LL_RTC_EnterInitMode) for LL_RTC_EnterInitMode
    stm32l0xx_ll_rtc.o(.text.LL_RTC_DeInit) refers to stm32l0xx_ll_rtc.o(.text.LL_RTC_WaitForSynchro) for LL_RTC_WaitForSynchro
    stm32l0xx_ll_rtc.o(.text.LL_RTC_DeInit) refers to stm32l0xx_ll_rtc.o(.text.LL_RTC_EnableWriteProtection) for LL_RTC_EnableWriteProtection
    stm32l0xx_ll_rtc.o(.ARM.exidx.text.LL_RTC_DeInit) refers to stm32l0xx_ll_rtc.o(.text.LL_RTC_DeInit) for [Anonymous Symbol]
    stm32l0xx_ll_rtc.o(.ARM.exidx.text.LL_RTC_DisableWriteProtection) refers to stm32l0xx_ll_rtc.o(.text.LL_RTC_DisableWriteProtection) for [Anonymous Symbol]
    stm32l0xx_ll_rtc.o(.text.LL_RTC_EnterInitMode) refers to stm32l0xx_ll_rtc.o(.text.LL_RTC_IsActiveFlag_INIT) for LL_RTC_IsActiveFlag_INIT
    stm32l0xx_ll_rtc.o(.text.LL_RTC_EnterInitMode) refers to stm32l0xx_ll_rtc.o(.text.LL_RTC_EnableInitMode) for LL_RTC_EnableInitMode
    stm32l0xx_ll_rtc.o(.text.LL_RTC_EnterInitMode) refers to stm32l0xx_ll_rtc.o(.text.LL_SYSTICK_IsActiveCounterFlag) for LL_SYSTICK_IsActiveCounterFlag
    stm32l0xx_ll_rtc.o(.ARM.exidx.text.LL_RTC_EnterInitMode) refers to stm32l0xx_ll_rtc.o(.text.LL_RTC_EnterInitMode) for [Anonymous Symbol]
    stm32l0xx_ll_rtc.o(.text.LL_RTC_WaitForSynchro) refers to stm32l0xx_ll_rtc.o(.text.LL_RTC_ClearFlag_RS) for LL_RTC_ClearFlag_RS
    stm32l0xx_ll_rtc.o(.text.LL_RTC_WaitForSynchro) refers to stm32l0xx_ll_rtc.o(.text.LL_RTC_IsActiveFlag_RS) for LL_RTC_IsActiveFlag_RS
    stm32l0xx_ll_rtc.o(.text.LL_RTC_WaitForSynchro) refers to stm32l0xx_ll_rtc.o(.text.LL_SYSTICK_IsActiveCounterFlag) for LL_SYSTICK_IsActiveCounterFlag
    stm32l0xx_ll_rtc.o(.ARM.exidx.text.LL_RTC_WaitForSynchro) refers to stm32l0xx_ll_rtc.o(.text.LL_RTC_WaitForSynchro) for [Anonymous Symbol]
    stm32l0xx_ll_rtc.o(.ARM.exidx.text.LL_RTC_EnableWriteProtection) refers to stm32l0xx_ll_rtc.o(.text.LL_RTC_EnableWriteProtection) for [Anonymous Symbol]
    stm32l0xx_ll_rtc.o(.text.LL_RTC_Init) refers to stm32l0xx_ll_rtc.o(.text.LL_RTC_DisableWriteProtection) for LL_RTC_DisableWriteProtection
    stm32l0xx_ll_rtc.o(.text.LL_RTC_Init) refers to stm32l0xx_ll_rtc.o(.text.LL_RTC_EnterInitMode) for LL_RTC_EnterInitMode
    stm32l0xx_ll_rtc.o(.text.LL_RTC_Init) refers to stm32l0xx_ll_rtc.o(.text.LL_RTC_SetHourFormat) for LL_RTC_SetHourFormat
    stm32l0xx_ll_rtc.o(.text.LL_RTC_Init) refers to stm32l0xx_ll_rtc.o(.text.LL_RTC_SetSynchPrescaler) for LL_RTC_SetSynchPrescaler
    stm32l0xx_ll_rtc.o(.text.LL_RTC_Init) refers to stm32l0xx_ll_rtc.o(.text.LL_RTC_SetAsynchPrescaler) for LL_RTC_SetAsynchPrescaler
    stm32l0xx_ll_rtc.o(.text.LL_RTC_Init) refers to stm32l0xx_ll_rtc.o(.text.LL_RTC_DisableInitMode) for LL_RTC_DisableInitMode
    stm32l0xx_ll_rtc.o(.text.LL_RTC_Init) refers to stm32l0xx_ll_rtc.o(.text.LL_RTC_EnableWriteProtection) for LL_RTC_EnableWriteProtection
    stm32l0xx_ll_rtc.o(.ARM.exidx.text.LL_RTC_Init) refers to stm32l0xx_ll_rtc.o(.text.LL_RTC_Init) for [Anonymous Symbol]
    stm32l0xx_ll_rtc.o(.ARM.exidx.text.LL_RTC_SetHourFormat) refers to stm32l0xx_ll_rtc.o(.text.LL_RTC_SetHourFormat) for [Anonymous Symbol]
    stm32l0xx_ll_rtc.o(.ARM.exidx.text.LL_RTC_SetSynchPrescaler) refers to stm32l0xx_ll_rtc.o(.text.LL_RTC_SetSynchPrescaler) for [Anonymous Symbol]
    stm32l0xx_ll_rtc.o(.ARM.exidx.text.LL_RTC_SetAsynchPrescaler) refers to stm32l0xx_ll_rtc.o(.text.LL_RTC_SetAsynchPrescaler) for [Anonymous Symbol]
    stm32l0xx_ll_rtc.o(.ARM.exidx.text.LL_RTC_DisableInitMode) refers to stm32l0xx_ll_rtc.o(.text.LL_RTC_DisableInitMode) for [Anonymous Symbol]
    stm32l0xx_ll_rtc.o(.ARM.exidx.text.LL_RTC_StructInit) refers to stm32l0xx_ll_rtc.o(.text.LL_RTC_StructInit) for [Anonymous Symbol]
    stm32l0xx_ll_rtc.o(.text.LL_RTC_TIME_Init) refers to stm32l0xx_ll_rtc.o(.text.LL_RTC_GetHourFormat) for LL_RTC_GetHourFormat
    stm32l0xx_ll_rtc.o(.text.LL_RTC_TIME_Init) refers to stm32l0xx_ll_rtc.o(.text.LL_RTC_DisableWriteProtection) for LL_RTC_DisableWriteProtection
    stm32l0xx_ll_rtc.o(.text.LL_RTC_TIME_Init) refers to stm32l0xx_ll_rtc.o(.text.LL_RTC_EnterInitMode) for LL_RTC_EnterInitMode
    stm32l0xx_ll_rtc.o(.text.LL_RTC_TIME_Init) refers to stm32l0xx_ll_rtc.o(.text.LL_RTC_TIME_Config) for LL_RTC_TIME_Config
    stm32l0xx_ll_rtc.o(.text.LL_RTC_TIME_Init) refers to uidiv.o(.text) for __aeabi_uidivmod
    stm32l0xx_ll_rtc.o(.text.LL_RTC_TIME_Init) refers to stm32l0xx_ll_rtc.o(.text.LL_RTC_DisableInitMode) for LL_RTC_DisableInitMode
    stm32l0xx_ll_rtc.o(.text.LL_RTC_TIME_Init) refers to stm32l0xx_ll_rtc.o(.text.LL_RTC_IsShadowRegBypassEnabled) for LL_RTC_IsShadowRegBypassEnabled
    stm32l0xx_ll_rtc.o(.text.LL_RTC_TIME_Init) refers to stm32l0xx_ll_rtc.o(.text.LL_RTC_WaitForSynchro) for LL_RTC_WaitForSynchro
    stm32l0xx_ll_rtc.o(.text.LL_RTC_TIME_Init) refers to stm32l0xx_ll_rtc.o(.text.LL_RTC_EnableWriteProtection) for LL_RTC_EnableWriteProtection
    stm32l0xx_ll_rtc.o(.ARM.exidx.text.LL_RTC_TIME_Init) refers to stm32l0xx_ll_rtc.o(.text.LL_RTC_TIME_Init) for [Anonymous Symbol]
    stm32l0xx_ll_rtc.o(.ARM.exidx.text.LL_RTC_GetHourFormat) refers to stm32l0xx_ll_rtc.o(.text.LL_RTC_GetHourFormat) for [Anonymous Symbol]
    stm32l0xx_ll_rtc.o(.ARM.exidx.text.LL_RTC_TIME_Config) refers to stm32l0xx_ll_rtc.o(.text.LL_RTC_TIME_Config) for [Anonymous Symbol]
    stm32l0xx_ll_rtc.o(.ARM.exidx.text.LL_RTC_IsShadowRegBypassEnabled) refers to stm32l0xx_ll_rtc.o(.text.LL_RTC_IsShadowRegBypassEnabled) for [Anonymous Symbol]
    stm32l0xx_ll_rtc.o(.ARM.exidx.text.LL_RTC_TIME_StructInit) refers to stm32l0xx_ll_rtc.o(.text.LL_RTC_TIME_StructInit) for [Anonymous Symbol]
    stm32l0xx_ll_rtc.o(.text.LL_RTC_DATE_Init) refers to stm32l0xx_ll_rtc.o(.text.LL_RTC_DisableWriteProtection) for LL_RTC_DisableWriteProtection
    stm32l0xx_ll_rtc.o(.text.LL_RTC_DATE_Init) refers to stm32l0xx_ll_rtc.o(.text.LL_RTC_EnterInitMode) for LL_RTC_EnterInitMode
    stm32l0xx_ll_rtc.o(.text.LL_RTC_DATE_Init) refers to stm32l0xx_ll_rtc.o(.text.LL_RTC_DATE_Config) for LL_RTC_DATE_Config
    stm32l0xx_ll_rtc.o(.text.LL_RTC_DATE_Init) refers to uidiv.o(.text) for __aeabi_uidivmod
    stm32l0xx_ll_rtc.o(.text.LL_RTC_DATE_Init) refers to stm32l0xx_ll_rtc.o(.text.LL_RTC_DisableInitMode) for LL_RTC_DisableInitMode
    stm32l0xx_ll_rtc.o(.text.LL_RTC_DATE_Init) refers to stm32l0xx_ll_rtc.o(.text.LL_RTC_IsShadowRegBypassEnabled) for LL_RTC_IsShadowRegBypassEnabled
    stm32l0xx_ll_rtc.o(.text.LL_RTC_DATE_Init) refers to stm32l0xx_ll_rtc.o(.text.LL_RTC_WaitForSynchro) for LL_RTC_WaitForSynchro
    stm32l0xx_ll_rtc.o(.text.LL_RTC_DATE_Init) refers to stm32l0xx_ll_rtc.o(.text.LL_RTC_EnableWriteProtection) for LL_RTC_EnableWriteProtection
    stm32l0xx_ll_rtc.o(.ARM.exidx.text.LL_RTC_DATE_Init) refers to stm32l0xx_ll_rtc.o(.text.LL_RTC_DATE_Init) for [Anonymous Symbol]
    stm32l0xx_ll_rtc.o(.ARM.exidx.text.LL_RTC_DATE_Config) refers to stm32l0xx_ll_rtc.o(.text.LL_RTC_DATE_Config) for [Anonymous Symbol]
    stm32l0xx_ll_rtc.o(.ARM.exidx.text.LL_RTC_DATE_StructInit) refers to stm32l0xx_ll_rtc.o(.text.LL_RTC_DATE_StructInit) for [Anonymous Symbol]
    stm32l0xx_ll_rtc.o(.text.LL_RTC_ALMA_Init) refers to stm32l0xx_ll_rtc.o(.text.LL_RTC_GetHourFormat) for LL_RTC_GetHourFormat
    stm32l0xx_ll_rtc.o(.text.LL_RTC_ALMA_Init) refers to stm32l0xx_ll_rtc.o(.text.LL_RTC_DisableWriteProtection) for LL_RTC_DisableWriteProtection
    stm32l0xx_ll_rtc.o(.text.LL_RTC_ALMA_Init) refers to stm32l0xx_ll_rtc.o(.text.LL_RTC_ALMA_DisableWeekday) for LL_RTC_ALMA_DisableWeekday
    stm32l0xx_ll_rtc.o(.text.LL_RTC_ALMA_Init) refers to stm32l0xx_ll_rtc.o(.text.LL_RTC_ALMA_SetDay) for LL_RTC_ALMA_SetDay
    stm32l0xx_ll_rtc.o(.text.LL_RTC_ALMA_Init) refers to uidiv.o(.text) for __aeabi_uidivmod
    stm32l0xx_ll_rtc.o(.text.LL_RTC_ALMA_Init) refers to stm32l0xx_ll_rtc.o(.text.LL_RTC_ALMA_EnableWeekday) for LL_RTC_ALMA_EnableWeekday
    stm32l0xx_ll_rtc.o(.text.LL_RTC_ALMA_Init) refers to stm32l0xx_ll_rtc.o(.text.LL_RTC_ALMA_SetWeekDay) for LL_RTC_ALMA_SetWeekDay
    stm32l0xx_ll_rtc.o(.text.LL_RTC_ALMA_Init) refers to stm32l0xx_ll_rtc.o(.text.LL_RTC_ALMA_ConfigTime) for LL_RTC_ALMA_ConfigTime
    stm32l0xx_ll_rtc.o(.text.LL_RTC_ALMA_Init) refers to stm32l0xx_ll_rtc.o(.text.LL_RTC_ALMA_SetMask) for LL_RTC_ALMA_SetMask
    stm32l0xx_ll_rtc.o(.text.LL_RTC_ALMA_Init) refers to stm32l0xx_ll_rtc.o(.text.LL_RTC_EnableWriteProtection) for LL_RTC_EnableWriteProtection
    stm32l0xx_ll_rtc.o(.ARM.exidx.text.LL_RTC_ALMA_Init) refers to stm32l0xx_ll_rtc.o(.text.LL_RTC_ALMA_Init) for [Anonymous Symbol]
    stm32l0xx_ll_rtc.o(.ARM.exidx.text.LL_RTC_ALMA_DisableWeekday) refers to stm32l0xx_ll_rtc.o(.text.LL_RTC_ALMA_DisableWeekday) for [Anonymous Symbol]
    stm32l0xx_ll_rtc.o(.ARM.exidx.text.LL_RTC_ALMA_SetDay) refers to stm32l0xx_ll_rtc.o(.text.LL_RTC_ALMA_SetDay) for [Anonymous Symbol]
    stm32l0xx_ll_rtc.o(.ARM.exidx.text.LL_RTC_ALMA_EnableWeekday) refers to stm32l0xx_ll_rtc.o(.text.LL_RTC_ALMA_EnableWeekday) for [Anonymous Symbol]
    stm32l0xx_ll_rtc.o(.ARM.exidx.text.LL_RTC_ALMA_SetWeekDay) refers to stm32l0xx_ll_rtc.o(.text.LL_RTC_ALMA_SetWeekDay) for [Anonymous Symbol]
    stm32l0xx_ll_rtc.o(.ARM.exidx.text.LL_RTC_ALMA_ConfigTime) refers to stm32l0xx_ll_rtc.o(.text.LL_RTC_ALMA_ConfigTime) for [Anonymous Symbol]
    stm32l0xx_ll_rtc.o(.ARM.exidx.text.LL_RTC_ALMA_SetMask) refers to stm32l0xx_ll_rtc.o(.text.LL_RTC_ALMA_SetMask) for [Anonymous Symbol]
    stm32l0xx_ll_rtc.o(.text.LL_RTC_ALMB_Init) refers to stm32l0xx_ll_rtc.o(.text.LL_RTC_GetHourFormat) for LL_RTC_GetHourFormat
    stm32l0xx_ll_rtc.o(.text.LL_RTC_ALMB_Init) refers to stm32l0xx_ll_rtc.o(.text.LL_RTC_DisableWriteProtection) for LL_RTC_DisableWriteProtection
    stm32l0xx_ll_rtc.o(.text.LL_RTC_ALMB_Init) refers to stm32l0xx_ll_rtc.o(.text.LL_RTC_ALMB_DisableWeekday) for LL_RTC_ALMB_DisableWeekday
    stm32l0xx_ll_rtc.o(.text.LL_RTC_ALMB_Init) refers to stm32l0xx_ll_rtc.o(.text.LL_RTC_ALMB_SetDay) for LL_RTC_ALMB_SetDay
    stm32l0xx_ll_rtc.o(.text.LL_RTC_ALMB_Init) refers to uidiv.o(.text) for __aeabi_uidivmod
    stm32l0xx_ll_rtc.o(.text.LL_RTC_ALMB_Init) refers to stm32l0xx_ll_rtc.o(.text.LL_RTC_ALMB_EnableWeekday) for LL_RTC_ALMB_EnableWeekday
    stm32l0xx_ll_rtc.o(.text.LL_RTC_ALMB_Init) refers to stm32l0xx_ll_rtc.o(.text.LL_RTC_ALMB_SetWeekDay) for LL_RTC_ALMB_SetWeekDay
    stm32l0xx_ll_rtc.o(.text.LL_RTC_ALMB_Init) refers to stm32l0xx_ll_rtc.o(.text.LL_RTC_ALMB_ConfigTime) for LL_RTC_ALMB_ConfigTime
    stm32l0xx_ll_rtc.o(.text.LL_RTC_ALMB_Init) refers to stm32l0xx_ll_rtc.o(.text.LL_RTC_ALMB_SetMask) for LL_RTC_ALMB_SetMask
    stm32l0xx_ll_rtc.o(.text.LL_RTC_ALMB_Init) refers to stm32l0xx_ll_rtc.o(.text.LL_RTC_EnableWriteProtection) for LL_RTC_EnableWriteProtection
    stm32l0xx_ll_rtc.o(.ARM.exidx.text.LL_RTC_ALMB_Init) refers to stm32l0xx_ll_rtc.o(.text.LL_RTC_ALMB_Init) for [Anonymous Symbol]
    stm32l0xx_ll_rtc.o(.ARM.exidx.text.LL_RTC_ALMB_DisableWeekday) refers to stm32l0xx_ll_rtc.o(.text.LL_RTC_ALMB_DisableWeekday) for [Anonymous Symbol]
    stm32l0xx_ll_rtc.o(.ARM.exidx.text.LL_RTC_ALMB_SetDay) refers to stm32l0xx_ll_rtc.o(.text.LL_RTC_ALMB_SetDay) for [Anonymous Symbol]
    stm32l0xx_ll_rtc.o(.ARM.exidx.text.LL_RTC_ALMB_EnableWeekday) refers to stm32l0xx_ll_rtc.o(.text.LL_RTC_ALMB_EnableWeekday) for [Anonymous Symbol]
    stm32l0xx_ll_rtc.o(.ARM.exidx.text.LL_RTC_ALMB_SetWeekDay) refers to stm32l0xx_ll_rtc.o(.text.LL_RTC_ALMB_SetWeekDay) for [Anonymous Symbol]
    stm32l0xx_ll_rtc.o(.ARM.exidx.text.LL_RTC_ALMB_ConfigTime) refers to stm32l0xx_ll_rtc.o(.text.LL_RTC_ALMB_ConfigTime) for [Anonymous Symbol]
    stm32l0xx_ll_rtc.o(.ARM.exidx.text.LL_RTC_ALMB_SetMask) refers to stm32l0xx_ll_rtc.o(.text.LL_RTC_ALMB_SetMask) for [Anonymous Symbol]
    stm32l0xx_ll_rtc.o(.ARM.exidx.text.LL_RTC_ALMA_StructInit) refers to stm32l0xx_ll_rtc.o(.text.LL_RTC_ALMA_StructInit) for [Anonymous Symbol]
    stm32l0xx_ll_rtc.o(.ARM.exidx.text.LL_RTC_ALMB_StructInit) refers to stm32l0xx_ll_rtc.o(.text.LL_RTC_ALMB_StructInit) for [Anonymous Symbol]
    stm32l0xx_ll_rtc.o(.ARM.exidx.text.LL_RTC_IsActiveFlag_INIT) refers to stm32l0xx_ll_rtc.o(.text.LL_RTC_IsActiveFlag_INIT) for [Anonymous Symbol]
    stm32l0xx_ll_rtc.o(.ARM.exidx.text.LL_RTC_EnableInitMode) refers to stm32l0xx_ll_rtc.o(.text.LL_RTC_EnableInitMode) for [Anonymous Symbol]
    stm32l0xx_ll_rtc.o(.ARM.exidx.text.LL_SYSTICK_IsActiveCounterFlag) refers to stm32l0xx_ll_rtc.o(.text.LL_SYSTICK_IsActiveCounterFlag) for [Anonymous Symbol]
    stm32l0xx_ll_rtc.o(.text.LL_RTC_ExitInitMode) refers to stm32l0xx_ll_rtc.o(.text.LL_RTC_DisableInitMode) for LL_RTC_DisableInitMode
    stm32l0xx_ll_rtc.o(.ARM.exidx.text.LL_RTC_ExitInitMode) refers to stm32l0xx_ll_rtc.o(.text.LL_RTC_ExitInitMode) for [Anonymous Symbol]
    stm32l0xx_ll_rtc.o(.ARM.exidx.text.LL_RTC_ClearFlag_RS) refers to stm32l0xx_ll_rtc.o(.text.LL_RTC_ClearFlag_RS) for [Anonymous Symbol]
    stm32l0xx_ll_rtc.o(.ARM.exidx.text.LL_RTC_IsActiveFlag_RS) refers to stm32l0xx_ll_rtc.o(.text.LL_RTC_IsActiveFlag_RS) for [Anonymous Symbol]
    stm32l0xx_ll_spi.o(.text.LL_SPI_DeInit) refers to stm32l0xx_ll_spi.o(.text.LL_APB2_GRP1_ForceReset) for LL_APB2_GRP1_ForceReset
    stm32l0xx_ll_spi.o(.text.LL_SPI_DeInit) refers to stm32l0xx_ll_spi.o(.text.LL_APB2_GRP1_ReleaseReset) for LL_APB2_GRP1_ReleaseReset
    stm32l0xx_ll_spi.o(.text.LL_SPI_DeInit) refers to stm32l0xx_ll_spi.o(.text.LL_APB1_GRP1_ForceReset) for LL_APB1_GRP1_ForceReset
    stm32l0xx_ll_spi.o(.text.LL_SPI_DeInit) refers to stm32l0xx_ll_spi.o(.text.LL_APB1_GRP1_ReleaseReset) for LL_APB1_GRP1_ReleaseReset
    stm32l0xx_ll_spi.o(.ARM.exidx.text.LL_SPI_DeInit) refers to stm32l0xx_ll_spi.o(.text.LL_SPI_DeInit) for [Anonymous Symbol]
    stm32l0xx_ll_spi.o(.ARM.exidx.text.LL_APB2_GRP1_ForceReset) refers to stm32l0xx_ll_spi.o(.text.LL_APB2_GRP1_ForceReset) for [Anonymous Symbol]
    stm32l0xx_ll_spi.o(.ARM.exidx.text.LL_APB2_GRP1_ReleaseReset) refers to stm32l0xx_ll_spi.o(.text.LL_APB2_GRP1_ReleaseReset) for [Anonymous Symbol]
    stm32l0xx_ll_spi.o(.ARM.exidx.text.LL_APB1_GRP1_ForceReset) refers to stm32l0xx_ll_spi.o(.text.LL_APB1_GRP1_ForceReset) for [Anonymous Symbol]
    stm32l0xx_ll_spi.o(.ARM.exidx.text.LL_APB1_GRP1_ReleaseReset) refers to stm32l0xx_ll_spi.o(.text.LL_APB1_GRP1_ReleaseReset) for [Anonymous Symbol]
    stm32l0xx_ll_spi.o(.text.LL_SPI_Init) refers to stm32l0xx_ll_spi.o(.text.LL_SPI_IsEnabled) for LL_SPI_IsEnabled
    stm32l0xx_ll_spi.o(.text.LL_SPI_Init) refers to stm32l0xx_ll_spi.o(.text.LL_SPI_SetCRCPolynomial) for LL_SPI_SetCRCPolynomial
    stm32l0xx_ll_spi.o(.ARM.exidx.text.LL_SPI_Init) refers to stm32l0xx_ll_spi.o(.text.LL_SPI_Init) for [Anonymous Symbol]
    stm32l0xx_ll_spi.o(.ARM.exidx.text.LL_SPI_IsEnabled) refers to stm32l0xx_ll_spi.o(.text.LL_SPI_IsEnabled) for [Anonymous Symbol]
    stm32l0xx_ll_spi.o(.ARM.exidx.text.LL_SPI_SetCRCPolynomial) refers to stm32l0xx_ll_spi.o(.text.LL_SPI_SetCRCPolynomial) for [Anonymous Symbol]
    stm32l0xx_ll_spi.o(.ARM.exidx.text.LL_SPI_StructInit) refers to stm32l0xx_ll_spi.o(.text.LL_SPI_StructInit) for [Anonymous Symbol]
    stm32l0xx_ll_spi.o(.text.LL_I2S_DeInit) refers to stm32l0xx_ll_spi.o(.text.LL_SPI_DeInit) for LL_SPI_DeInit
    stm32l0xx_ll_spi.o(.ARM.exidx.text.LL_I2S_DeInit) refers to stm32l0xx_ll_spi.o(.text.LL_I2S_DeInit) for [Anonymous Symbol]
    stm32l0xx_ll_spi.o(.text.LL_I2S_Init) refers to stm32l0xx_ll_spi.o(.text.LL_I2S_IsEnabled) for LL_I2S_IsEnabled
    stm32l0xx_ll_spi.o(.text.LL_I2S_Init) refers to stm32l0xx_ll_rcc.o(.text.LL_RCC_GetSystemClocksFreq) for LL_RCC_GetSystemClocksFreq
    stm32l0xx_ll_spi.o(.text.LL_I2S_Init) refers to uidiv.o(.text) for __aeabi_uidiv
    stm32l0xx_ll_spi.o(.ARM.exidx.text.LL_I2S_Init) refers to stm32l0xx_ll_spi.o(.text.LL_I2S_Init) for [Anonymous Symbol]
    stm32l0xx_ll_spi.o(.ARM.exidx.text.LL_I2S_IsEnabled) refers to stm32l0xx_ll_spi.o(.text.LL_I2S_IsEnabled) for [Anonymous Symbol]
    stm32l0xx_ll_spi.o(.ARM.exidx.text.LL_I2S_StructInit) refers to stm32l0xx_ll_spi.o(.text.LL_I2S_StructInit) for [Anonymous Symbol]
    stm32l0xx_ll_spi.o(.ARM.exidx.text.LL_I2S_ConfigPrescaler) refers to stm32l0xx_ll_spi.o(.text.LL_I2S_ConfigPrescaler) for [Anonymous Symbol]
    stm32l0xx_ll_dma.o(.text.LL_DMA_DeInit) refers to stm32l0xx_ll_dma.o(.text.LL_AHB1_GRP1_ForceReset) for LL_AHB1_GRP1_ForceReset
    stm32l0xx_ll_dma.o(.text.LL_DMA_DeInit) refers to stm32l0xx_ll_dma.o(.text.LL_AHB1_GRP1_ReleaseReset) for LL_AHB1_GRP1_ReleaseReset
    stm32l0xx_ll_dma.o(.text.LL_DMA_DeInit) refers to stm32l0xx_ll_dma.o(.text.LL_DMA_SetPeriphRequest) for LL_DMA_SetPeriphRequest
    stm32l0xx_ll_dma.o(.text.LL_DMA_DeInit) refers to stm32l0xx_ll_dma.o(.text.LL_DMA_ClearFlag_GI1) for LL_DMA_ClearFlag_GI1
    stm32l0xx_ll_dma.o(.text.LL_DMA_DeInit) refers to stm32l0xx_ll_dma.o(.text.LL_DMA_ClearFlag_GI2) for LL_DMA_ClearFlag_GI2
    stm32l0xx_ll_dma.o(.text.LL_DMA_DeInit) refers to stm32l0xx_ll_dma.o(.text.LL_DMA_ClearFlag_GI3) for LL_DMA_ClearFlag_GI3
    stm32l0xx_ll_dma.o(.text.LL_DMA_DeInit) refers to stm32l0xx_ll_dma.o(.text.LL_DMA_ClearFlag_GI4) for LL_DMA_ClearFlag_GI4
    stm32l0xx_ll_dma.o(.text.LL_DMA_DeInit) refers to stm32l0xx_ll_dma.o(.text.LL_DMA_ClearFlag_GI5) for LL_DMA_ClearFlag_GI5
    stm32l0xx_ll_dma.o(.text.LL_DMA_DeInit) refers to stm32l0xx_ll_dma.o(.text.LL_DMA_ClearFlag_GI6) for LL_DMA_ClearFlag_GI6
    stm32l0xx_ll_dma.o(.text.LL_DMA_DeInit) refers to stm32l0xx_ll_dma.o(.text.LL_DMA_ClearFlag_GI7) for LL_DMA_ClearFlag_GI7
    stm32l0xx_ll_dma.o(.ARM.exidx.text.LL_DMA_DeInit) refers to stm32l0xx_ll_dma.o(.text.LL_DMA_DeInit) for [Anonymous Symbol]
    stm32l0xx_ll_dma.o(.ARM.exidx.text.LL_AHB1_GRP1_ForceReset) refers to stm32l0xx_ll_dma.o(.text.LL_AHB1_GRP1_ForceReset) for [Anonymous Symbol]
    stm32l0xx_ll_dma.o(.ARM.exidx.text.LL_AHB1_GRP1_ReleaseReset) refers to stm32l0xx_ll_dma.o(.text.LL_AHB1_GRP1_ReleaseReset) for [Anonymous Symbol]
    stm32l0xx_ll_dma.o(.ARM.exidx.text.LL_DMA_SetPeriphRequest) refers to stm32l0xx_ll_dma.o(.text.LL_DMA_SetPeriphRequest) for [Anonymous Symbol]
    stm32l0xx_ll_dma.o(.ARM.exidx.text.LL_DMA_ClearFlag_GI1) refers to stm32l0xx_ll_dma.o(.text.LL_DMA_ClearFlag_GI1) for [Anonymous Symbol]
    stm32l0xx_ll_dma.o(.ARM.exidx.text.LL_DMA_ClearFlag_GI2) refers to stm32l0xx_ll_dma.o(.text.LL_DMA_ClearFlag_GI2) for [Anonymous Symbol]
    stm32l0xx_ll_dma.o(.ARM.exidx.text.LL_DMA_ClearFlag_GI3) refers to stm32l0xx_ll_dma.o(.text.LL_DMA_ClearFlag_GI3) for [Anonymous Symbol]
    stm32l0xx_ll_dma.o(.ARM.exidx.text.LL_DMA_ClearFlag_GI4) refers to stm32l0xx_ll_dma.o(.text.LL_DMA_ClearFlag_GI4) for [Anonymous Symbol]
    stm32l0xx_ll_dma.o(.ARM.exidx.text.LL_DMA_ClearFlag_GI5) refers to stm32l0xx_ll_dma.o(.text.LL_DMA_ClearFlag_GI5) for [Anonymous Symbol]
    stm32l0xx_ll_dma.o(.ARM.exidx.text.LL_DMA_ClearFlag_GI6) refers to stm32l0xx_ll_dma.o(.text.LL_DMA_ClearFlag_GI6) for [Anonymous Symbol]
    stm32l0xx_ll_dma.o(.ARM.exidx.text.LL_DMA_ClearFlag_GI7) refers to stm32l0xx_ll_dma.o(.text.LL_DMA_ClearFlag_GI7) for [Anonymous Symbol]
    stm32l0xx_ll_dma.o(.text.LL_DMA_Init) refers to stm32l0xx_ll_dma.o(.text.LL_DMA_ConfigTransfer) for LL_DMA_ConfigTransfer
    stm32l0xx_ll_dma.o(.text.LL_DMA_Init) refers to stm32l0xx_ll_dma.o(.text.LL_DMA_SetMemoryAddress) for LL_DMA_SetMemoryAddress
    stm32l0xx_ll_dma.o(.text.LL_DMA_Init) refers to stm32l0xx_ll_dma.o(.text.LL_DMA_SetPeriphAddress) for LL_DMA_SetPeriphAddress
    stm32l0xx_ll_dma.o(.text.LL_DMA_Init) refers to stm32l0xx_ll_dma.o(.text.LL_DMA_SetDataLength) for LL_DMA_SetDataLength
    stm32l0xx_ll_dma.o(.text.LL_DMA_Init) refers to stm32l0xx_ll_dma.o(.text.LL_DMA_SetPeriphRequest) for LL_DMA_SetPeriphRequest
    stm32l0xx_ll_dma.o(.ARM.exidx.text.LL_DMA_Init) refers to stm32l0xx_ll_dma.o(.text.LL_DMA_Init) for [Anonymous Symbol]
    stm32l0xx_ll_dma.o(.text.LL_DMA_ConfigTransfer) refers to stm32l0xx_ll_dma.o(.rodata.CHANNEL_OFFSET_TAB) for [Anonymous Symbol]
    stm32l0xx_ll_dma.o(.ARM.exidx.text.LL_DMA_ConfigTransfer) refers to stm32l0xx_ll_dma.o(.text.LL_DMA_ConfigTransfer) for [Anonymous Symbol]
    stm32l0xx_ll_dma.o(.text.LL_DMA_SetMemoryAddress) refers to stm32l0xx_ll_dma.o(.rodata.CHANNEL_OFFSET_TAB) for [Anonymous Symbol]
    stm32l0xx_ll_dma.o(.ARM.exidx.text.LL_DMA_SetMemoryAddress) refers to stm32l0xx_ll_dma.o(.text.LL_DMA_SetMemoryAddress) for [Anonymous Symbol]
    stm32l0xx_ll_dma.o(.text.LL_DMA_SetPeriphAddress) refers to stm32l0xx_ll_dma.o(.rodata.CHANNEL_OFFSET_TAB) for [Anonymous Symbol]
    stm32l0xx_ll_dma.o(.ARM.exidx.text.LL_DMA_SetPeriphAddress) refers to stm32l0xx_ll_dma.o(.text.LL_DMA_SetPeriphAddress) for [Anonymous Symbol]
    stm32l0xx_ll_dma.o(.text.LL_DMA_SetDataLength) refers to stm32l0xx_ll_dma.o(.rodata.CHANNEL_OFFSET_TAB) for [Anonymous Symbol]
    stm32l0xx_ll_dma.o(.ARM.exidx.text.LL_DMA_SetDataLength) refers to stm32l0xx_ll_dma.o(.text.LL_DMA_SetDataLength) for [Anonymous Symbol]
    stm32l0xx_ll_dma.o(.ARM.exidx.text.LL_DMA_StructInit) refers to stm32l0xx_ll_dma.o(.text.LL_DMA_StructInit) for [Anonymous Symbol]
    stm32l0xx_ll_pwr.o(.text.LL_PWR_DeInit) refers to stm32l0xx_ll_pwr.o(.text.LL_APB1_GRP1_ForceReset) for LL_APB1_GRP1_ForceReset
    stm32l0xx_ll_pwr.o(.text.LL_PWR_DeInit) refers to stm32l0xx_ll_pwr.o(.text.LL_APB1_GRP1_ReleaseReset) for LL_APB1_GRP1_ReleaseReset
    stm32l0xx_ll_pwr.o(.ARM.exidx.text.LL_PWR_DeInit) refers to stm32l0xx_ll_pwr.o(.text.LL_PWR_DeInit) for [Anonymous Symbol]
    stm32l0xx_ll_pwr.o(.ARM.exidx.text.LL_APB1_GRP1_ForceReset) refers to stm32l0xx_ll_pwr.o(.text.LL_APB1_GRP1_ForceReset) for [Anonymous Symbol]
    stm32l0xx_ll_pwr.o(.ARM.exidx.text.LL_APB1_GRP1_ReleaseReset) refers to stm32l0xx_ll_pwr.o(.text.LL_APB1_GRP1_ReleaseReset) for [Anonymous Symbol]
    stm32l0xx_ll_exti.o(.ARM.exidx.text.LL_EXTI_DeInit) refers to stm32l0xx_ll_exti.o(.text.LL_EXTI_DeInit) for [Anonymous Symbol]
    stm32l0xx_ll_exti.o(.text.LL_EXTI_Init) refers to stm32l0xx_ll_exti.o(.text.LL_EXTI_DisableEvent_0_31) for LL_EXTI_DisableEvent_0_31
    stm32l0xx_ll_exti.o(.text.LL_EXTI_Init) refers to stm32l0xx_ll_exti.o(.text.LL_EXTI_EnableIT_0_31) for LL_EXTI_EnableIT_0_31
    stm32l0xx_ll_exti.o(.text.LL_EXTI_Init) refers to stm32l0xx_ll_exti.o(.text.LL_EXTI_DisableIT_0_31) for LL_EXTI_DisableIT_0_31
    stm32l0xx_ll_exti.o(.text.LL_EXTI_Init) refers to stm32l0xx_ll_exti.o(.text.LL_EXTI_EnableEvent_0_31) for LL_EXTI_EnableEvent_0_31
    stm32l0xx_ll_exti.o(.text.LL_EXTI_Init) refers to stm32l0xx_ll_exti.o(.text.LL_EXTI_DisableFallingTrig_0_31) for LL_EXTI_DisableFallingTrig_0_31
    stm32l0xx_ll_exti.o(.text.LL_EXTI_Init) refers to stm32l0xx_ll_exti.o(.text.LL_EXTI_EnableRisingTrig_0_31) for LL_EXTI_EnableRisingTrig_0_31
    stm32l0xx_ll_exti.o(.text.LL_EXTI_Init) refers to stm32l0xx_ll_exti.o(.text.LL_EXTI_DisableRisingTrig_0_31) for LL_EXTI_DisableRisingTrig_0_31
    stm32l0xx_ll_exti.o(.text.LL_EXTI_Init) refers to stm32l0xx_ll_exti.o(.text.LL_EXTI_EnableFallingTrig_0_31) for LL_EXTI_EnableFallingTrig_0_31
    stm32l0xx_ll_exti.o(.ARM.exidx.text.LL_EXTI_Init) refers to stm32l0xx_ll_exti.o(.text.LL_EXTI_Init) for [Anonymous Symbol]
    stm32l0xx_ll_exti.o(.ARM.exidx.text.LL_EXTI_DisableEvent_0_31) refers to stm32l0xx_ll_exti.o(.text.LL_EXTI_DisableEvent_0_31) for [Anonymous Symbol]
    stm32l0xx_ll_exti.o(.ARM.exidx.text.LL_EXTI_EnableIT_0_31) refers to stm32l0xx_ll_exti.o(.text.LL_EXTI_EnableIT_0_31) for [Anonymous Symbol]
    stm32l0xx_ll_exti.o(.ARM.exidx.text.LL_EXTI_DisableIT_0_31) refers to stm32l0xx_ll_exti.o(.text.LL_EXTI_DisableIT_0_31) for [Anonymous Symbol]
    stm32l0xx_ll_exti.o(.ARM.exidx.text.LL_EXTI_EnableEvent_0_31) refers to stm32l0xx_ll_exti.o(.text.LL_EXTI_EnableEvent_0_31) for [Anonymous Symbol]
    stm32l0xx_ll_exti.o(.ARM.exidx.text.LL_EXTI_DisableFallingTrig_0_31) refers to stm32l0xx_ll_exti.o(.text.LL_EXTI_DisableFallingTrig_0_31) for [Anonymous Symbol]
    stm32l0xx_ll_exti.o(.ARM.exidx.text.LL_EXTI_EnableRisingTrig_0_31) refers to stm32l0xx_ll_exti.o(.text.LL_EXTI_EnableRisingTrig_0_31) for [Anonymous Symbol]
    stm32l0xx_ll_exti.o(.ARM.exidx.text.LL_EXTI_DisableRisingTrig_0_31) refers to stm32l0xx_ll_exti.o(.text.LL_EXTI_DisableRisingTrig_0_31) for [Anonymous Symbol]
    stm32l0xx_ll_exti.o(.ARM.exidx.text.LL_EXTI_EnableFallingTrig_0_31) refers to stm32l0xx_ll_exti.o(.text.LL_EXTI_EnableFallingTrig_0_31) for [Anonymous Symbol]
    stm32l0xx_ll_exti.o(.ARM.exidx.text.LL_EXTI_StructInit) refers to stm32l0xx_ll_exti.o(.text.LL_EXTI_StructInit) for [Anonymous Symbol]
    stm32l0xx_ll_tim.o(.text.LL_TIM_DeInit) refers to stm32l0xx_ll_tim.o(.text.LL_APB1_GRP1_ForceReset) for LL_APB1_GRP1_ForceReset
    stm32l0xx_ll_tim.o(.text.LL_TIM_DeInit) refers to stm32l0xx_ll_tim.o(.text.LL_APB1_GRP1_ReleaseReset) for LL_APB1_GRP1_ReleaseReset
    stm32l0xx_ll_tim.o(.text.LL_TIM_DeInit) refers to stm32l0xx_ll_tim.o(.text.LL_APB2_GRP1_ForceReset) for LL_APB2_GRP1_ForceReset
    stm32l0xx_ll_tim.o(.text.LL_TIM_DeInit) refers to stm32l0xx_ll_tim.o(.text.LL_APB2_GRP1_ReleaseReset) for LL_APB2_GRP1_ReleaseReset
    stm32l0xx_ll_tim.o(.ARM.exidx.text.LL_TIM_DeInit) refers to stm32l0xx_ll_tim.o(.text.LL_TIM_DeInit) for [Anonymous Symbol]
    stm32l0xx_ll_tim.o(.ARM.exidx.text.LL_APB1_GRP1_ForceReset) refers to stm32l0xx_ll_tim.o(.text.LL_APB1_GRP1_ForceReset) for [Anonymous Symbol]
    stm32l0xx_ll_tim.o(.ARM.exidx.text.LL_APB1_GRP1_ReleaseReset) refers to stm32l0xx_ll_tim.o(.text.LL_APB1_GRP1_ReleaseReset) for [Anonymous Symbol]
    stm32l0xx_ll_tim.o(.ARM.exidx.text.LL_APB2_GRP1_ForceReset) refers to stm32l0xx_ll_tim.o(.text.LL_APB2_GRP1_ForceReset) for [Anonymous Symbol]
    stm32l0xx_ll_tim.o(.ARM.exidx.text.LL_APB2_GRP1_ReleaseReset) refers to stm32l0xx_ll_tim.o(.text.LL_APB2_GRP1_ReleaseReset) for [Anonymous Symbol]
    stm32l0xx_ll_tim.o(.ARM.exidx.text.LL_TIM_StructInit) refers to stm32l0xx_ll_tim.o(.text.LL_TIM_StructInit) for [Anonymous Symbol]
    stm32l0xx_ll_tim.o(.text.LL_TIM_Init) refers to stm32l0xx_ll_tim.o(.text.LL_TIM_SetAutoReload) for LL_TIM_SetAutoReload
    stm32l0xx_ll_tim.o(.text.LL_TIM_Init) refers to stm32l0xx_ll_tim.o(.text.LL_TIM_SetPrescaler) for LL_TIM_SetPrescaler
    stm32l0xx_ll_tim.o(.text.LL_TIM_Init) refers to stm32l0xx_ll_tim.o(.text.LL_TIM_GenerateEvent_UPDATE) for LL_TIM_GenerateEvent_UPDATE
    stm32l0xx_ll_tim.o(.ARM.exidx.text.LL_TIM_Init) refers to stm32l0xx_ll_tim.o(.text.LL_TIM_Init) for [Anonymous Symbol]
    stm32l0xx_ll_tim.o(.ARM.exidx.text.LL_TIM_SetAutoReload) refers to stm32l0xx_ll_tim.o(.text.LL_TIM_SetAutoReload) for [Anonymous Symbol]
    stm32l0xx_ll_tim.o(.ARM.exidx.text.LL_TIM_SetPrescaler) refers to stm32l0xx_ll_tim.o(.text.LL_TIM_SetPrescaler) for [Anonymous Symbol]
    stm32l0xx_ll_tim.o(.ARM.exidx.text.LL_TIM_GenerateEvent_UPDATE) refers to stm32l0xx_ll_tim.o(.text.LL_TIM_GenerateEvent_UPDATE) for [Anonymous Symbol]
    stm32l0xx_ll_tim.o(.ARM.exidx.text.LL_TIM_OC_StructInit) refers to stm32l0xx_ll_tim.o(.text.LL_TIM_OC_StructInit) for [Anonymous Symbol]
    stm32l0xx_ll_tim.o(.text.LL_TIM_OC_Init) refers to stm32l0xx_ll_tim.o(.text.OC1Config) for OC1Config
    stm32l0xx_ll_tim.o(.text.LL_TIM_OC_Init) refers to stm32l0xx_ll_tim.o(.text.OC2Config) for OC2Config
    stm32l0xx_ll_tim.o(.text.LL_TIM_OC_Init) refers to stm32l0xx_ll_tim.o(.text.OC3Config) for OC3Config
    stm32l0xx_ll_tim.o(.text.LL_TIM_OC_Init) refers to stm32l0xx_ll_tim.o(.text.OC4Config) for OC4Config
    stm32l0xx_ll_tim.o(.ARM.exidx.text.LL_TIM_OC_Init) refers to stm32l0xx_ll_tim.o(.text.LL_TIM_OC_Init) for [Anonymous Symbol]
    stm32l0xx_ll_tim.o(.text.OC1Config) refers to stm32l0xx_ll_tim.o(.text.LL_TIM_OC_SetCompareCH1) for LL_TIM_OC_SetCompareCH1
    stm32l0xx_ll_tim.o(.ARM.exidx.text.OC1Config) refers to stm32l0xx_ll_tim.o(.text.OC1Config) for [Anonymous Symbol]
    stm32l0xx_ll_tim.o(.text.OC2Config) refers to stm32l0xx_ll_tim.o(.text.LL_TIM_OC_SetCompareCH2) for LL_TIM_OC_SetCompareCH2
    stm32l0xx_ll_tim.o(.ARM.exidx.text.OC2Config) refers to stm32l0xx_ll_tim.o(.text.OC2Config) for [Anonymous Symbol]
    stm32l0xx_ll_tim.o(.text.OC3Config) refers to stm32l0xx_ll_tim.o(.text.LL_TIM_OC_SetCompareCH3) for LL_TIM_OC_SetCompareCH3
    stm32l0xx_ll_tim.o(.ARM.exidx.text.OC3Config) refers to stm32l0xx_ll_tim.o(.text.OC3Config) for [Anonymous Symbol]
    stm32l0xx_ll_tim.o(.text.OC4Config) refers to stm32l0xx_ll_tim.o(.text.LL_TIM_OC_SetCompareCH4) for LL_TIM_OC_SetCompareCH4
    stm32l0xx_ll_tim.o(.ARM.exidx.text.OC4Config) refers to stm32l0xx_ll_tim.o(.text.OC4Config) for [Anonymous Symbol]
    stm32l0xx_ll_tim.o(.ARM.exidx.text.LL_TIM_IC_StructInit) refers to stm32l0xx_ll_tim.o(.text.LL_TIM_IC_StructInit) for [Anonymous Symbol]
    stm32l0xx_ll_tim.o(.text.LL_TIM_IC_Init) refers to stm32l0xx_ll_tim.o(.text.IC1Config) for IC1Config
    stm32l0xx_ll_tim.o(.text.LL_TIM_IC_Init) refers to stm32l0xx_ll_tim.o(.text.IC2Config) for IC2Config
    stm32l0xx_ll_tim.o(.text.LL_TIM_IC_Init) refers to stm32l0xx_ll_tim.o(.text.IC3Config) for IC3Config
    stm32l0xx_ll_tim.o(.text.LL_TIM_IC_Init) refers to stm32l0xx_ll_tim.o(.text.IC4Config) for IC4Config
    stm32l0xx_ll_tim.o(.ARM.exidx.text.LL_TIM_IC_Init) refers to stm32l0xx_ll_tim.o(.text.LL_TIM_IC_Init) for [Anonymous Symbol]
    stm32l0xx_ll_tim.o(.ARM.exidx.text.IC1Config) refers to stm32l0xx_ll_tim.o(.text.IC1Config) for [Anonymous Symbol]
    stm32l0xx_ll_tim.o(.ARM.exidx.text.IC2Config) refers to stm32l0xx_ll_tim.o(.text.IC2Config) for [Anonymous Symbol]
    stm32l0xx_ll_tim.o(.ARM.exidx.text.IC3Config) refers to stm32l0xx_ll_tim.o(.text.IC3Config) for [Anonymous Symbol]
    stm32l0xx_ll_tim.o(.ARM.exidx.text.IC4Config) refers to stm32l0xx_ll_tim.o(.text.IC4Config) for [Anonymous Symbol]
    stm32l0xx_ll_tim.o(.ARM.exidx.text.LL_TIM_ENCODER_StructInit) refers to stm32l0xx_ll_tim.o(.text.LL_TIM_ENCODER_StructInit) for [Anonymous Symbol]
    stm32l0xx_ll_tim.o(.text.LL_TIM_ENCODER_Init) refers to stm32l0xx_ll_tim.o(.text.LL_TIM_SetEncoderMode) for LL_TIM_SetEncoderMode
    stm32l0xx_ll_tim.o(.ARM.exidx.text.LL_TIM_ENCODER_Init) refers to stm32l0xx_ll_tim.o(.text.LL_TIM_ENCODER_Init) for [Anonymous Symbol]
    stm32l0xx_ll_tim.o(.ARM.exidx.text.LL_TIM_SetEncoderMode) refers to stm32l0xx_ll_tim.o(.text.LL_TIM_SetEncoderMode) for [Anonymous Symbol]
    stm32l0xx_ll_tim.o(.ARM.exidx.text.LL_TIM_OC_SetCompareCH1) refers to stm32l0xx_ll_tim.o(.text.LL_TIM_OC_SetCompareCH1) for [Anonymous Symbol]
    stm32l0xx_ll_tim.o(.ARM.exidx.text.LL_TIM_OC_SetCompareCH2) refers to stm32l0xx_ll_tim.o(.text.LL_TIM_OC_SetCompareCH2) for [Anonymous Symbol]
    stm32l0xx_ll_tim.o(.ARM.exidx.text.LL_TIM_OC_SetCompareCH3) refers to stm32l0xx_ll_tim.o(.text.LL_TIM_OC_SetCompareCH3) for [Anonymous Symbol]
    stm32l0xx_ll_tim.o(.ARM.exidx.text.LL_TIM_OC_SetCompareCH4) refers to stm32l0xx_ll_tim.o(.text.LL_TIM_OC_SetCompareCH4) for [Anonymous Symbol]
    stm32l0xx_ll_usart.o(.text.LL_USART_DeInit) refers to stm32l0xx_ll_usart.o(.text.LL_APB2_GRP1_ForceReset) for LL_APB2_GRP1_ForceReset
    stm32l0xx_ll_usart.o(.text.LL_USART_DeInit) refers to stm32l0xx_ll_usart.o(.text.LL_APB2_GRP1_ReleaseReset) for LL_APB2_GRP1_ReleaseReset
    stm32l0xx_ll_usart.o(.text.LL_USART_DeInit) refers to stm32l0xx_ll_usart.o(.text.LL_APB1_GRP1_ForceReset) for LL_APB1_GRP1_ForceReset
    stm32l0xx_ll_usart.o(.text.LL_USART_DeInit) refers to stm32l0xx_ll_usart.o(.text.LL_APB1_GRP1_ReleaseReset) for LL_APB1_GRP1_ReleaseReset
    stm32l0xx_ll_usart.o(.ARM.exidx.text.LL_USART_DeInit) refers to stm32l0xx_ll_usart.o(.text.LL_USART_DeInit) for [Anonymous Symbol]
    stm32l0xx_ll_usart.o(.ARM.exidx.text.LL_APB2_GRP1_ForceReset) refers to stm32l0xx_ll_usart.o(.text.LL_APB2_GRP1_ForceReset) for [Anonymous Symbol]
    stm32l0xx_ll_usart.o(.ARM.exidx.text.LL_APB2_GRP1_ReleaseReset) refers to stm32l0xx_ll_usart.o(.text.LL_APB2_GRP1_ReleaseReset) for [Anonymous Symbol]
    stm32l0xx_ll_usart.o(.ARM.exidx.text.LL_APB1_GRP1_ForceReset) refers to stm32l0xx_ll_usart.o(.text.LL_APB1_GRP1_ForceReset) for [Anonymous Symbol]
    stm32l0xx_ll_usart.o(.ARM.exidx.text.LL_APB1_GRP1_ReleaseReset) refers to stm32l0xx_ll_usart.o(.text.LL_APB1_GRP1_ReleaseReset) for [Anonymous Symbol]
    stm32l0xx_ll_usart.o(.text.LL_USART_Init) refers to stm32l0xx_ll_usart.o(.text.LL_USART_IsEnabled) for LL_USART_IsEnabled
    stm32l0xx_ll_usart.o(.text.LL_USART_Init) refers to stm32l0xx_ll_usart.o(.text.LL_USART_SetStopBitsLength) for LL_USART_SetStopBitsLength
    stm32l0xx_ll_usart.o(.text.LL_USART_Init) refers to stm32l0xx_ll_usart.o(.text.LL_USART_SetHWFlowCtrl) for LL_USART_SetHWFlowCtrl
    stm32l0xx_ll_usart.o(.text.LL_USART_Init) refers to stm32l0xx_ll_rcc.o(.text.LL_RCC_GetUSARTClockFreq) for LL_RCC_GetUSARTClockFreq
    stm32l0xx_ll_usart.o(.text.LL_USART_Init) refers to stm32l0xx_ll_rcc.o(.text.LL_RCC_GetSystemClocksFreq) for LL_RCC_GetSystemClocksFreq
    stm32l0xx_ll_usart.o(.text.LL_USART_Init) refers to stm32l0xx_ll_usart.o(.text.LL_USART_SetBaudRate) for LL_USART_SetBaudRate
    stm32l0xx_ll_usart.o(.ARM.exidx.text.LL_USART_Init) refers to stm32l0xx_ll_usart.o(.text.LL_USART_Init) for [Anonymous Symbol]
    stm32l0xx_ll_usart.o(.ARM.exidx.text.LL_USART_IsEnabled) refers to stm32l0xx_ll_usart.o(.text.LL_USART_IsEnabled) for [Anonymous Symbol]
    stm32l0xx_ll_usart.o(.ARM.exidx.text.LL_USART_SetStopBitsLength) refers to stm32l0xx_ll_usart.o(.text.LL_USART_SetStopBitsLength) for [Anonymous Symbol]
    stm32l0xx_ll_usart.o(.ARM.exidx.text.LL_USART_SetHWFlowCtrl) refers to stm32l0xx_ll_usart.o(.text.LL_USART_SetHWFlowCtrl) for [Anonymous Symbol]
    stm32l0xx_ll_usart.o(.text.LL_USART_SetBaudRate) refers to uidiv.o(.text) for __aeabi_uidiv
    stm32l0xx_ll_usart.o(.ARM.exidx.text.LL_USART_SetBaudRate) refers to stm32l0xx_ll_usart.o(.text.LL_USART_SetBaudRate) for [Anonymous Symbol]
    stm32l0xx_ll_usart.o(.ARM.exidx.text.LL_USART_StructInit) refers to stm32l0xx_ll_usart.o(.text.LL_USART_StructInit) for [Anonymous Symbol]
    stm32l0xx_ll_usart.o(.text.LL_USART_ClockInit) refers to stm32l0xx_ll_usart.o(.text.LL_USART_IsEnabled) for LL_USART_IsEnabled
    stm32l0xx_ll_usart.o(.text.LL_USART_ClockInit) refers to stm32l0xx_ll_usart.o(.text.LL_USART_DisableSCLKOutput) for LL_USART_DisableSCLKOutput
    stm32l0xx_ll_usart.o(.ARM.exidx.text.LL_USART_ClockInit) refers to stm32l0xx_ll_usart.o(.text.LL_USART_ClockInit) for [Anonymous Symbol]
    stm32l0xx_ll_usart.o(.ARM.exidx.text.LL_USART_DisableSCLKOutput) refers to stm32l0xx_ll_usart.o(.text.LL_USART_DisableSCLKOutput) for [Anonymous Symbol]
    stm32l0xx_ll_usart.o(.ARM.exidx.text.LL_USART_ClockStructInit) refers to stm32l0xx_ll_usart.o(.text.LL_USART_ClockStructInit) for [Anonymous Symbol]
    stm32l0xx_ll_rcc.o(.text.LL_RCC_DeInit) refers to stm32l0xx_ll_rcc.o(.text.LL_RCC_MSI_Enable) for LL_RCC_MSI_Enable
    stm32l0xx_ll_rcc.o(.text.LL_RCC_DeInit) refers to stm32l0xx_ll_rcc.o(.text.LL_RCC_MSI_IsReady) for LL_RCC_MSI_IsReady
    stm32l0xx_ll_rcc.o(.text.LL_RCC_DeInit) refers to stm32l0xx_ll_rcc.o(.text.LL_RCC_MSI_SetRange) for LL_RCC_MSI_SetRange
    stm32l0xx_ll_rcc.o(.text.LL_RCC_DeInit) refers to stm32l0xx_ll_rcc.o(.text.LL_RCC_MSI_SetCalibTrimming) for LL_RCC_MSI_SetCalibTrimming
    stm32l0xx_ll_rcc.o(.text.LL_RCC_DeInit) refers to stm32l0xx_ll_rcc.o(.text.LL_RCC_HSI_SetCalibTrimming) for LL_RCC_HSI_SetCalibTrimming
    stm32l0xx_ll_rcc.o(.text.LL_RCC_DeInit) refers to stm32l0xx_ll_rcc.o(.text.LL_RCC_HSE_DisableBypass) for LL_RCC_HSE_DisableBypass
    stm32l0xx_ll_rcc.o(.text.LL_RCC_DeInit) refers to stm32l0xx_ll_rcc.o(.text.LL_RCC_PLL_IsReady) for LL_RCC_PLL_IsReady
    stm32l0xx_ll_rcc.o(.text.LL_RCC_DeInit) refers to stm32l0xx_ll_rcc.o(.text.LL_RCC_ClearResetFlags) for LL_RCC_ClearResetFlags
    stm32l0xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_DeInit) refers to stm32l0xx_ll_rcc.o(.text.LL_RCC_DeInit) for [Anonymous Symbol]
    stm32l0xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_MSI_Enable) refers to stm32l0xx_ll_rcc.o(.text.LL_RCC_MSI_Enable) for [Anonymous Symbol]
    stm32l0xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_MSI_IsReady) refers to stm32l0xx_ll_rcc.o(.text.LL_RCC_MSI_IsReady) for [Anonymous Symbol]
    stm32l0xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_MSI_SetRange) refers to stm32l0xx_ll_rcc.o(.text.LL_RCC_MSI_SetRange) for [Anonymous Symbol]
    stm32l0xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_MSI_SetCalibTrimming) refers to stm32l0xx_ll_rcc.o(.text.LL_RCC_MSI_SetCalibTrimming) for [Anonymous Symbol]
    stm32l0xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_HSI_SetCalibTrimming) refers to stm32l0xx_ll_rcc.o(.text.LL_RCC_HSI_SetCalibTrimming) for [Anonymous Symbol]
    stm32l0xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_HSE_DisableBypass) refers to stm32l0xx_ll_rcc.o(.text.LL_RCC_HSE_DisableBypass) for [Anonymous Symbol]
    stm32l0xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_PLL_IsReady) refers to stm32l0xx_ll_rcc.o(.text.LL_RCC_PLL_IsReady) for [Anonymous Symbol]
    stm32l0xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_ClearResetFlags) refers to stm32l0xx_ll_rcc.o(.text.LL_RCC_ClearResetFlags) for [Anonymous Symbol]
    stm32l0xx_ll_rcc.o(.text.LL_RCC_GetSystemClocksFreq) refers to stm32l0xx_ll_rcc.o(.text.RCC_GetSystemClockFreq) for RCC_GetSystemClockFreq
    stm32l0xx_ll_rcc.o(.text.LL_RCC_GetSystemClocksFreq) refers to stm32l0xx_ll_rcc.o(.text.RCC_GetHCLKClockFreq) for RCC_GetHCLKClockFreq
    stm32l0xx_ll_rcc.o(.text.LL_RCC_GetSystemClocksFreq) refers to stm32l0xx_ll_rcc.o(.text.RCC_GetPCLK1ClockFreq) for RCC_GetPCLK1ClockFreq
    stm32l0xx_ll_rcc.o(.text.LL_RCC_GetSystemClocksFreq) refers to stm32l0xx_ll_rcc.o(.text.RCC_GetPCLK2ClockFreq) for RCC_GetPCLK2ClockFreq
    stm32l0xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_GetSystemClocksFreq) refers to stm32l0xx_ll_rcc.o(.text.LL_RCC_GetSystemClocksFreq) for [Anonymous Symbol]
    stm32l0xx_ll_rcc.o(.text.RCC_GetSystemClockFreq) refers to stm32l0xx_ll_rcc.o(.text.LL_RCC_GetSysClkSource) for LL_RCC_GetSysClkSource
    stm32l0xx_ll_rcc.o(.text.RCC_GetSystemClockFreq) refers to stm32l0xx_ll_rcc.o(.text.LL_RCC_MSI_GetRange) for LL_RCC_MSI_GetRange
    stm32l0xx_ll_rcc.o(.text.RCC_GetSystemClockFreq) refers to stm32l0xx_ll_rcc.o(.text.LL_RCC_IsActiveFlag_HSIDIV) for LL_RCC_IsActiveFlag_HSIDIV
    stm32l0xx_ll_rcc.o(.text.RCC_GetSystemClockFreq) refers to stm32l0xx_ll_rcc.o(.text.RCC_PLL_GetFreqDomain_SYS) for RCC_PLL_GetFreqDomain_SYS
    stm32l0xx_ll_rcc.o(.ARM.exidx.text.RCC_GetSystemClockFreq) refers to stm32l0xx_ll_rcc.o(.text.RCC_GetSystemClockFreq) for [Anonymous Symbol]
    stm32l0xx_ll_rcc.o(.text.RCC_GetHCLKClockFreq) refers to stm32l0xx_ll_rcc.o(.text.LL_RCC_GetAHBPrescaler) for LL_RCC_GetAHBPrescaler
    stm32l0xx_ll_rcc.o(.text.RCC_GetHCLKClockFreq) refers to system_stm32l0xx_1.o(.rodata.AHBPrescTable) for AHBPrescTable
    stm32l0xx_ll_rcc.o(.ARM.exidx.text.RCC_GetHCLKClockFreq) refers to stm32l0xx_ll_rcc.o(.text.RCC_GetHCLKClockFreq) for [Anonymous Symbol]
    stm32l0xx_ll_rcc.o(.text.RCC_GetPCLK1ClockFreq) refers to stm32l0xx_ll_rcc.o(.text.LL_RCC_GetAPB1Prescaler) for LL_RCC_GetAPB1Prescaler
    stm32l0xx_ll_rcc.o(.text.RCC_GetPCLK1ClockFreq) refers to system_stm32l0xx_1.o(.rodata.APBPrescTable) for APBPrescTable
    stm32l0xx_ll_rcc.o(.ARM.exidx.text.RCC_GetPCLK1ClockFreq) refers to stm32l0xx_ll_rcc.o(.text.RCC_GetPCLK1ClockFreq) for [Anonymous Symbol]
    stm32l0xx_ll_rcc.o(.text.RCC_GetPCLK2ClockFreq) refers to stm32l0xx_ll_rcc.o(.text.LL_RCC_GetAPB2Prescaler) for LL_RCC_GetAPB2Prescaler
    stm32l0xx_ll_rcc.o(.text.RCC_GetPCLK2ClockFreq) refers to system_stm32l0xx_1.o(.rodata.APBPrescTable) for APBPrescTable
    stm32l0xx_ll_rcc.o(.ARM.exidx.text.RCC_GetPCLK2ClockFreq) refers to stm32l0xx_ll_rcc.o(.text.RCC_GetPCLK2ClockFreq) for [Anonymous Symbol]
    stm32l0xx_ll_rcc.o(.text.LL_RCC_GetUSARTClockFreq) refers to stm32l0xx_ll_rcc.o(.text.LL_RCC_GetUSARTClockSource) for LL_RCC_GetUSARTClockSource
    stm32l0xx_ll_rcc.o(.text.LL_RCC_GetUSARTClockFreq) refers to stm32l0xx_ll_rcc.o(.text.RCC_GetSystemClockFreq) for RCC_GetSystemClockFreq
    stm32l0xx_ll_rcc.o(.text.LL_RCC_GetUSARTClockFreq) refers to stm32l0xx_ll_rcc.o(.text.LL_RCC_HSI_IsReady) for LL_RCC_HSI_IsReady
    stm32l0xx_ll_rcc.o(.text.LL_RCC_GetUSARTClockFreq) refers to stm32l0xx_ll_rcc.o(.text.LL_RCC_IsActiveFlag_HSIDIV) for LL_RCC_IsActiveFlag_HSIDIV
    stm32l0xx_ll_rcc.o(.text.LL_RCC_GetUSARTClockFreq) refers to stm32l0xx_ll_rcc.o(.text.LL_RCC_LSE_IsReady) for LL_RCC_LSE_IsReady
    stm32l0xx_ll_rcc.o(.text.LL_RCC_GetUSARTClockFreq) refers to stm32l0xx_ll_rcc.o(.text.RCC_GetHCLKClockFreq) for RCC_GetHCLKClockFreq
    stm32l0xx_ll_rcc.o(.text.LL_RCC_GetUSARTClockFreq) refers to stm32l0xx_ll_rcc.o(.text.RCC_GetPCLK2ClockFreq) for RCC_GetPCLK2ClockFreq
    stm32l0xx_ll_rcc.o(.text.LL_RCC_GetUSARTClockFreq) refers to stm32l0xx_ll_rcc.o(.text.RCC_GetPCLK1ClockFreq) for RCC_GetPCLK1ClockFreq
    stm32l0xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_GetUSARTClockFreq) refers to stm32l0xx_ll_rcc.o(.text.LL_RCC_GetUSARTClockFreq) for [Anonymous Symbol]
    stm32l0xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_GetUSARTClockSource) refers to stm32l0xx_ll_rcc.o(.text.LL_RCC_GetUSARTClockSource) for [Anonymous Symbol]
    stm32l0xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_HSI_IsReady) refers to stm32l0xx_ll_rcc.o(.text.LL_RCC_HSI_IsReady) for [Anonymous Symbol]
    stm32l0xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_IsActiveFlag_HSIDIV) refers to stm32l0xx_ll_rcc.o(.text.LL_RCC_IsActiveFlag_HSIDIV) for [Anonymous Symbol]
    stm32l0xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_LSE_IsReady) refers to stm32l0xx_ll_rcc.o(.text.LL_RCC_LSE_IsReady) for [Anonymous Symbol]
    stm32l0xx_ll_rcc.o(.text.LL_RCC_GetI2CClockFreq) refers to stm32l0xx_ll_rcc.o(.text.LL_RCC_GetI2CClockSource) for LL_RCC_GetI2CClockSource
    stm32l0xx_ll_rcc.o(.text.LL_RCC_GetI2CClockFreq) refers to stm32l0xx_ll_rcc.o(.text.RCC_GetSystemClockFreq) for RCC_GetSystemClockFreq
    stm32l0xx_ll_rcc.o(.text.LL_RCC_GetI2CClockFreq) refers to stm32l0xx_ll_rcc.o(.text.LL_RCC_HSI_IsReady) for LL_RCC_HSI_IsReady
    stm32l0xx_ll_rcc.o(.text.LL_RCC_GetI2CClockFreq) refers to stm32l0xx_ll_rcc.o(.text.LL_RCC_IsActiveFlag_HSIDIV) for LL_RCC_IsActiveFlag_HSIDIV
    stm32l0xx_ll_rcc.o(.text.LL_RCC_GetI2CClockFreq) refers to stm32l0xx_ll_rcc.o(.text.RCC_GetHCLKClockFreq) for RCC_GetHCLKClockFreq
    stm32l0xx_ll_rcc.o(.text.LL_RCC_GetI2CClockFreq) refers to stm32l0xx_ll_rcc.o(.text.RCC_GetPCLK1ClockFreq) for RCC_GetPCLK1ClockFreq
    stm32l0xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_GetI2CClockFreq) refers to stm32l0xx_ll_rcc.o(.text.LL_RCC_GetI2CClockFreq) for [Anonymous Symbol]
    stm32l0xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_GetI2CClockSource) refers to stm32l0xx_ll_rcc.o(.text.LL_RCC_GetI2CClockSource) for [Anonymous Symbol]
    stm32l0xx_ll_rcc.o(.text.LL_RCC_GetLPUARTClockFreq) refers to stm32l0xx_ll_rcc.o(.text.LL_RCC_GetLPUARTClockSource) for LL_RCC_GetLPUARTClockSource
    stm32l0xx_ll_rcc.o(.text.LL_RCC_GetLPUARTClockFreq) refers to stm32l0xx_ll_rcc.o(.text.RCC_GetSystemClockFreq) for RCC_GetSystemClockFreq
    stm32l0xx_ll_rcc.o(.text.LL_RCC_GetLPUARTClockFreq) refers to stm32l0xx_ll_rcc.o(.text.LL_RCC_HSI_IsReady) for LL_RCC_HSI_IsReady
    stm32l0xx_ll_rcc.o(.text.LL_RCC_GetLPUARTClockFreq) refers to stm32l0xx_ll_rcc.o(.text.LL_RCC_IsActiveFlag_HSIDIV) for LL_RCC_IsActiveFlag_HSIDIV
    stm32l0xx_ll_rcc.o(.text.LL_RCC_GetLPUARTClockFreq) refers to stm32l0xx_ll_rcc.o(.text.LL_RCC_LSE_IsReady) for LL_RCC_LSE_IsReady
    stm32l0xx_ll_rcc.o(.text.LL_RCC_GetLPUARTClockFreq) refers to stm32l0xx_ll_rcc.o(.text.RCC_GetHCLKClockFreq) for RCC_GetHCLKClockFreq
    stm32l0xx_ll_rcc.o(.text.LL_RCC_GetLPUARTClockFreq) refers to stm32l0xx_ll_rcc.o(.text.RCC_GetPCLK1ClockFreq) for RCC_GetPCLK1ClockFreq
    stm32l0xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_GetLPUARTClockFreq) refers to stm32l0xx_ll_rcc.o(.text.LL_RCC_GetLPUARTClockFreq) for [Anonymous Symbol]
    stm32l0xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_GetLPUARTClockSource) refers to stm32l0xx_ll_rcc.o(.text.LL_RCC_GetLPUARTClockSource) for [Anonymous Symbol]
    stm32l0xx_ll_rcc.o(.text.LL_RCC_GetLPTIMClockFreq) refers to stm32l0xx_ll_rcc.o(.text.LL_RCC_GetLPTIMClockSource) for LL_RCC_GetLPTIMClockSource
    stm32l0xx_ll_rcc.o(.text.LL_RCC_GetLPTIMClockFreq) refers to stm32l0xx_ll_rcc.o(.text.LL_RCC_LSI_IsReady) for LL_RCC_LSI_IsReady
    stm32l0xx_ll_rcc.o(.text.LL_RCC_GetLPTIMClockFreq) refers to stm32l0xx_ll_rcc.o(.text.LL_RCC_HSI_IsReady) for LL_RCC_HSI_IsReady
    stm32l0xx_ll_rcc.o(.text.LL_RCC_GetLPTIMClockFreq) refers to stm32l0xx_ll_rcc.o(.text.LL_RCC_IsActiveFlag_HSIDIV) for LL_RCC_IsActiveFlag_HSIDIV
    stm32l0xx_ll_rcc.o(.text.LL_RCC_GetLPTIMClockFreq) refers to stm32l0xx_ll_rcc.o(.text.LL_RCC_LSE_IsReady) for LL_RCC_LSE_IsReady
    stm32l0xx_ll_rcc.o(.text.LL_RCC_GetLPTIMClockFreq) refers to stm32l0xx_ll_rcc.o(.text.RCC_GetSystemClockFreq) for RCC_GetSystemClockFreq
    stm32l0xx_ll_rcc.o(.text.LL_RCC_GetLPTIMClockFreq) refers to stm32l0xx_ll_rcc.o(.text.RCC_GetHCLKClockFreq) for RCC_GetHCLKClockFreq
    stm32l0xx_ll_rcc.o(.text.LL_RCC_GetLPTIMClockFreq) refers to stm32l0xx_ll_rcc.o(.text.RCC_GetPCLK1ClockFreq) for RCC_GetPCLK1ClockFreq
    stm32l0xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_GetLPTIMClockFreq) refers to stm32l0xx_ll_rcc.o(.text.LL_RCC_GetLPTIMClockFreq) for [Anonymous Symbol]
    stm32l0xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_GetLPTIMClockSource) refers to stm32l0xx_ll_rcc.o(.text.LL_RCC_GetLPTIMClockSource) for [Anonymous Symbol]
    stm32l0xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_LSI_IsReady) refers to stm32l0xx_ll_rcc.o(.text.LL_RCC_LSI_IsReady) for [Anonymous Symbol]
    stm32l0xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_GetSysClkSource) refers to stm32l0xx_ll_rcc.o(.text.LL_RCC_GetSysClkSource) for [Anonymous Symbol]
    stm32l0xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_MSI_GetRange) refers to stm32l0xx_ll_rcc.o(.text.LL_RCC_MSI_GetRange) for [Anonymous Symbol]
    stm32l0xx_ll_rcc.o(.text.RCC_PLL_GetFreqDomain_SYS) refers to stm32l0xx_ll_rcc.o(.text.LL_RCC_PLL_GetMainSource) for LL_RCC_PLL_GetMainSource
    stm32l0xx_ll_rcc.o(.text.RCC_PLL_GetFreqDomain_SYS) refers to stm32l0xx_ll_rcc.o(.text.LL_RCC_IsActiveFlag_HSIDIV) for LL_RCC_IsActiveFlag_HSIDIV
    stm32l0xx_ll_rcc.o(.text.RCC_PLL_GetFreqDomain_SYS) refers to stm32l0xx_ll_rcc.o(.text.LL_RCC_PLL_GetMultiplicator) for LL_RCC_PLL_GetMultiplicator
    stm32l0xx_ll_rcc.o(.text.RCC_PLL_GetFreqDomain_SYS) refers to stm32l0xx_ll_rcc.o(.text.LL_RCC_PLL_GetDivider) for LL_RCC_PLL_GetDivider
    stm32l0xx_ll_rcc.o(.text.RCC_PLL_GetFreqDomain_SYS) refers to uidiv.o(.text) for __aeabi_uidiv
    stm32l0xx_ll_rcc.o(.text.RCC_PLL_GetFreqDomain_SYS) refers to system_stm32l0xx_1.o(.rodata.PLLMulTable) for PLLMulTable
    stm32l0xx_ll_rcc.o(.ARM.exidx.text.RCC_PLL_GetFreqDomain_SYS) refers to stm32l0xx_ll_rcc.o(.text.RCC_PLL_GetFreqDomain_SYS) for [Anonymous Symbol]
    stm32l0xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_GetAHBPrescaler) refers to stm32l0xx_ll_rcc.o(.text.LL_RCC_GetAHBPrescaler) for [Anonymous Symbol]
    stm32l0xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_GetAPB1Prescaler) refers to stm32l0xx_ll_rcc.o(.text.LL_RCC_GetAPB1Prescaler) for [Anonymous Symbol]
    stm32l0xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_GetAPB2Prescaler) refers to stm32l0xx_ll_rcc.o(.text.LL_RCC_GetAPB2Prescaler) for [Anonymous Symbol]
    stm32l0xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_PLL_GetMainSource) refers to stm32l0xx_ll_rcc.o(.text.LL_RCC_PLL_GetMainSource) for [Anonymous Symbol]
    stm32l0xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_PLL_GetMultiplicator) refers to stm32l0xx_ll_rcc.o(.text.LL_RCC_PLL_GetMultiplicator) for [Anonymous Symbol]
    stm32l0xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_PLL_GetDivider) refers to stm32l0xx_ll_rcc.o(.text.LL_RCC_PLL_GetDivider) for [Anonymous Symbol]
    stm32l0xx_ll_utils.o(.text.LL_Init1msTick) refers to stm32l0xx_ll_utils.o(.text.LL_InitTick) for LL_InitTick
    stm32l0xx_ll_utils.o(.ARM.exidx.text.LL_Init1msTick) refers to stm32l0xx_ll_utils.o(.text.LL_Init1msTick) for [Anonymous Symbol]
    stm32l0xx_ll_utils.o(.text.LL_InitTick) refers to uidiv.o(.text) for __aeabi_uidiv
    stm32l0xx_ll_utils.o(.ARM.exidx.text.LL_InitTick) refers to stm32l0xx_ll_utils.o(.text.LL_InitTick) for [Anonymous Symbol]
    stm32l0xx_ll_utils.o(.ARM.exidx.text.LL_mDelay) refers to stm32l0xx_ll_utils.o(.text.LL_mDelay) for [Anonymous Symbol]
    stm32l0xx_ll_utils.o(.text.LL_SetSystemCoreClock) refers to system_stm32l0xx_1.o(.data.SystemCoreClock) for SystemCoreClock
    stm32l0xx_ll_utils.o(.ARM.exidx.text.LL_SetSystemCoreClock) refers to stm32l0xx_ll_utils.o(.text.LL_SetSystemCoreClock) for [Anonymous Symbol]
    stm32l0xx_ll_utils.o(.text.LL_PLL_ConfigSystemClock_HSI) refers to stm32l0xx_ll_utils.o(.text.UTILS_PLL_IsBusy) for UTILS_PLL_IsBusy
    stm32l0xx_ll_utils.o(.text.LL_PLL_ConfigSystemClock_HSI) refers to stm32l0xx_ll_utils.o(.text.UTILS_GetPLLOutputFrequency) for UTILS_GetPLLOutputFrequency
    stm32l0xx_ll_utils.o(.text.LL_PLL_ConfigSystemClock_HSI) refers to stm32l0xx_ll_utils.o(.text.LL_RCC_HSI_IsReady) for LL_RCC_HSI_IsReady
    stm32l0xx_ll_utils.o(.text.LL_PLL_ConfigSystemClock_HSI) refers to stm32l0xx_ll_utils.o(.text.LL_RCC_HSI_Enable) for LL_RCC_HSI_Enable
    stm32l0xx_ll_utils.o(.text.LL_PLL_ConfigSystemClock_HSI) refers to stm32l0xx_ll_utils.o(.text.LL_RCC_PLL_ConfigDomain_SYS) for LL_RCC_PLL_ConfigDomain_SYS
    stm32l0xx_ll_utils.o(.text.LL_PLL_ConfigSystemClock_HSI) refers to stm32l0xx_ll_utils.o(.text.UTILS_EnablePLLAndSwitchSystem) for UTILS_EnablePLLAndSwitchSystem
    stm32l0xx_ll_utils.o(.ARM.exidx.text.LL_PLL_ConfigSystemClock_HSI) refers to stm32l0xx_ll_utils.o(.text.LL_PLL_ConfigSystemClock_HSI) for [Anonymous Symbol]
    stm32l0xx_ll_utils.o(.text.UTILS_PLL_IsBusy) refers to stm32l0xx_ll_utils.o(.text.LL_RCC_PLL_IsReady) for LL_RCC_PLL_IsReady
    stm32l0xx_ll_utils.o(.ARM.exidx.text.UTILS_PLL_IsBusy) refers to stm32l0xx_ll_utils.o(.text.UTILS_PLL_IsBusy) for [Anonymous Symbol]
    stm32l0xx_ll_utils.o(.text.UTILS_GetPLLOutputFrequency) refers to uidiv.o(.text) for __aeabi_uidiv
    stm32l0xx_ll_utils.o(.text.UTILS_GetPLLOutputFrequency) refers to system_stm32l0xx_1.o(.rodata.PLLMulTable) for PLLMulTable
    stm32l0xx_ll_utils.o(.ARM.exidx.text.UTILS_GetPLLOutputFrequency) refers to stm32l0xx_ll_utils.o(.text.UTILS_GetPLLOutputFrequency) for [Anonymous Symbol]
    stm32l0xx_ll_utils.o(.ARM.exidx.text.LL_RCC_HSI_IsReady) refers to stm32l0xx_ll_utils.o(.text.LL_RCC_HSI_IsReady) for [Anonymous Symbol]
    stm32l0xx_ll_utils.o(.ARM.exidx.text.LL_RCC_HSI_Enable) refers to stm32l0xx_ll_utils.o(.text.LL_RCC_HSI_Enable) for [Anonymous Symbol]
    stm32l0xx_ll_utils.o(.ARM.exidx.text.LL_RCC_PLL_ConfigDomain_SYS) refers to stm32l0xx_ll_utils.o(.text.LL_RCC_PLL_ConfigDomain_SYS) for [Anonymous Symbol]
    stm32l0xx_ll_utils.o(.text.UTILS_EnablePLLAndSwitchSystem) refers to stm32l0xx_ll_utils.o(.text.UTILS_SetFlashLatency) for UTILS_SetFlashLatency
    stm32l0xx_ll_utils.o(.text.UTILS_EnablePLLAndSwitchSystem) refers to stm32l0xx_ll_utils.o(.text.LL_RCC_PLL_Enable) for LL_RCC_PLL_Enable
    stm32l0xx_ll_utils.o(.text.UTILS_EnablePLLAndSwitchSystem) refers to stm32l0xx_ll_utils.o(.text.LL_RCC_PLL_IsReady) for LL_RCC_PLL_IsReady
    stm32l0xx_ll_utils.o(.text.UTILS_EnablePLLAndSwitchSystem) refers to stm32l0xx_ll_utils.o(.text.LL_RCC_SetAHBPrescaler) for LL_RCC_SetAHBPrescaler
    stm32l0xx_ll_utils.o(.text.UTILS_EnablePLLAndSwitchSystem) refers to stm32l0xx_ll_utils.o(.text.LL_RCC_SetSysClkSource) for LL_RCC_SetSysClkSource
    stm32l0xx_ll_utils.o(.text.UTILS_EnablePLLAndSwitchSystem) refers to stm32l0xx_ll_utils.o(.text.LL_RCC_GetSysClkSource) for LL_RCC_GetSysClkSource
    stm32l0xx_ll_utils.o(.text.UTILS_EnablePLLAndSwitchSystem) refers to stm32l0xx_ll_utils.o(.text.LL_RCC_SetAPB1Prescaler) for LL_RCC_SetAPB1Prescaler
    stm32l0xx_ll_utils.o(.text.UTILS_EnablePLLAndSwitchSystem) refers to stm32l0xx_ll_utils.o(.text.LL_RCC_SetAPB2Prescaler) for LL_RCC_SetAPB2Prescaler
    stm32l0xx_ll_utils.o(.text.UTILS_EnablePLLAndSwitchSystem) refers to stm32l0xx_ll_utils.o(.text.LL_SetSystemCoreClock) for LL_SetSystemCoreClock
    stm32l0xx_ll_utils.o(.text.UTILS_EnablePLLAndSwitchSystem) refers to system_stm32l0xx_1.o(.rodata.AHBPrescTable) for AHBPrescTable
    stm32l0xx_ll_utils.o(.text.UTILS_EnablePLLAndSwitchSystem) refers to system_stm32l0xx_1.o(.data.SystemCoreClock) for SystemCoreClock
    stm32l0xx_ll_utils.o(.ARM.exidx.text.UTILS_EnablePLLAndSwitchSystem) refers to stm32l0xx_ll_utils.o(.text.UTILS_EnablePLLAndSwitchSystem) for [Anonymous Symbol]
    stm32l0xx_ll_utils.o(.text.LL_PLL_ConfigSystemClock_HSE) refers to stm32l0xx_ll_utils.o(.text.UTILS_PLL_IsBusy) for UTILS_PLL_IsBusy
    stm32l0xx_ll_utils.o(.text.LL_PLL_ConfigSystemClock_HSE) refers to stm32l0xx_ll_utils.o(.text.UTILS_GetPLLOutputFrequency) for UTILS_GetPLLOutputFrequency
    stm32l0xx_ll_utils.o(.text.LL_PLL_ConfigSystemClock_HSE) refers to stm32l0xx_ll_utils.o(.text.LL_RCC_HSE_IsReady) for LL_RCC_HSE_IsReady
    stm32l0xx_ll_utils.o(.text.LL_PLL_ConfigSystemClock_HSE) refers to stm32l0xx_ll_utils.o(.text.LL_RCC_HSE_EnableBypass) for LL_RCC_HSE_EnableBypass
    stm32l0xx_ll_utils.o(.text.LL_PLL_ConfigSystemClock_HSE) refers to stm32l0xx_ll_utils.o(.text.LL_RCC_HSE_DisableBypass) for LL_RCC_HSE_DisableBypass
    stm32l0xx_ll_utils.o(.text.LL_PLL_ConfigSystemClock_HSE) refers to stm32l0xx_ll_utils.o(.text.LL_RCC_HSE_Enable) for LL_RCC_HSE_Enable
    stm32l0xx_ll_utils.o(.text.LL_PLL_ConfigSystemClock_HSE) refers to stm32l0xx_ll_utils.o(.text.LL_RCC_PLL_ConfigDomain_SYS) for LL_RCC_PLL_ConfigDomain_SYS
    stm32l0xx_ll_utils.o(.text.LL_PLL_ConfigSystemClock_HSE) refers to stm32l0xx_ll_utils.o(.text.UTILS_EnablePLLAndSwitchSystem) for UTILS_EnablePLLAndSwitchSystem
    stm32l0xx_ll_utils.o(.ARM.exidx.text.LL_PLL_ConfigSystemClock_HSE) refers to stm32l0xx_ll_utils.o(.text.LL_PLL_ConfigSystemClock_HSE) for [Anonymous Symbol]
    stm32l0xx_ll_utils.o(.ARM.exidx.text.LL_RCC_HSE_IsReady) refers to stm32l0xx_ll_utils.o(.text.LL_RCC_HSE_IsReady) for [Anonymous Symbol]
    stm32l0xx_ll_utils.o(.ARM.exidx.text.LL_RCC_HSE_EnableBypass) refers to stm32l0xx_ll_utils.o(.text.LL_RCC_HSE_EnableBypass) for [Anonymous Symbol]
    stm32l0xx_ll_utils.o(.ARM.exidx.text.LL_RCC_HSE_DisableBypass) refers to stm32l0xx_ll_utils.o(.text.LL_RCC_HSE_DisableBypass) for [Anonymous Symbol]
    stm32l0xx_ll_utils.o(.ARM.exidx.text.LL_RCC_HSE_Enable) refers to stm32l0xx_ll_utils.o(.text.LL_RCC_HSE_Enable) for [Anonymous Symbol]
    stm32l0xx_ll_utils.o(.ARM.exidx.text.LL_RCC_PLL_IsReady) refers to stm32l0xx_ll_utils.o(.text.LL_RCC_PLL_IsReady) for [Anonymous Symbol]
    stm32l0xx_ll_utils.o(.text.UTILS_SetFlashLatency) refers to stm32l0xx_ll_utils.o(.text.LL_PWR_GetRegulVoltageScaling) for LL_PWR_GetRegulVoltageScaling
    stm32l0xx_ll_utils.o(.text.UTILS_SetFlashLatency) refers to stm32l0xx_ll_utils.o(.text.LL_FLASH_SetLatency) for LL_FLASH_SetLatency
    stm32l0xx_ll_utils.o(.text.UTILS_SetFlashLatency) refers to stm32l0xx_ll_utils.o(.text.LL_FLASH_GetLatency) for LL_FLASH_GetLatency
    stm32l0xx_ll_utils.o(.ARM.exidx.text.UTILS_SetFlashLatency) refers to stm32l0xx_ll_utils.o(.text.UTILS_SetFlashLatency) for [Anonymous Symbol]
    stm32l0xx_ll_utils.o(.ARM.exidx.text.LL_RCC_PLL_Enable) refers to stm32l0xx_ll_utils.o(.text.LL_RCC_PLL_Enable) for [Anonymous Symbol]
    stm32l0xx_ll_utils.o(.ARM.exidx.text.LL_RCC_SetAHBPrescaler) refers to stm32l0xx_ll_utils.o(.text.LL_RCC_SetAHBPrescaler) for [Anonymous Symbol]
    stm32l0xx_ll_utils.o(.ARM.exidx.text.LL_RCC_SetSysClkSource) refers to stm32l0xx_ll_utils.o(.text.LL_RCC_SetSysClkSource) for [Anonymous Symbol]
    stm32l0xx_ll_utils.o(.ARM.exidx.text.LL_RCC_GetSysClkSource) refers to stm32l0xx_ll_utils.o(.text.LL_RCC_GetSysClkSource) for [Anonymous Symbol]
    stm32l0xx_ll_utils.o(.ARM.exidx.text.LL_RCC_SetAPB1Prescaler) refers to stm32l0xx_ll_utils.o(.text.LL_RCC_SetAPB1Prescaler) for [Anonymous Symbol]
    stm32l0xx_ll_utils.o(.ARM.exidx.text.LL_RCC_SetAPB2Prescaler) refers to stm32l0xx_ll_utils.o(.text.LL_RCC_SetAPB2Prescaler) for [Anonymous Symbol]
    stm32l0xx_ll_utils.o(.ARM.exidx.text.LL_PWR_GetRegulVoltageScaling) refers to stm32l0xx_ll_utils.o(.text.LL_PWR_GetRegulVoltageScaling) for [Anonymous Symbol]
    stm32l0xx_ll_utils.o(.ARM.exidx.text.LL_FLASH_SetLatency) refers to stm32l0xx_ll_utils.o(.text.LL_FLASH_SetLatency) for [Anonymous Symbol]
    stm32l0xx_ll_utils.o(.ARM.exidx.text.LL_FLASH_GetLatency) refers to stm32l0xx_ll_utils.o(.text.LL_FLASH_GetLatency) for [Anonymous Symbol]
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry10a.o(.ARM.Collect$$$$0000000D) for __rt_final_cpp
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry11a.o(.ARM.Collect$$$$0000000F) for __rt_final_exit
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry7b.o(.ARM.Collect$$$$00000008) for _main_clock
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry8b.o(.ARM.Collect$$$$0000000A) for _main_cpp_init
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry9a.o(.ARM.Collect$$$$0000000B) for _main_init
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry5.o(.ARM.Collect$$$$00000004) for _main_scatterload
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry2.o(.ARM.Collect$$$$00000001) for _main_stk
    idiv.o(.text) refers to uidiv.o(.text) for __aeabi_uidivmod
    strtok.o(.text) refers to strtok.o(.data) for .data
    strtok_r.o(.text) refers to strtok_r.o(.data) for .data
    printfa.o(i.__0fprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0fprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0fprintf) refers to fputc.o(i.fputc) for fputc
    printfa.o(i.__0printf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0printf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0printf) refers to fputc.o(i.fputc) for fputc
    printfa.o(i.__0printf) refers to stdout.o(.data) for __stdout
    printfa.o(i.__0snprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0snprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0snprintf) refers to printfa.o(i._snputc) for _snputc
    printfa.o(i.__0sprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0sprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0sprintf) refers to printfa.o(i._sputc) for _sputc
    printfa.o(i.__0vfprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0vfprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0vfprintf) refers to fputc.o(i.fputc) for fputc
    printfa.o(i.__0vprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0vprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0vprintf) refers to fputc.o(i.fputc) for fputc
    printfa.o(i.__0vprintf) refers to stdout.o(.data) for __stdout
    printfa.o(i.__0vsnprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0vsnprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0vsnprintf) refers to printfa.o(i._snputc) for _snputc
    printfa.o(i.__0vsprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0vsprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0vsprintf) refers to printfa.o(i._sputc) for _sputc
    printfa.o(i._fp_digits) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i._fp_digits) refers to dmul.o(.text) for __aeabi_dmul
    printfa.o(i._fp_digits) refers to ddiv.o(.text) for __aeabi_ddiv
    printfa.o(i._fp_digits) refers to cdrcmple.o(.text) for __aeabi_cdrcmple
    printfa.o(i._fp_digits) refers to dadd.o(.text) for __aeabi_dadd
    printfa.o(i._fp_digits) refers to dfixul.o(.text) for __aeabi_d2ulz
    printfa.o(i._fp_digits) refers to uldiv.o(.text) for __aeabi_uldivmod
    printfa.o(i._printf_core) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i._printf_core) refers to printfa.o(i._printf_pre_padding) for _printf_pre_padding
    printfa.o(i._printf_core) refers to uldiv.o(.text) for __aeabi_uldivmod
    printfa.o(i._printf_core) refers to printfa.o(i._printf_post_padding) for _printf_post_padding
    printfa.o(i._printf_core) refers to printfa.o(i._fp_digits) for _fp_digits
    printfa.o(i._printf_core) refers to uidiv.o(.text) for __aeabi_uidivmod
    printfa.o(i._printf_post_padding) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i._printf_pre_padding) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i._snputc) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i._sputc) refers (Special) to iusefp.o(.text) for __I$use$fp
    atoi.o(.text) refers to errno.o(i.__aeabi_errno_addr) for __aeabi_errno_addr
    atoi.o(.text) refers to strtol.o(.text) for strtol
    fcmple.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    fcmpgt.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    fflti.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    fflti.o(.text) refers to fepilogue.o(.text) for _float_epilogue
    entry2.o(.ARM.Collect$$$$00000001) refers to entry2.o(.ARM.Collect$$$$00002712) for __lit__00000000
    entry2.o(.ARM.Collect$$$$00002712) refers to startup_stm32l071xx.o(STACK) for __initial_sp
    entry2.o(__vectab_stack_and_reset_area) refers to startup_stm32l071xx.o(STACK) for __initial_sp
    entry2.o(__vectab_stack_and_reset_area) refers to entry.o(.ARM.Collect$$$$00000000) for __main
    entry5.o(.ARM.Collect$$$$00000004) refers to init.o(.text) for __scatterload
    entry9a.o(.ARM.Collect$$$$0000000B) refers to main.o(.text.main) for main
    entry9b.o(.ARM.Collect$$$$0000000C) refers to main.o(.text.main) for main
    fputc.o(i.fputc) refers (Special) to iusesemip.o(.text) for __I$use$semihosting$fputc
    fputc.o(i.fputc) refers (Special) to semi.o(.text) for __semihosting_library_function
    fputc_h.o(i._fputc$hlt) refers (Special) to iusesemip.o(.text) for __I$use$semihosting$fputc
    fputc_h.o(i._fputc$hlt) refers (Special) to semi.o(.text) for __semihosting_library_function
    uldiv.o(.text) refers to llushr.o(.text) for __aeabi_llsr
    uldiv.o(.text) refers to llshl.o(.text) for __aeabi_llsl
    errno.o(i.__aeabi_errno_addr) refers to errno.o(.data) for .data
    errno.o(i.__read_errno) refers to errno.o(.data) for .data
    errno.o(i.__set_errno) refers to errno.o(.data) for .data
    strtol.o(.text) refers to ctype_o.o(.text) for __rt_ctype_table
    strtol.o(.text) refers to _strtoul.o(.text) for _strtoul
    strtol.o(.text) refers to errno.o(i.__aeabi_errno_addr) for __aeabi_errno_addr
    fepilogue.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    dadd.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    dadd.o(.text) refers to llshl.o(.text) for __aeabi_llsl
    dadd.o(.text) refers to llsshr.o(.text) for __aeabi_lasr
    dadd.o(.text) refers to depilogue.o(.text) for _double_epilogue
    dmul.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    dmul.o(.text) refers to depilogue.o(.text) for _double_epilogue
    ddiv.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    ddiv.o(.text) refers to depilogue.o(.text) for _double_round
    dfixul.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    dfixul.o(.text) refers to llushr.o(.text) for __aeabi_llsr
    dfixul.o(.text) refers to llshl.o(.text) for __aeabi_llsl
    cdrcmple.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    init.o(.text) refers to entry5.o(.ARM.Collect$$$$00000004) for __main_after_scatterload
    ctype_o.o(.text) refers to ctype_o.o(.constdata) for .constdata
    ctype_o.o(.constdata) refers to ctype_o.o(.constdata) for __ctype_table
    isalnum_o.o(.text) refers to ctype_o.o(.text) for __rt_ctype_table
    isalpha_o.o(.text) refers to ctype_o.o(.text) for __rt_ctype_table
    isblank_o.o(.text) refers to ctype_o.o(.constdata) for __ctype_table
    iscntrl_o.o(.text) refers to ctype_o.o(.text) for __rt_ctype_table
    isdigit_o.o(.text) refers to ctype_o.o(.text) for __rt_ctype_table
    isgraph_o.o(.text) refers to ctype_o.o(.text) for __rt_ctype_table
    islower_o.o(.text) refers to ctype_o.o(.text) for __rt_ctype_table
    isprint_o.o(.text) refers to ctype_o.o(.text) for __rt_ctype_table
    ispunct_o.o(.text) refers to ctype_o.o(.text) for __rt_ctype_table
    isspace_o.o(.text) refers to ctype_o.o(.text) for __rt_ctype_table
    isupper_o.o(.text) refers to ctype_o.o(.text) for __rt_ctype_table
    isxdigit_o.o(.text) refers to ctype_o.o(.text) for __rt_ctype_table
    _strtoul.o(.text) refers to _chval.o(.text) for _chval
    _strtoul.o(.text) refers to errno.o(i.__aeabi_errno_addr) for __aeabi_errno_addr
    depilogue.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    depilogue.o(.text) refers to depilogue.o(i.__ARM_clz) for __ARM_clz
    depilogue.o(.text) refers to llshl.o(.text) for __aeabi_llsl
    depilogue.o(.text) refers to llushr.o(.text) for __aeabi_llsr
    depilogue.o(i.__ARM_clz) refers (Special) to iusefp.o(.text) for __I$use$fp


==============================================================================

Removing Unused input sections from the image.

    Removing startup_stm32l071xx.o(HEAP), (512 bytes).
    Removing comport.o(.text), (0 bytes).
    Removing comport.o(.text.CC_ComPortPresent), (4 bytes).
    Removing comport.o(.ARM.exidx.text.CC_ComPortPresent), (8 bytes).
    Removing comport.o(.text.CC_SendByte), (60 bytes).
    Removing comport.o(.ARM.exidx.text.CC_SendByte), (8 bytes).
    Removing comport.o(.text.LL_USART_TransmitData8), (26 bytes).
    Removing comport.o(.ARM.exidx.text.LL_USART_TransmitData8), (8 bytes).
    Removing comport.o(.text.CC_SendData), (64 bytes).
    Removing comport.o(.ARM.exidx.text.CC_SendData), (8 bytes).
    Removing comport.o(.text.CC_CheckForHandshake), (184 bytes).
    Removing comport.o(.ARM.exidx.text.CC_CheckForHandshake), (8 bytes).
    Removing comport.o(.text.CC_ParseCommand), (380 bytes).
    Removing comport.o(.ARM.exidx.text.CC_ParseCommand), (8 bytes).
    Removing comport.o(.text.CC_ExecuteCommand), (118 bytes).
    Removing comport.o(.ARM.exidx.text.CC_ExecuteCommand), (8 bytes).
    Removing comport.o(.text.CC_SetRTC), (444 bytes).
    Removing comport.o(.ARM.exidx.text.CC_SetRTC), (8 bytes).
    Removing comport.o(.text.LL_RTC_DATE_GetDay), (26 bytes).
    Removing comport.o(.ARM.exidx.text.LL_RTC_DATE_GetDay), (8 bytes).
    Removing comport.o(.text.LL_RTC_TIME_GetSecond), (26 bytes).
    Removing comport.o(.ARM.exidx.text.LL_RTC_TIME_GetSecond), (8 bytes).
    Removing comport.o(.text.LL_RTC_TIME_GetMinute), (30 bytes).
    Removing comport.o(.ARM.exidx.text.LL_RTC_TIME_GetMinute), (8 bytes).
    Removing comport.o(.text.LL_RTC_TIME_GetHour), (30 bytes).
    Removing comport.o(.ARM.exidx.text.LL_RTC_TIME_GetHour), (8 bytes).
    Removing comport.o(.text.LL_RTC_DATE_GetMonth), (30 bytes).
    Removing comport.o(.ARM.exidx.text.LL_RTC_DATE_GetMonth), (8 bytes).
    Removing comport.o(.text.LL_RTC_DATE_GetYear), (28 bytes).
    Removing comport.o(.ARM.exidx.text.LL_RTC_DATE_GetYear), (8 bytes).
    Removing comport.o(.text.LL_RTC_DATE_GetWeekDay), (20 bytes).
    Removing comport.o(.ARM.exidx.text.LL_RTC_DATE_GetWeekDay), (8 bytes).
    Removing comport.o(.text.CC_SendTimestamp), (160 bytes).
    Removing comport.o(.ARM.exidx.text.CC_SendTimestamp), (8 bytes).
    Removing comport.o(.text.CC_SetProgram), (220 bytes).
    Removing comport.o(.ARM.exidx.text.CC_SetProgram), (8 bytes).
    Removing comport.o(.text.CC_ReadProgram), (52 bytes).
    Removing comport.o(.ARM.exidx.text.CC_ReadProgram), (8 bytes).
    Removing comport.o(.text.CC_ConfigureXbee), (148 bytes).
    Removing comport.o(.ARM.exidx.text.CC_ConfigureXbee), (8 bytes).
    Removing comport.o(.bss.ComRxReadFrom), (4 bytes).
    Removing comport.o(.rodata.str1.1), (60 bytes).
    Removing comport.o(.bss.ComRxReadTo), (4 bytes).
    Removing flash.o(.text), (0 bytes).
    Removing flash.o(.ARM.exidx.text.FLASH_Unlock), (8 bytes).
    Removing flash.o(.ARM.exidx.text.FLASH_Lock), (8 bytes).
    Removing flash.o(.ARM.exidx.text.EEPROM_WriteByte), (8 bytes).
    Removing flash.o(.ARM.exidx.text.EEPROM_WriteData), (8 bytes).
    Removing flash.o(.ARM.exidx.text.FLASH_ReadData), (8 bytes).
    Removing flash.o(.ARM.exidx.text.FLASH_unlockPrgm), (8 bytes).
    Removing flash.o(.ARM.exidx.text.FLASH_writeWord), (8 bytes).
    Removing flash.o(.ARM.exidx.text.FLASH_erasePage), (8 bytes).
    Removing flash.o(.ARM.exidx.text.FLASH_initDataStorage), (8 bytes).
    Removing flash.o(.ARM.exidx.text.FLASH_saveFix), (8 bytes).
    Removing flash.o(.ARM.exidx.text.FLASH_readFixes), (8 bytes).
    Removing gps.o(.text), (0 bytes).
    Removing gps.o(.text.GPS_GPSEnable), (16 bytes).
    Removing gps.o(.ARM.exidx.text.GPS_GPSEnable), (8 bytes).
    Removing gps.o(.ARM.exidx.text.GPS_GPSDisable), (8 bytes).
    Removing gps.o(.text.GPS_GPSCSLow), (20 bytes).
    Removing gps.o(.ARM.exidx.text.GPS_GPSCSLow), (8 bytes).
    Removing gps.o(.ARM.exidx.text.GPS_GPSCSHigh), (8 bytes).
    Removing gps.o(.text.GPS_SendByte), (56 bytes).
    Removing gps.o(.ARM.exidx.text.GPS_SendByte), (8 bytes).
    Removing gps.o(.text.LL_SPI_TransmitData8), (32 bytes).
    Removing gps.o(.ARM.exidx.text.LL_SPI_TransmitData8), (8 bytes).
    Removing gps.o(.text.GPS_SendData), (66 bytes).
    Removing gps.o(.ARM.exidx.text.GPS_SendData), (8 bytes).
    Removing gps.o(.text.GPS_ClockInByte), (36 bytes).
    Removing gps.o(.ARM.exidx.text.GPS_ClockInByte), (8 bytes).
    Removing gps.o(.text.LL_SPI_ReceiveData8), (18 bytes).
    Removing gps.o(.ARM.exidx.text.LL_SPI_ReceiveData8), (8 bytes).
    Removing gps.o(.text.GPS_GetDataWord), (128 bytes).
    Removing gps.o(.ARM.exidx.text.GPS_GetDataWord), (8 bytes).
    Removing gps.o(.text.GPS_getNMEA), (912 bytes).
    Removing gps.o(.ARM.exidx.text.GPS_getNMEA), (8 bytes).
    Removing gps.o(.text.LL_USART_TransmitData8), (26 bytes).
    Removing gps.o(.ARM.exidx.text.LL_USART_TransmitData8), (8 bytes).
    Removing gps.o(.text.GPS_UBX_enablePUBX_Position), (104 bytes).
    Removing gps.o(.ARM.exidx.text.GPS_UBX_enablePUBX_Position), (8 bytes).
    Removing gps.o(.text.GPS_subroutine), (676 bytes).
    Removing gps.o(.ARM.exidx.text.GPS_subroutine), (8 bytes).
    Removing gps.o(.bss.GPS_getNMEA.position), (36 bytes).
    Removing gps.o(.rodata.str1.1), (2 bytes).
    Removing gps.o(.rodata.cst16), (16 bytes).
    Removing gps.o(.bss.GPS_subroutine.position), (36 bytes).
    Removing scheduler.o(.text), (0 bytes).
    Removing scheduler.o(.text.scheduler), (360 bytes).
    Removing scheduler.o(.ARM.exidx.text.scheduler), (8 bytes).
    Removing scheduler.o(.bss.scheduler.gps_lastHours), (1 bytes).
    Removing scheduler.o(.bss.scheduler.gps_lastMins), (1 bytes).
    Removing timers.o(.text), (0 bytes).
    Removing timers.o(.ARM.exidx.text.TIM2_init), (8 bytes).
    Removing timers.o(.text.TIM2_delay), (72 bytes).
    Removing timers.o(.ARM.exidx.text.TIM2_delay), (8 bytes).
    Removing timers.o(.text.TIM2_initDelay_inline), (52 bytes).
    Removing timers.o(.ARM.exidx.text.TIM2_initDelay_inline), (8 bytes).
    Removing timers.o(.ARM.exidx.text.RTC_initAlarm), (8 bytes).
    Removing timers.o(.ARM.exidx.text.LL_RTC_DisableWriteProtection), (8 bytes).
    Removing timers.o(.ARM.exidx.text.LL_RTC_ALMA_Disable), (8 bytes).
    Removing timers.o(.ARM.exidx.text.LL_RTC_ALMA_SetSecond), (8 bytes).
    Removing timers.o(.ARM.exidx.text.LL_RTC_ALMA_SetMask), (8 bytes).
    Removing timers.o(.ARM.exidx.text.LL_RTC_ALMA_Enable), (8 bytes).
    Removing timers.o(.ARM.exidx.text.LL_RTC_EnableWriteProtection), (8 bytes).
    Removing timers.o(.text.RTC_setTimeDate), (80 bytes).
    Removing timers.o(.ARM.exidx.text.RTC_setTimeDate), (8 bytes).
    Removing timers.o(.text.RTC_getTimeDate), (108 bytes).
    Removing timers.o(.ARM.exidx.text.RTC_getTimeDate), (8 bytes).
    Removing timers.o(.text.LL_RTC_TIME_GetHour), (30 bytes).
    Removing timers.o(.ARM.exidx.text.LL_RTC_TIME_GetHour), (8 bytes).
    Removing timers.o(.text.LL_RTC_TIME_GetMinute), (30 bytes).
    Removing timers.o(.ARM.exidx.text.LL_RTC_TIME_GetMinute), (8 bytes).
    Removing timers.o(.text.LL_RTC_TIME_GetSecond), (26 bytes).
    Removing timers.o(.ARM.exidx.text.LL_RTC_TIME_GetSecond), (8 bytes).
    Removing timers.o(.text.LL_RTC_TIME_GetFormat), (22 bytes).
    Removing timers.o(.ARM.exidx.text.LL_RTC_TIME_GetFormat), (8 bytes).
    Removing timers.o(.text.LL_RTC_DATE_GetDay), (26 bytes).
    Removing timers.o(.ARM.exidx.text.LL_RTC_DATE_GetDay), (8 bytes).
    Removing timers.o(.text.LL_RTC_DATE_GetMonth), (30 bytes).
    Removing timers.o(.ARM.exidx.text.LL_RTC_DATE_GetMonth), (8 bytes).
    Removing timers.o(.text.LL_RTC_DATE_GetYear), (28 bytes).
    Removing timers.o(.ARM.exidx.text.LL_RTC_DATE_GetYear), (8 bytes).
    Removing timers.o(.text.LL_RTC_DATE_GetWeekDay), (20 bytes).
    Removing timers.o(.ARM.exidx.text.LL_RTC_DATE_GetWeekDay), (8 bytes).
    Removing xbee.o(.text), (0 bytes).
    Removing xbee.o(.text.XB_XbeeSubroutine), (60 bytes).
    Removing xbee.o(.ARM.exidx.text.XB_XbeeSubroutine), (8 bytes).
    Removing xbee.o(.text.XB_ExecuteCommand), (40 bytes).
    Removing xbee.o(.ARM.exidx.text.XB_ExecuteCommand), (8 bytes).
    Removing xbee.o(.ARM.exidx.text.XB_EnableXbee), (8 bytes).
    Removing xbee.o(.text.XB_DisableXbee), (16 bytes).
    Removing xbee.o(.ARM.exidx.text.XB_DisableXbee), (8 bytes).
    Removing xbee.o(.text.XB_SendByte), (60 bytes).
    Removing xbee.o(.ARM.exidx.text.XB_SendByte), (8 bytes).
    Removing xbee.o(.text.LL_USART_TransmitData8), (26 bytes).
    Removing xbee.o(.ARM.exidx.text.LL_USART_TransmitData8), (8 bytes).
    Removing xbee.o(.text.XB_SendData), (64 bytes).
    Removing xbee.o(.ARM.exidx.text.XB_SendData), (8 bytes).
    Removing xbee.o(.text.XB_GetResponse), (196 bytes).
    Removing xbee.o(.ARM.exidx.text.XB_GetResponse), (8 bytes).
    Removing xbee.o(.text.XB_ConfigureDevice), (644 bytes).
    Removing xbee.o(.ARM.exidx.text.XB_ConfigureDevice), (8 bytes).
    Removing xbee.o(.text.XB_GetConfig), (168 bytes).
    Removing xbee.o(.ARM.exidx.text.XB_GetConfig), (8 bytes).
    Removing xbee.o(.text.XB_GetSN), (168 bytes).
    Removing xbee.o(.ARM.exidx.text.XB_GetSN), (8 bytes).
    Removing xbee.o(.text.XB_CheckForDongle), (140 bytes).
    Removing xbee.o(.ARM.exidx.text.XB_CheckForDongle), (8 bytes).
    Removing xbee.o(.text.XB_ParseCommand), (212 bytes).
    Removing xbee.o(.ARM.exidx.text.XB_ParseCommand), (8 bytes).
    Removing xbee.o(.text.XB_TransmitFixes), (72 bytes).
    Removing xbee.o(.ARM.exidx.text.XB_TransmitFixes), (8 bytes).
    Removing xbee.o(.bss.XbeeDongleConnected), (4 bytes).
    Removing xbee.o(.bss.XbeeRxReadTo), (4 bytes).
    Removing xbee.o(.bss.XbeeRxReadFrom), (4 bytes).
    Removing xbee.o(.rodata.str1.1), (77 bytes).
    Removing main.o(.text), (0 bytes).
    Removing main.o(.ARM.exidx.text.main), (8 bytes).
    Removing main.o(.ARM.exidx.text.LL_APB2_GRP1_EnableClock), (8 bytes).
    Removing main.o(.ARM.exidx.text.LL_APB1_GRP1_EnableClock), (8 bytes).
    Removing main.o(.ARM.exidx.text.SystemClock_Config), (8 bytes).
    Removing main.o(.ARM.exidx.text.MX_GPIO_Init), (8 bytes).
    Removing main.o(.ARM.exidx.text.MX_RTC_Init), (8 bytes).
    Removing main.o(.ARM.exidx.text.MX_SPI1_Init), (8 bytes).
    Removing main.o(.ARM.exidx.text.MX_TIM2_Init), (8 bytes).
    Removing main.o(.ARM.exidx.text.MX_USART1_UART_Init), (8 bytes).
    Removing main.o(.ARM.exidx.text.MX_USART4_UART_Init), (8 bytes).
    Removing main.o(.ARM.exidx.text.LL_USART_Disable), (8 bytes).
    Removing main.o(.ARM.exidx.text.LL_USART_Enable), (8 bytes).
    Removing main.o(.ARM.exidx.text.LL_FLASH_SetLatency), (8 bytes).
    Removing main.o(.ARM.exidx.text.LL_FLASH_GetLatency), (8 bytes).
    Removing main.o(.ARM.exidx.text.Error_Handler), (8 bytes).
    Removing main.o(.ARM.exidx.text.LL_PWR_SetRegulVoltageScaling), (8 bytes).
    Removing main.o(.ARM.exidx.text.LL_RCC_MSI_Enable), (8 bytes).
    Removing main.o(.ARM.exidx.text.LL_RCC_MSI_IsReady), (8 bytes).
    Removing main.o(.ARM.exidx.text.LL_RCC_MSI_SetRange), (8 bytes).
    Removing main.o(.ARM.exidx.text.LL_RCC_MSI_SetCalibTrimming), (8 bytes).
    Removing main.o(.ARM.exidx.text.LL_PWR_EnableBkUpAccess), (8 bytes).
    Removing main.o(.ARM.exidx.text.LL_RCC_ForceBackupDomainReset), (8 bytes).
    Removing main.o(.ARM.exidx.text.LL_RCC_ReleaseBackupDomainReset), (8 bytes).
    Removing main.o(.ARM.exidx.text.LL_RCC_LSE_SetDriveCapability), (8 bytes).
    Removing main.o(.ARM.exidx.text.LL_RCC_LSE_Enable), (8 bytes).
    Removing main.o(.ARM.exidx.text.LL_RCC_LSE_IsReady), (8 bytes).
    Removing main.o(.ARM.exidx.text.LL_RCC_SetRTCClockSource), (8 bytes).
    Removing main.o(.ARM.exidx.text.LL_RCC_EnableRTC), (8 bytes).
    Removing main.o(.ARM.exidx.text.LL_RCC_SetAHBPrescaler), (8 bytes).
    Removing main.o(.ARM.exidx.text.LL_RCC_SetAPB1Prescaler), (8 bytes).
    Removing main.o(.ARM.exidx.text.LL_RCC_SetAPB2Prescaler), (8 bytes).
    Removing main.o(.ARM.exidx.text.LL_RCC_SetSysClkSource), (8 bytes).
    Removing main.o(.ARM.exidx.text.LL_RCC_GetSysClkSource), (8 bytes).
    Removing main.o(.ARM.exidx.text.LL_SYSTICK_SetClkSource), (8 bytes).
    Removing main.o(.ARM.exidx.text.LL_RCC_SetUSARTClockSource), (8 bytes).
    Removing main.o(.ARM.exidx.text.NVIC_SetPriority), (8 bytes).
    Removing main.o(.ARM.exidx.text.NVIC_EnableIRQ), (8 bytes).
    Removing main.o(.ARM.exidx.text.LL_IOP_GRP1_EnableClock), (8 bytes).
    Removing main.o(.ARM.exidx.text.LL_SPI_SetStandard), (8 bytes).
    Removing main.o(.ARM.exidx.text.LL_TIM_DisableARRPreload), (8 bytes).
    Removing main.o(.ARM.exidx.text.LL_TIM_SetClockSource), (8 bytes).
    Removing main.o(.ARM.exidx.text.LL_TIM_SetTriggerOutput), (8 bytes).
    Removing main.o(.ARM.exidx.text.LL_TIM_DisableMasterSlaveMode), (8 bytes).
    Removing main.o(.ARM.exidx.text.LL_USART_ConfigAsyncMode), (8 bytes).
    Removing main.o(.ARM.exidx.text.LL_USART_SetTXRXSwap), (8 bytes).
    Removing main.o(.ARM.exidx.text.LL_GPIO_ResetOutputPin), (8 bytes).
    Removing main.o(.bss.GPS_active), (4 bytes).
    Removing main.o(.bss.XB_VHF_active), (4 bytes).
    Removing stm32l0xx_it.o(.text), (0 bytes).
    Removing stm32l0xx_it.o(.ARM.exidx.text.NMI_Handler), (8 bytes).
    Removing stm32l0xx_it.o(.ARM.exidx.text.HardFault_Handler), (8 bytes).
    Removing stm32l0xx_it.o(.ARM.exidx.text.SVC_Handler), (8 bytes).
    Removing stm32l0xx_it.o(.ARM.exidx.text.PendSV_Handler), (8 bytes).
    Removing stm32l0xx_it.o(.ARM.exidx.text.SysTick_Handler), (8 bytes).
    Removing stm32l0xx_it.o(.ARM.exidx.text.RTC_IRQHandler), (8 bytes).
    Removing stm32l0xx_it.o(.ARM.exidx.text.USART4_5_IRQHandler), (8 bytes).
    Removing stm32l0xx_it.o(.ARM.exidx.text.TIM2_IRQHandler), (8 bytes).
    Removing stm32l0xx_it.o(.ARM.exidx.text.SPI1_IRQHandler), (8 bytes).
    Removing stm32l0xx_it.o(.ARM.exidx.text.USART1_IRQHandler), (8 bytes).
    Removing system_stm32l0xx_1.o(.text), (0 bytes).
    Removing system_stm32l0xx_1.o(.ARM.exidx.text.SystemInit), (8 bytes).
    Removing system_stm32l0xx_1.o(.text.SystemCoreClockUpdate), (328 bytes).
    Removing system_stm32l0xx_1.o(.ARM.exidx.text.SystemCoreClockUpdate), (8 bytes).
    Removing stm32l0xx_ll_gpio.o(.text), (0 bytes).
    Removing stm32l0xx_ll_gpio.o(.text.LL_GPIO_DeInit), (220 bytes).
    Removing stm32l0xx_ll_gpio.o(.ARM.exidx.text.LL_GPIO_DeInit), (8 bytes).
    Removing stm32l0xx_ll_gpio.o(.text.LL_IOP_GRP1_ForceReset), (28 bytes).
    Removing stm32l0xx_ll_gpio.o(.ARM.exidx.text.LL_IOP_GRP1_ForceReset), (8 bytes).
    Removing stm32l0xx_ll_gpio.o(.text.LL_IOP_GRP1_ReleaseReset), (28 bytes).
    Removing stm32l0xx_ll_gpio.o(.ARM.exidx.text.LL_IOP_GRP1_ReleaseReset), (8 bytes).
    Removing stm32l0xx_ll_gpio.o(.ARM.exidx.text.LL_GPIO_Init), (8 bytes).
    Removing stm32l0xx_ll_gpio.o(.ARM.exidx.text.LL_GPIO_SetPinMode), (8 bytes).
    Removing stm32l0xx_ll_gpio.o(.ARM.exidx.text.LL_GPIO_SetPinSpeed), (8 bytes).
    Removing stm32l0xx_ll_gpio.o(.ARM.exidx.text.LL_GPIO_SetPinPull), (8 bytes).
    Removing stm32l0xx_ll_gpio.o(.ARM.exidx.text.LL_GPIO_SetAFPin_0_7), (8 bytes).
    Removing stm32l0xx_ll_gpio.o(.ARM.exidx.text.LL_GPIO_SetAFPin_8_15), (8 bytes).
    Removing stm32l0xx_ll_gpio.o(.ARM.exidx.text.LL_GPIO_SetPinOutputType), (8 bytes).
    Removing stm32l0xx_ll_gpio.o(.text.LL_GPIO_StructInit), (48 bytes).
    Removing stm32l0xx_ll_gpio.o(.ARM.exidx.text.LL_GPIO_StructInit), (8 bytes).
    Removing stm32l0xx_ll_rtc.o(.text), (0 bytes).
    Removing stm32l0xx_ll_rtc.o(.text.LL_RTC_DeInit), (144 bytes).
    Removing stm32l0xx_ll_rtc.o(.ARM.exidx.text.LL_RTC_DeInit), (8 bytes).
    Removing stm32l0xx_ll_rtc.o(.ARM.exidx.text.LL_RTC_DisableWriteProtection), (8 bytes).
    Removing stm32l0xx_ll_rtc.o(.ARM.exidx.text.LL_RTC_EnterInitMode), (8 bytes).
    Removing stm32l0xx_ll_rtc.o(.ARM.exidx.text.LL_RTC_WaitForSynchro), (8 bytes).
    Removing stm32l0xx_ll_rtc.o(.ARM.exidx.text.LL_RTC_EnableWriteProtection), (8 bytes).
    Removing stm32l0xx_ll_rtc.o(.ARM.exidx.text.LL_RTC_Init), (8 bytes).
    Removing stm32l0xx_ll_rtc.o(.ARM.exidx.text.LL_RTC_SetHourFormat), (8 bytes).
    Removing stm32l0xx_ll_rtc.o(.ARM.exidx.text.LL_RTC_SetSynchPrescaler), (8 bytes).
    Removing stm32l0xx_ll_rtc.o(.ARM.exidx.text.LL_RTC_SetAsynchPrescaler), (8 bytes).
    Removing stm32l0xx_ll_rtc.o(.ARM.exidx.text.LL_RTC_DisableInitMode), (8 bytes).
    Removing stm32l0xx_ll_rtc.o(.text.LL_RTC_StructInit), (30 bytes).
    Removing stm32l0xx_ll_rtc.o(.ARM.exidx.text.LL_RTC_StructInit), (8 bytes).
    Removing stm32l0xx_ll_rtc.o(.ARM.exidx.text.LL_RTC_TIME_Init), (8 bytes).
    Removing stm32l0xx_ll_rtc.o(.ARM.exidx.text.LL_RTC_GetHourFormat), (8 bytes).
    Removing stm32l0xx_ll_rtc.o(.ARM.exidx.text.LL_RTC_TIME_Config), (8 bytes).
    Removing stm32l0xx_ll_rtc.o(.ARM.exidx.text.LL_RTC_IsShadowRegBypassEnabled), (8 bytes).
    Removing stm32l0xx_ll_rtc.o(.text.LL_RTC_TIME_StructInit), (30 bytes).
    Removing stm32l0xx_ll_rtc.o(.ARM.exidx.text.LL_RTC_TIME_StructInit), (8 bytes).
    Removing stm32l0xx_ll_rtc.o(.ARM.exidx.text.LL_RTC_DATE_Init), (8 bytes).
    Removing stm32l0xx_ll_rtc.o(.ARM.exidx.text.LL_RTC_DATE_Config), (8 bytes).
    Removing stm32l0xx_ll_rtc.o(.text.LL_RTC_DATE_StructInit), (32 bytes).
    Removing stm32l0xx_ll_rtc.o(.ARM.exidx.text.LL_RTC_DATE_StructInit), (8 bytes).
    Removing stm32l0xx_ll_rtc.o(.text.LL_RTC_ALMA_Init), (344 bytes).
    Removing stm32l0xx_ll_rtc.o(.ARM.exidx.text.LL_RTC_ALMA_Init), (8 bytes).
    Removing stm32l0xx_ll_rtc.o(.text.LL_RTC_ALMA_DisableWeekday), (24 bytes).
    Removing stm32l0xx_ll_rtc.o(.ARM.exidx.text.LL_RTC_ALMA_DisableWeekday), (8 bytes).
    Removing stm32l0xx_ll_rtc.o(.text.LL_RTC_ALMA_SetDay), (38 bytes).
    Removing stm32l0xx_ll_rtc.o(.ARM.exidx.text.LL_RTC_ALMA_SetDay), (8 bytes).
    Removing stm32l0xx_ll_rtc.o(.text.LL_RTC_ALMA_EnableWeekday), (24 bytes).
    Removing stm32l0xx_ll_rtc.o(.ARM.exidx.text.LL_RTC_ALMA_EnableWeekday), (8 bytes).
    Removing stm32l0xx_ll_rtc.o(.text.LL_RTC_ALMA_SetWeekDay), (38 bytes).
    Removing stm32l0xx_ll_rtc.o(.ARM.exidx.text.LL_RTC_ALMA_SetWeekDay), (8 bytes).
    Removing stm32l0xx_ll_rtc.o(.text.LL_RTC_ALMA_ConfigTime), (84 bytes).
    Removing stm32l0xx_ll_rtc.o(.ARM.exidx.text.LL_RTC_ALMA_ConfigTime), (8 bytes).
    Removing stm32l0xx_ll_rtc.o(.text.LL_RTC_ALMA_SetMask), (40 bytes).
    Removing stm32l0xx_ll_rtc.o(.ARM.exidx.text.LL_RTC_ALMA_SetMask), (8 bytes).
    Removing stm32l0xx_ll_rtc.o(.text.LL_RTC_ALMB_Init), (344 bytes).
    Removing stm32l0xx_ll_rtc.o(.ARM.exidx.text.LL_RTC_ALMB_Init), (8 bytes).
    Removing stm32l0xx_ll_rtc.o(.text.LL_RTC_ALMB_DisableWeekday), (24 bytes).
    Removing stm32l0xx_ll_rtc.o(.ARM.exidx.text.LL_RTC_ALMB_DisableWeekday), (8 bytes).
    Removing stm32l0xx_ll_rtc.o(.text.LL_RTC_ALMB_SetDay), (38 bytes).
    Removing stm32l0xx_ll_rtc.o(.ARM.exidx.text.LL_RTC_ALMB_SetDay), (8 bytes).
    Removing stm32l0xx_ll_rtc.o(.text.LL_RTC_ALMB_EnableWeekday), (24 bytes).
    Removing stm32l0xx_ll_rtc.o(.ARM.exidx.text.LL_RTC_ALMB_EnableWeekday), (8 bytes).
    Removing stm32l0xx_ll_rtc.o(.text.LL_RTC_ALMB_SetWeekDay), (38 bytes).
    Removing stm32l0xx_ll_rtc.o(.ARM.exidx.text.LL_RTC_ALMB_SetWeekDay), (8 bytes).
    Removing stm32l0xx_ll_rtc.o(.text.LL_RTC_ALMB_ConfigTime), (84 bytes).
    Removing stm32l0xx_ll_rtc.o(.ARM.exidx.text.LL_RTC_ALMB_ConfigTime), (8 bytes).
    Removing stm32l0xx_ll_rtc.o(.text.LL_RTC_ALMB_SetMask), (40 bytes).
    Removing stm32l0xx_ll_rtc.o(.ARM.exidx.text.LL_RTC_ALMB_SetMask), (8 bytes).
    Removing stm32l0xx_ll_rtc.o(.text.LL_RTC_ALMA_StructInit), (44 bytes).
    Removing stm32l0xx_ll_rtc.o(.ARM.exidx.text.LL_RTC_ALMA_StructInit), (8 bytes).
    Removing stm32l0xx_ll_rtc.o(.text.LL_RTC_ALMB_StructInit), (44 bytes).
    Removing stm32l0xx_ll_rtc.o(.ARM.exidx.text.LL_RTC_ALMB_StructInit), (8 bytes).
    Removing stm32l0xx_ll_rtc.o(.ARM.exidx.text.LL_RTC_IsActiveFlag_INIT), (8 bytes).
    Removing stm32l0xx_ll_rtc.o(.ARM.exidx.text.LL_RTC_EnableInitMode), (8 bytes).
    Removing stm32l0xx_ll_rtc.o(.ARM.exidx.text.LL_SYSTICK_IsActiveCounterFlag), (8 bytes).
    Removing stm32l0xx_ll_rtc.o(.text.LL_RTC_ExitInitMode), (22 bytes).
    Removing stm32l0xx_ll_rtc.o(.ARM.exidx.text.LL_RTC_ExitInitMode), (8 bytes).
    Removing stm32l0xx_ll_rtc.o(.ARM.exidx.text.LL_RTC_ClearFlag_RS), (8 bytes).
    Removing stm32l0xx_ll_rtc.o(.ARM.exidx.text.LL_RTC_IsActiveFlag_RS), (8 bytes).
    Removing stm32l0xx_ll_spi.o(.text), (0 bytes).
    Removing stm32l0xx_ll_spi.o(.text.LL_SPI_DeInit), (100 bytes).
    Removing stm32l0xx_ll_spi.o(.ARM.exidx.text.LL_SPI_DeInit), (8 bytes).
    Removing stm32l0xx_ll_spi.o(.text.LL_APB2_GRP1_ForceReset), (28 bytes).
    Removing stm32l0xx_ll_spi.o(.ARM.exidx.text.LL_APB2_GRP1_ForceReset), (8 bytes).
    Removing stm32l0xx_ll_spi.o(.text.LL_APB2_GRP1_ReleaseReset), (28 bytes).
    Removing stm32l0xx_ll_spi.o(.ARM.exidx.text.LL_APB2_GRP1_ReleaseReset), (8 bytes).
    Removing stm32l0xx_ll_spi.o(.text.LL_APB1_GRP1_ForceReset), (28 bytes).
    Removing stm32l0xx_ll_spi.o(.ARM.exidx.text.LL_APB1_GRP1_ForceReset), (8 bytes).
    Removing stm32l0xx_ll_spi.o(.text.LL_APB1_GRP1_ReleaseReset), (28 bytes).
    Removing stm32l0xx_ll_spi.o(.ARM.exidx.text.LL_APB1_GRP1_ReleaseReset), (8 bytes).
    Removing stm32l0xx_ll_spi.o(.ARM.exidx.text.LL_SPI_Init), (8 bytes).
    Removing stm32l0xx_ll_spi.o(.ARM.exidx.text.LL_SPI_IsEnabled), (8 bytes).
    Removing stm32l0xx_ll_spi.o(.ARM.exidx.text.LL_SPI_SetCRCPolynomial), (8 bytes).
    Removing stm32l0xx_ll_spi.o(.text.LL_SPI_StructInit), (56 bytes).
    Removing stm32l0xx_ll_spi.o(.ARM.exidx.text.LL_SPI_StructInit), (8 bytes).
    Removing stm32l0xx_ll_spi.o(.text.LL_I2S_DeInit), (20 bytes).
    Removing stm32l0xx_ll_spi.o(.ARM.exidx.text.LL_I2S_DeInit), (8 bytes).
    Removing stm32l0xx_ll_spi.o(.text.LL_I2S_Init), (292 bytes).
    Removing stm32l0xx_ll_spi.o(.ARM.exidx.text.LL_I2S_Init), (8 bytes).
    Removing stm32l0xx_ll_spi.o(.text.LL_I2S_IsEnabled), (24 bytes).
    Removing stm32l0xx_ll_spi.o(.ARM.exidx.text.LL_I2S_IsEnabled), (8 bytes).
    Removing stm32l0xx_ll_spi.o(.text.LL_I2S_StructInit), (40 bytes).
    Removing stm32l0xx_ll_spi.o(.ARM.exidx.text.LL_I2S_StructInit), (8 bytes).
    Removing stm32l0xx_ll_spi.o(.text.LL_I2S_ConfigPrescaler), (52 bytes).
    Removing stm32l0xx_ll_spi.o(.ARM.exidx.text.LL_I2S_ConfigPrescaler), (8 bytes).
    Removing stm32l0xx_ll_dma.o(.text), (0 bytes).
    Removing stm32l0xx_ll_dma.o(.text.LL_DMA_DeInit), (492 bytes).
    Removing stm32l0xx_ll_dma.o(.ARM.exidx.text.LL_DMA_DeInit), (8 bytes).
    Removing stm32l0xx_ll_dma.o(.text.LL_AHB1_GRP1_ForceReset), (28 bytes).
    Removing stm32l0xx_ll_dma.o(.ARM.exidx.text.LL_AHB1_GRP1_ForceReset), (8 bytes).
    Removing stm32l0xx_ll_dma.o(.text.LL_AHB1_GRP1_ReleaseReset), (28 bytes).
    Removing stm32l0xx_ll_dma.o(.ARM.exidx.text.LL_AHB1_GRP1_ReleaseReset), (8 bytes).
    Removing stm32l0xx_ll_dma.o(.text.LL_DMA_SetPeriphRequest), (54 bytes).
    Removing stm32l0xx_ll_dma.o(.ARM.exidx.text.LL_DMA_SetPeriphRequest), (8 bytes).
    Removing stm32l0xx_ll_dma.o(.text.LL_DMA_ClearFlag_GI1), (18 bytes).
    Removing stm32l0xx_ll_dma.o(.ARM.exidx.text.LL_DMA_ClearFlag_GI1), (8 bytes).
    Removing stm32l0xx_ll_dma.o(.text.LL_DMA_ClearFlag_GI2), (18 bytes).
    Removing stm32l0xx_ll_dma.o(.ARM.exidx.text.LL_DMA_ClearFlag_GI2), (8 bytes).
    Removing stm32l0xx_ll_dma.o(.text.LL_DMA_ClearFlag_GI3), (20 bytes).
    Removing stm32l0xx_ll_dma.o(.ARM.exidx.text.LL_DMA_ClearFlag_GI3), (8 bytes).
    Removing stm32l0xx_ll_dma.o(.text.LL_DMA_ClearFlag_GI4), (20 bytes).
    Removing stm32l0xx_ll_dma.o(.ARM.exidx.text.LL_DMA_ClearFlag_GI4), (8 bytes).
    Removing stm32l0xx_ll_dma.o(.text.LL_DMA_ClearFlag_GI5), (20 bytes).
    Removing stm32l0xx_ll_dma.o(.ARM.exidx.text.LL_DMA_ClearFlag_GI5), (8 bytes).
    Removing stm32l0xx_ll_dma.o(.text.LL_DMA_ClearFlag_GI6), (20 bytes).
    Removing stm32l0xx_ll_dma.o(.ARM.exidx.text.LL_DMA_ClearFlag_GI6), (8 bytes).
    Removing stm32l0xx_ll_dma.o(.text.LL_DMA_ClearFlag_GI7), (20 bytes).
    Removing stm32l0xx_ll_dma.o(.ARM.exidx.text.LL_DMA_ClearFlag_GI7), (8 bytes).
    Removing stm32l0xx_ll_dma.o(.text.LL_DMA_Init), (114 bytes).
    Removing stm32l0xx_ll_dma.o(.ARM.exidx.text.LL_DMA_Init), (8 bytes).
    Removing stm32l0xx_ll_dma.o(.text.LL_DMA_ConfigTransfer), (68 bytes).
    Removing stm32l0xx_ll_dma.o(.ARM.exidx.text.LL_DMA_ConfigTransfer), (8 bytes).
    Removing stm32l0xx_ll_dma.o(.text.LL_DMA_SetMemoryAddress), (48 bytes).
    Removing stm32l0xx_ll_dma.o(.ARM.exidx.text.LL_DMA_SetMemoryAddress), (8 bytes).
    Removing stm32l0xx_ll_dma.o(.text.LL_DMA_SetPeriphAddress), (48 bytes).
    Removing stm32l0xx_ll_dma.o(.ARM.exidx.text.LL_DMA_SetPeriphAddress), (8 bytes).
    Removing stm32l0xx_ll_dma.o(.text.LL_DMA_SetDataLength), (72 bytes).
    Removing stm32l0xx_ll_dma.o(.ARM.exidx.text.LL_DMA_SetDataLength), (8 bytes).
    Removing stm32l0xx_ll_dma.o(.text.LL_DMA_StructInit), (58 bytes).
    Removing stm32l0xx_ll_dma.o(.ARM.exidx.text.LL_DMA_StructInit), (8 bytes).
    Removing stm32l0xx_ll_dma.o(.rodata.CHANNEL_OFFSET_TAB), (7 bytes).
    Removing stm32l0xx_ll_pwr.o(.text), (0 bytes).
    Removing stm32l0xx_ll_pwr.o(.text.LL_PWR_DeInit), (26 bytes).
    Removing stm32l0xx_ll_pwr.o(.ARM.exidx.text.LL_PWR_DeInit), (8 bytes).
    Removing stm32l0xx_ll_pwr.o(.text.LL_APB1_GRP1_ForceReset), (28 bytes).
    Removing stm32l0xx_ll_pwr.o(.ARM.exidx.text.LL_APB1_GRP1_ForceReset), (8 bytes).
    Removing stm32l0xx_ll_pwr.o(.text.LL_APB1_GRP1_ReleaseReset), (28 bytes).
    Removing stm32l0xx_ll_pwr.o(.ARM.exidx.text.LL_APB1_GRP1_ReleaseReset), (8 bytes).
    Removing stm32l0xx_ll_exti.o(.text), (0 bytes).
    Removing stm32l0xx_ll_exti.o(.text.LL_EXTI_DeInit), (68 bytes).
    Removing stm32l0xx_ll_exti.o(.ARM.exidx.text.LL_EXTI_DeInit), (8 bytes).
    Removing stm32l0xx_ll_exti.o(.text.LL_EXTI_Init), (258 bytes).
    Removing stm32l0xx_ll_exti.o(.ARM.exidx.text.LL_EXTI_Init), (8 bytes).
    Removing stm32l0xx_ll_exti.o(.text.LL_EXTI_DisableEvent_0_31), (28 bytes).
    Removing stm32l0xx_ll_exti.o(.ARM.exidx.text.LL_EXTI_DisableEvent_0_31), (8 bytes).
    Removing stm32l0xx_ll_exti.o(.text.LL_EXTI_EnableIT_0_31), (28 bytes).
    Removing stm32l0xx_ll_exti.o(.ARM.exidx.text.LL_EXTI_EnableIT_0_31), (8 bytes).
    Removing stm32l0xx_ll_exti.o(.text.LL_EXTI_DisableIT_0_31), (28 bytes).
    Removing stm32l0xx_ll_exti.o(.ARM.exidx.text.LL_EXTI_DisableIT_0_31), (8 bytes).
    Removing stm32l0xx_ll_exti.o(.text.LL_EXTI_EnableEvent_0_31), (28 bytes).
    Removing stm32l0xx_ll_exti.o(.ARM.exidx.text.LL_EXTI_EnableEvent_0_31), (8 bytes).
    Removing stm32l0xx_ll_exti.o(.text.LL_EXTI_DisableFallingTrig_0_31), (28 bytes).
    Removing stm32l0xx_ll_exti.o(.ARM.exidx.text.LL_EXTI_DisableFallingTrig_0_31), (8 bytes).
    Removing stm32l0xx_ll_exti.o(.text.LL_EXTI_EnableRisingTrig_0_31), (28 bytes).
    Removing stm32l0xx_ll_exti.o(.ARM.exidx.text.LL_EXTI_EnableRisingTrig_0_31), (8 bytes).
    Removing stm32l0xx_ll_exti.o(.text.LL_EXTI_DisableRisingTrig_0_31), (28 bytes).
    Removing stm32l0xx_ll_exti.o(.ARM.exidx.text.LL_EXTI_DisableRisingTrig_0_31), (8 bytes).
    Removing stm32l0xx_ll_exti.o(.text.LL_EXTI_EnableFallingTrig_0_31), (28 bytes).
    Removing stm32l0xx_ll_exti.o(.ARM.exidx.text.LL_EXTI_EnableFallingTrig_0_31), (8 bytes).
    Removing stm32l0xx_ll_exti.o(.text.LL_EXTI_StructInit), (32 bytes).
    Removing stm32l0xx_ll_exti.o(.ARM.exidx.text.LL_EXTI_StructInit), (8 bytes).
    Removing stm32l0xx_ll_tim.o(.text), (0 bytes).
    Removing stm32l0xx_ll_tim.o(.text.LL_TIM_DeInit), (220 bytes).
    Removing stm32l0xx_ll_tim.o(.ARM.exidx.text.LL_TIM_DeInit), (8 bytes).
    Removing stm32l0xx_ll_tim.o(.text.LL_APB1_GRP1_ForceReset), (28 bytes).
    Removing stm32l0xx_ll_tim.o(.ARM.exidx.text.LL_APB1_GRP1_ForceReset), (8 bytes).
    Removing stm32l0xx_ll_tim.o(.text.LL_APB1_GRP1_ReleaseReset), (28 bytes).
    Removing stm32l0xx_ll_tim.o(.ARM.exidx.text.LL_APB1_GRP1_ReleaseReset), (8 bytes).
    Removing stm32l0xx_ll_tim.o(.text.LL_APB2_GRP1_ForceReset), (28 bytes).
    Removing stm32l0xx_ll_tim.o(.ARM.exidx.text.LL_APB2_GRP1_ForceReset), (8 bytes).
    Removing stm32l0xx_ll_tim.o(.text.LL_APB2_GRP1_ReleaseReset), (28 bytes).
    Removing stm32l0xx_ll_tim.o(.ARM.exidx.text.LL_APB2_GRP1_ReleaseReset), (8 bytes).
    Removing stm32l0xx_ll_tim.o(.text.LL_TIM_StructInit), (32 bytes).
    Removing stm32l0xx_ll_tim.o(.ARM.exidx.text.LL_TIM_StructInit), (8 bytes).
    Removing stm32l0xx_ll_tim.o(.ARM.exidx.text.LL_TIM_Init), (8 bytes).
    Removing stm32l0xx_ll_tim.o(.ARM.exidx.text.LL_TIM_SetAutoReload), (8 bytes).
    Removing stm32l0xx_ll_tim.o(.ARM.exidx.text.LL_TIM_SetPrescaler), (8 bytes).
    Removing stm32l0xx_ll_tim.o(.ARM.exidx.text.LL_TIM_GenerateEvent_UPDATE), (8 bytes).
    Removing stm32l0xx_ll_tim.o(.text.LL_TIM_OC_StructInit), (30 bytes).
    Removing stm32l0xx_ll_tim.o(.ARM.exidx.text.LL_TIM_OC_StructInit), (8 bytes).
    Removing stm32l0xx_ll_tim.o(.text.LL_TIM_OC_Init), (136 bytes).
    Removing stm32l0xx_ll_tim.o(.ARM.exidx.text.LL_TIM_OC_Init), (8 bytes).
    Removing stm32l0xx_ll_tim.o(.text.OC1Config), (128 bytes).
    Removing stm32l0xx_ll_tim.o(.ARM.exidx.text.OC1Config), (8 bytes).
    Removing stm32l0xx_ll_tim.o(.text.OC2Config), (138 bytes).
    Removing stm32l0xx_ll_tim.o(.ARM.exidx.text.OC2Config), (8 bytes).
    Removing stm32l0xx_ll_tim.o(.text.OC3Config), (136 bytes).
    Removing stm32l0xx_ll_tim.o(.ARM.exidx.text.OC3Config), (8 bytes).
    Removing stm32l0xx_ll_tim.o(.text.OC4Config), (144 bytes).
    Removing stm32l0xx_ll_tim.o(.ARM.exidx.text.OC4Config), (8 bytes).
    Removing stm32l0xx_ll_tim.o(.text.LL_TIM_IC_StructInit), (34 bytes).
    Removing stm32l0xx_ll_tim.o(.ARM.exidx.text.LL_TIM_IC_StructInit), (8 bytes).
    Removing stm32l0xx_ll_tim.o(.text.LL_TIM_IC_Init), (136 bytes).
    Removing stm32l0xx_ll_tim.o(.ARM.exidx.text.LL_TIM_IC_Init), (8 bytes).
    Removing stm32l0xx_ll_tim.o(.text.IC1Config), (80 bytes).
    Removing stm32l0xx_ll_tim.o(.ARM.exidx.text.IC1Config), (8 bytes).
    Removing stm32l0xx_ll_tim.o(.text.IC2Config), (84 bytes).
    Removing stm32l0xx_ll_tim.o(.ARM.exidx.text.IC2Config), (8 bytes).
    Removing stm32l0xx_ll_tim.o(.text.IC3Config), (86 bytes).
    Removing stm32l0xx_ll_tim.o(.ARM.exidx.text.IC3Config), (8 bytes).
    Removing stm32l0xx_ll_tim.o(.text.IC4Config), (88 bytes).
    Removing stm32l0xx_ll_tim.o(.ARM.exidx.text.IC4Config), (8 bytes).
    Removing stm32l0xx_ll_tim.o(.text.LL_TIM_ENCODER_StructInit), (54 bytes).
    Removing stm32l0xx_ll_tim.o(.ARM.exidx.text.LL_TIM_ENCODER_StructInit), (8 bytes).
    Removing stm32l0xx_ll_tim.o(.text.LL_TIM_ENCODER_Init), (184 bytes).
    Removing stm32l0xx_ll_tim.o(.ARM.exidx.text.LL_TIM_ENCODER_Init), (8 bytes).
    Removing stm32l0xx_ll_tim.o(.text.LL_TIM_SetEncoderMode), (34 bytes).
    Removing stm32l0xx_ll_tim.o(.ARM.exidx.text.LL_TIM_SetEncoderMode), (8 bytes).
    Removing stm32l0xx_ll_tim.o(.text.LL_TIM_OC_SetCompareCH1), (24 bytes).
    Removing stm32l0xx_ll_tim.o(.ARM.exidx.text.LL_TIM_OC_SetCompareCH1), (8 bytes).
    Removing stm32l0xx_ll_tim.o(.text.LL_TIM_OC_SetCompareCH2), (24 bytes).
    Removing stm32l0xx_ll_tim.o(.ARM.exidx.text.LL_TIM_OC_SetCompareCH2), (8 bytes).
    Removing stm32l0xx_ll_tim.o(.text.LL_TIM_OC_SetCompareCH3), (24 bytes).
    Removing stm32l0xx_ll_tim.o(.ARM.exidx.text.LL_TIM_OC_SetCompareCH3), (8 bytes).
    Removing stm32l0xx_ll_tim.o(.text.LL_TIM_OC_SetCompareCH4), (24 bytes).
    Removing stm32l0xx_ll_tim.o(.ARM.exidx.text.LL_TIM_OC_SetCompareCH4), (8 bytes).
    Removing stm32l0xx_ll_usart.o(.text), (0 bytes).
    Removing stm32l0xx_ll_usart.o(.text.LL_USART_DeInit), (168 bytes).
    Removing stm32l0xx_ll_usart.o(.ARM.exidx.text.LL_USART_DeInit), (8 bytes).
    Removing stm32l0xx_ll_usart.o(.text.LL_APB2_GRP1_ForceReset), (28 bytes).
    Removing stm32l0xx_ll_usart.o(.ARM.exidx.text.LL_APB2_GRP1_ForceReset), (8 bytes).
    Removing stm32l0xx_ll_usart.o(.text.LL_APB2_GRP1_ReleaseReset), (28 bytes).
    Removing stm32l0xx_ll_usart.o(.ARM.exidx.text.LL_APB2_GRP1_ReleaseReset), (8 bytes).
    Removing stm32l0xx_ll_usart.o(.text.LL_APB1_GRP1_ForceReset), (28 bytes).
    Removing stm32l0xx_ll_usart.o(.ARM.exidx.text.LL_APB1_GRP1_ForceReset), (8 bytes).
    Removing stm32l0xx_ll_usart.o(.text.LL_APB1_GRP1_ReleaseReset), (28 bytes).
    Removing stm32l0xx_ll_usart.o(.ARM.exidx.text.LL_APB1_GRP1_ReleaseReset), (8 bytes).
    Removing stm32l0xx_ll_usart.o(.ARM.exidx.text.LL_USART_Init), (8 bytes).
    Removing stm32l0xx_ll_usart.o(.ARM.exidx.text.LL_USART_IsEnabled), (8 bytes).
    Removing stm32l0xx_ll_usart.o(.ARM.exidx.text.LL_USART_SetStopBitsLength), (8 bytes).
    Removing stm32l0xx_ll_usart.o(.ARM.exidx.text.LL_USART_SetHWFlowCtrl), (8 bytes).
    Removing stm32l0xx_ll_usart.o(.ARM.exidx.text.LL_USART_SetBaudRate), (8 bytes).
    Removing stm32l0xx_ll_usart.o(.text.LL_USART_StructInit), (48 bytes).
    Removing stm32l0xx_ll_usart.o(.ARM.exidx.text.LL_USART_StructInit), (8 bytes).
    Removing stm32l0xx_ll_usart.o(.text.LL_USART_ClockInit), (106 bytes).
    Removing stm32l0xx_ll_usart.o(.ARM.exidx.text.LL_USART_ClockInit), (8 bytes).
    Removing stm32l0xx_ll_usart.o(.text.LL_USART_DisableSCLKOutput), (24 bytes).
    Removing stm32l0xx_ll_usart.o(.ARM.exidx.text.LL_USART_DisableSCLKOutput), (8 bytes).
    Removing stm32l0xx_ll_usart.o(.text.LL_USART_ClockStructInit), (30 bytes).
    Removing stm32l0xx_ll_usart.o(.ARM.exidx.text.LL_USART_ClockStructInit), (8 bytes).
    Removing stm32l0xx_ll_rcc.o(.text), (0 bytes).
    Removing stm32l0xx_ll_rcc.o(.text.LL_RCC_DeInit), (176 bytes).
    Removing stm32l0xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_DeInit), (8 bytes).
    Removing stm32l0xx_ll_rcc.o(.text.LL_RCC_MSI_Enable), (20 bytes).
    Removing stm32l0xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_MSI_Enable), (8 bytes).
    Removing stm32l0xx_ll_rcc.o(.text.LL_RCC_MSI_IsReady), (20 bytes).
    Removing stm32l0xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_MSI_IsReady), (8 bytes).
    Removing stm32l0xx_ll_rcc.o(.text.LL_RCC_MSI_SetRange), (32 bytes).
    Removing stm32l0xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_MSI_SetRange), (8 bytes).
    Removing stm32l0xx_ll_rcc.o(.text.LL_RCC_MSI_SetCalibTrimming), (36 bytes).
    Removing stm32l0xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_MSI_SetCalibTrimming), (8 bytes).
    Removing stm32l0xx_ll_rcc.o(.text.LL_RCC_HSI_SetCalibTrimming), (36 bytes).
    Removing stm32l0xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_HSI_SetCalibTrimming), (8 bytes).
    Removing stm32l0xx_ll_rcc.o(.text.LL_RCC_HSE_DisableBypass), (20 bytes).
    Removing stm32l0xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_HSE_DisableBypass), (8 bytes).
    Removing stm32l0xx_ll_rcc.o(.text.LL_RCC_PLL_IsReady), (20 bytes).
    Removing stm32l0xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_PLL_IsReady), (8 bytes).
    Removing stm32l0xx_ll_rcc.o(.text.LL_RCC_ClearResetFlags), (20 bytes).
    Removing stm32l0xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_ClearResetFlags), (8 bytes).
    Removing stm32l0xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_GetSystemClocksFreq), (8 bytes).
    Removing stm32l0xx_ll_rcc.o(.ARM.exidx.text.RCC_GetSystemClockFreq), (8 bytes).
    Removing stm32l0xx_ll_rcc.o(.ARM.exidx.text.RCC_GetHCLKClockFreq), (8 bytes).
    Removing stm32l0xx_ll_rcc.o(.ARM.exidx.text.RCC_GetPCLK1ClockFreq), (8 bytes).
    Removing stm32l0xx_ll_rcc.o(.ARM.exidx.text.RCC_GetPCLK2ClockFreq), (8 bytes).
    Removing stm32l0xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_GetUSARTClockFreq), (8 bytes).
    Removing stm32l0xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_GetUSARTClockSource), (8 bytes).
    Removing stm32l0xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_HSI_IsReady), (8 bytes).
    Removing stm32l0xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_IsActiveFlag_HSIDIV), (8 bytes).
    Removing stm32l0xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_LSE_IsReady), (8 bytes).
    Removing stm32l0xx_ll_rcc.o(.text.LL_RCC_GetI2CClockFreq), (276 bytes).
    Removing stm32l0xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_GetI2CClockFreq), (8 bytes).
    Removing stm32l0xx_ll_rcc.o(.text.LL_RCC_GetI2CClockSource), (32 bytes).
    Removing stm32l0xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_GetI2CClockSource), (8 bytes).
    Removing stm32l0xx_ll_rcc.o(.text.LL_RCC_GetLPUARTClockFreq), (164 bytes).
    Removing stm32l0xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_GetLPUARTClockFreq), (8 bytes).
    Removing stm32l0xx_ll_rcc.o(.text.LL_RCC_GetLPUARTClockSource), (24 bytes).
    Removing stm32l0xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_GetLPUARTClockSource), (8 bytes).
    Removing stm32l0xx_ll_rcc.o(.text.LL_RCC_GetLPTIMClockFreq), (192 bytes).
    Removing stm32l0xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_GetLPTIMClockFreq), (8 bytes).
    Removing stm32l0xx_ll_rcc.o(.text.LL_RCC_GetLPTIMClockSource), (24 bytes).
    Removing stm32l0xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_GetLPTIMClockSource), (8 bytes).
    Removing stm32l0xx_ll_rcc.o(.text.LL_RCC_LSI_IsReady), (16 bytes).
    Removing stm32l0xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_LSI_IsReady), (8 bytes).
    Removing stm32l0xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_GetSysClkSource), (8 bytes).
    Removing stm32l0xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_MSI_GetRange), (8 bytes).
    Removing stm32l0xx_ll_rcc.o(.ARM.exidx.text.RCC_PLL_GetFreqDomain_SYS), (8 bytes).
    Removing stm32l0xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_GetAHBPrescaler), (8 bytes).
    Removing stm32l0xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_GetAPB1Prescaler), (8 bytes).
    Removing stm32l0xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_GetAPB2Prescaler), (8 bytes).
    Removing stm32l0xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_PLL_GetMainSource), (8 bytes).
    Removing stm32l0xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_PLL_GetMultiplicator), (8 bytes).
    Removing stm32l0xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_PLL_GetDivider), (8 bytes).
    Removing stm32l0xx_ll_utils.o(.text), (0 bytes).
    Removing stm32l0xx_ll_utils.o(.ARM.exidx.text.LL_Init1msTick), (8 bytes).
    Removing stm32l0xx_ll_utils.o(.ARM.exidx.text.LL_InitTick), (8 bytes).
    Removing stm32l0xx_ll_utils.o(.text.LL_mDelay), (76 bytes).
    Removing stm32l0xx_ll_utils.o(.ARM.exidx.text.LL_mDelay), (8 bytes).
    Removing stm32l0xx_ll_utils.o(.ARM.exidx.text.LL_SetSystemCoreClock), (8 bytes).
    Removing stm32l0xx_ll_utils.o(.text.LL_PLL_ConfigSystemClock_HSI), (120 bytes).
    Removing stm32l0xx_ll_utils.o(.ARM.exidx.text.LL_PLL_ConfigSystemClock_HSI), (8 bytes).
    Removing stm32l0xx_ll_utils.o(.text.UTILS_PLL_IsBusy), (36 bytes).
    Removing stm32l0xx_ll_utils.o(.ARM.exidx.text.UTILS_PLL_IsBusy), (8 bytes).
    Removing stm32l0xx_ll_utils.o(.text.UTILS_GetPLLOutputFrequency), (64 bytes).
    Removing stm32l0xx_ll_utils.o(.ARM.exidx.text.UTILS_GetPLLOutputFrequency), (8 bytes).
    Removing stm32l0xx_ll_utils.o(.text.LL_RCC_HSI_IsReady), (16 bytes).
    Removing stm32l0xx_ll_utils.o(.ARM.exidx.text.LL_RCC_HSI_IsReady), (8 bytes).
    Removing stm32l0xx_ll_utils.o(.text.LL_RCC_HSI_Enable), (16 bytes).
    Removing stm32l0xx_ll_utils.o(.ARM.exidx.text.LL_RCC_HSI_Enable), (8 bytes).
    Removing stm32l0xx_ll_utils.o(.text.LL_RCC_PLL_ConfigDomain_SYS), (56 bytes).
    Removing stm32l0xx_ll_utils.o(.ARM.exidx.text.LL_RCC_PLL_ConfigDomain_SYS), (8 bytes).
    Removing stm32l0xx_ll_utils.o(.text.UTILS_EnablePLLAndSwitchSystem), (196 bytes).
    Removing stm32l0xx_ll_utils.o(.ARM.exidx.text.UTILS_EnablePLLAndSwitchSystem), (8 bytes).
    Removing stm32l0xx_ll_utils.o(.text.LL_PLL_ConfigSystemClock_HSE), (150 bytes).
    Removing stm32l0xx_ll_utils.o(.ARM.exidx.text.LL_PLL_ConfigSystemClock_HSE), (8 bytes).
    Removing stm32l0xx_ll_utils.o(.text.LL_RCC_HSE_IsReady), (20 bytes).
    Removing stm32l0xx_ll_utils.o(.ARM.exidx.text.LL_RCC_HSE_IsReady), (8 bytes).
    Removing stm32l0xx_ll_utils.o(.text.LL_RCC_HSE_EnableBypass), (20 bytes).
    Removing stm32l0xx_ll_utils.o(.ARM.exidx.text.LL_RCC_HSE_EnableBypass), (8 bytes).
    Removing stm32l0xx_ll_utils.o(.text.LL_RCC_HSE_DisableBypass), (20 bytes).
    Removing stm32l0xx_ll_utils.o(.ARM.exidx.text.LL_RCC_HSE_DisableBypass), (8 bytes).
    Removing stm32l0xx_ll_utils.o(.text.LL_RCC_HSE_Enable), (20 bytes).
    Removing stm32l0xx_ll_utils.o(.ARM.exidx.text.LL_RCC_HSE_Enable), (8 bytes).
    Removing stm32l0xx_ll_utils.o(.text.LL_RCC_PLL_IsReady), (20 bytes).
    Removing stm32l0xx_ll_utils.o(.ARM.exidx.text.LL_RCC_PLL_IsReady), (8 bytes).
    Removing stm32l0xx_ll_utils.o(.text.UTILS_SetFlashLatency), (168 bytes).
    Removing stm32l0xx_ll_utils.o(.ARM.exidx.text.UTILS_SetFlashLatency), (8 bytes).
    Removing stm32l0xx_ll_utils.o(.text.LL_RCC_PLL_Enable), (20 bytes).
    Removing stm32l0xx_ll_utils.o(.ARM.exidx.text.LL_RCC_PLL_Enable), (8 bytes).
    Removing stm32l0xx_ll_utils.o(.text.LL_RCC_SetAHBPrescaler), (32 bytes).
    Removing stm32l0xx_ll_utils.o(.ARM.exidx.text.LL_RCC_SetAHBPrescaler), (8 bytes).
    Removing stm32l0xx_ll_utils.o(.text.LL_RCC_SetSysClkSource), (32 bytes).
    Removing stm32l0xx_ll_utils.o(.ARM.exidx.text.LL_RCC_SetSysClkSource), (8 bytes).
    Removing stm32l0xx_ll_utils.o(.text.LL_RCC_GetSysClkSource), (16 bytes).
    Removing stm32l0xx_ll_utils.o(.ARM.exidx.text.LL_RCC_GetSysClkSource), (8 bytes).
    Removing stm32l0xx_ll_utils.o(.text.LL_RCC_SetAPB1Prescaler), (32 bytes).
    Removing stm32l0xx_ll_utils.o(.ARM.exidx.text.LL_RCC_SetAPB1Prescaler), (8 bytes).
    Removing stm32l0xx_ll_utils.o(.text.LL_RCC_SetAPB2Prescaler), (32 bytes).
    Removing stm32l0xx_ll_utils.o(.ARM.exidx.text.LL_RCC_SetAPB2Prescaler), (8 bytes).
    Removing stm32l0xx_ll_utils.o(.text.LL_PWR_GetRegulVoltageScaling), (16 bytes).
    Removing stm32l0xx_ll_utils.o(.ARM.exidx.text.LL_PWR_GetRegulVoltageScaling), (8 bytes).
    Removing stm32l0xx_ll_utils.o(.text.LL_FLASH_SetLatency), (32 bytes).
    Removing stm32l0xx_ll_utils.o(.ARM.exidx.text.LL_FLASH_SetLatency), (8 bytes).
    Removing stm32l0xx_ll_utils.o(.text.LL_FLASH_GetLatency), (16 bytes).
    Removing stm32l0xx_ll_utils.o(.ARM.exidx.text.LL_FLASH_GetLatency), (8 bytes).
    Removing fcmple.o(.text), (28 bytes).
    Removing fcmpgt.o(.text), (28 bytes).
    Removing fflti.o(.text), (22 bytes).
    Removing fepilogue.o(.text), (130 bytes).
    Removing dadd.o(.text), (356 bytes).
    Removing dmul.o(.text), (208 bytes).
    Removing ddiv.o(.text), (240 bytes).
    Removing dfixul.o(.text), (64 bytes).
    Removing cdrcmple.o(.text), (40 bytes).
    Removing depilogue.o(.text), (190 bytes).
    Removing depilogue.o(i.__ARM_clz), (46 bytes).

585 unused section(s) (total 21192 bytes) removed from the image.

==============================================================================

Image Symbol Table

    Local Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    ../clib/microlib/ctype/ctype.c           0x00000000   Number         0  ctype_o.o ABSOLUTE
    ../clib/microlib/ctype/ctype.c           0x00000000   Number         0  isalnum_o.o ABSOLUTE
    ../clib/microlib/ctype/ctype.c           0x00000000   Number         0  isalpha_o.o ABSOLUTE
    ../clib/microlib/ctype/ctype.c           0x00000000   Number         0  isblank_o.o ABSOLUTE
    ../clib/microlib/ctype/ctype.c           0x00000000   Number         0  iscntrl_o.o ABSOLUTE
    ../clib/microlib/ctype/ctype.c           0x00000000   Number         0  isdigit_o.o ABSOLUTE
    ../clib/microlib/ctype/ctype.c           0x00000000   Number         0  isgraph_o.o ABSOLUTE
    ../clib/microlib/ctype/ctype.c           0x00000000   Number         0  islower_o.o ABSOLUTE
    ../clib/microlib/ctype/ctype.c           0x00000000   Number         0  isprint_o.o ABSOLUTE
    ../clib/microlib/ctype/ctype.c           0x00000000   Number         0  ispunct_o.o ABSOLUTE
    ../clib/microlib/ctype/ctype.c           0x00000000   Number         0  isspace_o.o ABSOLUTE
    ../clib/microlib/ctype/ctype.c           0x00000000   Number         0  isupper_o.o ABSOLUTE
    ../clib/microlib/ctype/ctype.c           0x00000000   Number         0  isxdigit_o.o ABSOLUTE
    ../clib/microlib/division.c              0x00000000   Number         0  uidiv.o ABSOLUTE
    ../clib/microlib/division.c              0x00000000   Number         0  idiv.o ABSOLUTE
    ../clib/microlib/division.c              0x00000000   Number         0  uldiv.o ABSOLUTE
    ../clib/microlib/errno.c                 0x00000000   Number         0  errno.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry2.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry5.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry7a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry7b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry8a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry8b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry9a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry9b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry10a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry10b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry11a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry11b.o ABSOLUTE
    ../clib/microlib/longlong.c              0x00000000   Number         0  llshl.o ABSOLUTE
    ../clib/microlib/longlong.c              0x00000000   Number         0  llushr.o ABSOLUTE
    ../clib/microlib/longlong.c              0x00000000   Number         0  llsshr.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printfa.o ABSOLUTE
    ../clib/microlib/stdio/fputc.c           0x00000000   Number         0  fputc.o ABSOLUTE
    ../clib/microlib/stdio/fputc.c           0x00000000   Number         0  fputc_h.o ABSOLUTE
    ../clib/microlib/stdio/semi.s            0x00000000   Number         0  semi.o ABSOLUTE
    ../clib/microlib/stdio/streams.c         0x00000000   Number         0  stdout.o ABSOLUTE
    ../clib/microlib/string/memcpy.c         0x00000000   Number         0  memcpya.o ABSOLUTE
    ../clib/microlib/string/memcpy.c         0x00000000   Number         0  memcpyb.o ABSOLUTE
    ../clib/microlib/string/memset.c         0x00000000   Number         0  memseta.o ABSOLUTE
    ../clib/microlib/string/strcmp.c         0x00000000   Number         0  strcmp.o ABSOLUTE
    ../clib/microlib/string/strcpy.c         0x00000000   Number         0  strcpy.o ABSOLUTE
    ../clib/microlib/string/strlen.c         0x00000000   Number         0  strlen.o ABSOLUTE
    ../clib/microlib/string/strncpy.c        0x00000000   Number         0  strncpy.o ABSOLUTE
    ../clib/microlib/string/strtok.c         0x00000000   Number         0  strtok.o ABSOLUTE
    ../clib/microlib/string/strtok.c         0x00000000   Number         0  strtok_r.o ABSOLUTE
    ../clib/microlib/stubs.s                 0x00000000   Number         0  iusefp.o ABSOLUTE
    ../clib/microlib/stubs.s                 0x00000000   Number         0  iusesemip.o ABSOLUTE
    ../clib/scanf.c                          0x00000000   Number         0  atoi.o ABSOLUTE
    ../clib/scanf.c                          0x00000000   Number         0  strtol.o ABSOLUTE
    ../clib/scanf.c                          0x00000000   Number         0  _strtoul.o ABSOLUTE
    ../clib/scanf.c                          0x00000000   Number         0  _chval.o ABSOLUTE
    ../fplib/microlib/fpadd.c                0x00000000   Number         0  dadd.o ABSOLUTE
    ../fplib/microlib/fpcmp.c                0x00000000   Number         0  fcmple.o ABSOLUTE
    ../fplib/microlib/fpcmp.c                0x00000000   Number         0  fcmpgt.o ABSOLUTE
    ../fplib/microlib/fpdiv.c                0x00000000   Number         0  ddiv.o ABSOLUTE
    ../fplib/microlib/fpepilogue.c           0x00000000   Number         0  fepilogue.o ABSOLUTE
    ../fplib/microlib/fpepilogue.c           0x00000000   Number         0  depilogue.o ABSOLUTE
    ../fplib/microlib/fpfix.c                0x00000000   Number         0  dfixul.o ABSOLUTE
    ../fplib/microlib/fpflt.c                0x00000000   Number         0  fflti.o ABSOLUTE
    ../fplib/microlib/fpmul.c                0x00000000   Number         0  dmul.o ABSOLUTE
    cdrcmple.s                               0x00000000   Number         0  cdrcmple.o ABSOLUTE
    comport.c                                0x00000000   Number         0  comport.o ABSOLUTE
    dc.s                                     0x00000000   Number         0  dc.o ABSOLUTE
    flash.c                                  0x00000000   Number         0  flash.o ABSOLUTE
    gps.c                                    0x00000000   Number         0  gps.o ABSOLUTE
    handlers.s                               0x00000000   Number         0  handlers.o ABSOLUTE
    init.s                                   0x00000000   Number         0  init.o ABSOLUTE
    main.c                                   0x00000000   Number         0  main.o ABSOLUTE
    scheduler.c                              0x00000000   Number         0  scheduler.o ABSOLUTE
    startup_stm32l071xx.s                    0x00000000   Number         0  startup_stm32l071xx.o ABSOLUTE
    stm32l0xx_it.c                           0x00000000   Number         0  stm32l0xx_it.o ABSOLUTE
    stm32l0xx_ll_dma.c                       0x00000000   Number         0  stm32l0xx_ll_dma.o ABSOLUTE
    stm32l0xx_ll_exti.c                      0x00000000   Number         0  stm32l0xx_ll_exti.o ABSOLUTE
    stm32l0xx_ll_gpio.c                      0x00000000   Number         0  stm32l0xx_ll_gpio.o ABSOLUTE
    stm32l0xx_ll_pwr.c                       0x00000000   Number         0  stm32l0xx_ll_pwr.o ABSOLUTE
    stm32l0xx_ll_rcc.c                       0x00000000   Number         0  stm32l0xx_ll_rcc.o ABSOLUTE
    stm32l0xx_ll_rtc.c                       0x00000000   Number         0  stm32l0xx_ll_rtc.o ABSOLUTE
    stm32l0xx_ll_spi.c                       0x00000000   Number         0  stm32l0xx_ll_spi.o ABSOLUTE
    stm32l0xx_ll_tim.c                       0x00000000   Number         0  stm32l0xx_ll_tim.o ABSOLUTE
    stm32l0xx_ll_usart.c                     0x00000000   Number         0  stm32l0xx_ll_usart.o ABSOLUTE
    stm32l0xx_ll_utils.c                     0x00000000   Number         0  stm32l0xx_ll_utils.o ABSOLUTE
    system_stm32l0xx.c                       0x00000000   Number         0  system_stm32l0xx_1.o ABSOLUTE
    timers.c                                 0x00000000   Number         0  timers.o ABSOLUTE
    xbee.c                                   0x00000000   Number         0  xbee.o ABSOLUTE
    RESET                                    0x08000000   Section      192  startup_stm32l071xx.o(RESET)
    .ARM.Collect$$$$00000000                 0x080000c0   Section        0  entry.o(.ARM.Collect$$$$00000000)
    .ARM.Collect$$$$00000001                 0x080000c0   Section        4  entry2.o(.ARM.Collect$$$$00000001)
    .ARM.Collect$$$$00000004                 0x080000c4   Section        4  entry5.o(.ARM.Collect$$$$00000004)
    .ARM.Collect$$$$00000008                 0x080000c8   Section        0  entry7b.o(.ARM.Collect$$$$00000008)
    .ARM.Collect$$$$0000000A                 0x080000c8   Section        0  entry8b.o(.ARM.Collect$$$$0000000A)
    .ARM.Collect$$$$0000000B                 0x080000c8   Section        8  entry9a.o(.ARM.Collect$$$$0000000B)
    __lit__00000000                          0x080000d0   Data           4  entry2.o(.ARM.Collect$$$$00002712)
    .ARM.Collect$$$$0000000D                 0x080000d0   Section        0  entry10a.o(.ARM.Collect$$$$0000000D)
    .ARM.Collect$$$$0000000F                 0x080000d0   Section        0  entry11a.o(.ARM.Collect$$$$0000000F)
    .ARM.Collect$$$$00002712                 0x080000d0   Section        4  entry2.o(.ARM.Collect$$$$00002712)
    .text                                    0x080000d4   Section       28  startup_stm32l071xx.o(.text)
    .text                                    0x080000f0   Section        0  uidiv.o(.text)
    .text                                    0x0800011c   Section        0  memseta.o(.text)
    .text                                    0x08000140   Section        0  strcpy.o(.text)
    .text                                    0x08000154   Section       36  init.o(.text)
    [Anonymous Symbol]                       0x08000178   Section        0  flash.o(.text.EEPROM_WriteByte)
    [Anonymous Symbol]                       0x0800019a   Section        0  flash.o(.text.EEPROM_WriteData)
    [Anonymous Symbol]                       0x080001fa   Section        0  main.o(.text.Error_Handler)
    [Anonymous Symbol]                       0x080001fc   Section        0  flash.o(.text.FLASH_Lock)
    [Anonymous Symbol]                       0x0800021c   Section        0  flash.o(.text.FLASH_ReadData)
    [Anonymous Symbol]                       0x0800026c   Section        0  flash.o(.text.FLASH_Unlock)
    __arm_cp.0_1                             0x08000298   Number         4  flash.o(.text.FLASH_Unlock)
    __arm_cp.0_2                             0x0800029c   Number         4  flash.o(.text.FLASH_Unlock)
    __arm_cp.0_3                             0x080002a0   Number         4  flash.o(.text.FLASH_Unlock)
    [Anonymous Symbol]                       0x080002a4   Section        0  flash.o(.text.FLASH_erasePage)
    __arm_cp.7_1                             0x08000304   Number         4  flash.o(.text.FLASH_erasePage)
    [Anonymous Symbol]                       0x08000308   Section        0  flash.o(.text.FLASH_initDataStorage)
    [Anonymous Symbol]                       0x08000354   Section        0  flash.o(.text.FLASH_readFixes)
    __arm_cp.10_1                            0x080003c8   Number         4  flash.o(.text.FLASH_readFixes)
    __arm_cp.10_3                            0x080003cc   Number         4  flash.o(.text.FLASH_readFixes)
    [Anonymous Symbol]                       0x080003d0   Section        0  flash.o(.text.FLASH_saveFix)
    __arm_cp.9_0                             0x08000564   Number         4  flash.o(.text.FLASH_saveFix)
    __arm_cp.9_1                             0x08000568   Number         4  flash.o(.text.FLASH_saveFix)
    [Anonymous Symbol]                       0x0800056c   Section        0  flash.o(.text.FLASH_unlockPrgm)
    __arm_cp.5_0                             0x080005a4   Number         4  flash.o(.text.FLASH_unlockPrgm)
    __arm_cp.5_1                             0x080005a8   Number         4  flash.o(.text.FLASH_unlockPrgm)
    __arm_cp.5_2                             0x080005ac   Number         4  flash.o(.text.FLASH_unlockPrgm)
    __arm_cp.5_3                             0x080005b0   Number         4  flash.o(.text.FLASH_unlockPrgm)
    [Anonymous Symbol]                       0x080005b4   Section        0  flash.o(.text.FLASH_writeWord)
    __arm_cp.6_0                             0x08000614   Number         4  flash.o(.text.FLASH_writeWord)
    [Anonymous Symbol]                       0x08000618   Section        0  gps.o(.text.GPS_GPSCSHigh)
    __arm_cp.3_0                             0x08000628   Number         4  gps.o(.text.GPS_GPSCSHigh)
    [Anonymous Symbol]                       0x0800062c   Section        0  gps.o(.text.GPS_GPSDisable)
    __arm_cp.1_0                             0x08000638   Number         4  gps.o(.text.GPS_GPSDisable)
    [Anonymous Symbol]                       0x0800063c   Section        0  stm32l0xx_it.o(.text.HardFault_Handler)
    LL_APB1_GRP1_EnableClock                 0x08000641   Thumb Code    40  main.o(.text.LL_APB1_GRP1_EnableClock)
    [Anonymous Symbol]                       0x08000640   Section        0  main.o(.text.LL_APB1_GRP1_EnableClock)
    __arm_cp.2_0                             0x08000664   Number         4  main.o(.text.LL_APB1_GRP1_EnableClock)
    LL_APB2_GRP1_EnableClock                 0x08000669   Thumb Code    40  main.o(.text.LL_APB2_GRP1_EnableClock)
    [Anonymous Symbol]                       0x08000668   Section        0  main.o(.text.LL_APB2_GRP1_EnableClock)
    __arm_cp.1_0                             0x0800068c   Number         4  main.o(.text.LL_APB2_GRP1_EnableClock)
    LL_FLASH_GetLatency                      0x08000691   Thumb Code    16  main.o(.text.LL_FLASH_GetLatency)
    [Anonymous Symbol]                       0x08000690   Section        0  main.o(.text.LL_FLASH_GetLatency)
    LL_FLASH_SetLatency                      0x0800069d   Thumb Code    32  main.o(.text.LL_FLASH_SetLatency)
    [Anonymous Symbol]                       0x0800069c   Section        0  main.o(.text.LL_FLASH_SetLatency)
    __arm_cp.12_0                            0x080006b8   Number         4  main.o(.text.LL_FLASH_SetLatency)
    [Anonymous Symbol]                       0x080006bc   Section        0  stm32l0xx_ll_gpio.o(.text.LL_GPIO_Init)
    LL_GPIO_ResetOutputPin                   0x0800079b   Thumb Code    24  main.o(.text.LL_GPIO_ResetOutputPin)
    [Anonymous Symbol]                       0x0800079a   Section        0  main.o(.text.LL_GPIO_ResetOutputPin)
    LL_GPIO_SetAFPin_0_7                     0x080007b3   Thumb Code    58  stm32l0xx_ll_gpio.o(.text.LL_GPIO_SetAFPin_0_7)
    [Anonymous Symbol]                       0x080007b2   Section        0  stm32l0xx_ll_gpio.o(.text.LL_GPIO_SetAFPin_0_7)
    LL_GPIO_SetAFPin_8_15                    0x080007ed   Thumb Code    60  stm32l0xx_ll_gpio.o(.text.LL_GPIO_SetAFPin_8_15)
    [Anonymous Symbol]                       0x080007ec   Section        0  stm32l0xx_ll_gpio.o(.text.LL_GPIO_SetAFPin_8_15)
    LL_GPIO_SetPinMode                       0x08000829   Thumb Code    50  stm32l0xx_ll_gpio.o(.text.LL_GPIO_SetPinMode)
    [Anonymous Symbol]                       0x08000828   Section        0  stm32l0xx_ll_gpio.o(.text.LL_GPIO_SetPinMode)
    LL_GPIO_SetPinOutputType                 0x0800085b   Thumb Code    44  stm32l0xx_ll_gpio.o(.text.LL_GPIO_SetPinOutputType)
    [Anonymous Symbol]                       0x0800085a   Section        0  stm32l0xx_ll_gpio.o(.text.LL_GPIO_SetPinOutputType)
    LL_GPIO_SetPinPull                       0x08000887   Thumb Code    50  stm32l0xx_ll_gpio.o(.text.LL_GPIO_SetPinPull)
    [Anonymous Symbol]                       0x08000886   Section        0  stm32l0xx_ll_gpio.o(.text.LL_GPIO_SetPinPull)
    LL_GPIO_SetPinSpeed                      0x080008b9   Thumb Code    50  stm32l0xx_ll_gpio.o(.text.LL_GPIO_SetPinSpeed)
    [Anonymous Symbol]                       0x080008b8   Section        0  stm32l0xx_ll_gpio.o(.text.LL_GPIO_SetPinSpeed)
    LL_IOP_GRP1_EnableClock                  0x080008ed   Thumb Code    40  main.o(.text.LL_IOP_GRP1_EnableClock)
    [Anonymous Symbol]                       0x080008ec   Section        0  main.o(.text.LL_IOP_GRP1_EnableClock)
    __arm_cp.37_0                            0x08000910   Number         4  main.o(.text.LL_IOP_GRP1_EnableClock)
    [Anonymous Symbol]                       0x08000914   Section        0  stm32l0xx_ll_utils.o(.text.LL_Init1msTick)
    LL_InitTick                              0x08000931   Thumb Code    60  stm32l0xx_ll_utils.o(.text.LL_InitTick)
    [Anonymous Symbol]                       0x08000930   Section        0  stm32l0xx_ll_utils.o(.text.LL_InitTick)
    __arm_cp.1_0                             0x08000960   Number         4  stm32l0xx_ll_utils.o(.text.LL_InitTick)
    __arm_cp.1_1                             0x08000964   Number         4  stm32l0xx_ll_utils.o(.text.LL_InitTick)
    __arm_cp.1_2                             0x08000968   Number         4  stm32l0xx_ll_utils.o(.text.LL_InitTick)
    LL_PWR_EnableBkUpAccess                  0x0800096d   Thumb Code    20  main.o(.text.LL_PWR_EnableBkUpAccess)
    [Anonymous Symbol]                       0x0800096c   Section        0  main.o(.text.LL_PWR_EnableBkUpAccess)
    LL_PWR_SetRegulVoltageScaling            0x0800097d   Thumb Code    32  main.o(.text.LL_PWR_SetRegulVoltageScaling)
    [Anonymous Symbol]                       0x0800097c   Section        0  main.o(.text.LL_PWR_SetRegulVoltageScaling)
    __arm_cp.15_0                            0x08000998   Number         4  main.o(.text.LL_PWR_SetRegulVoltageScaling)
    LL_RCC_EnableRTC                         0x0800099d   Thumb Code    20  main.o(.text.LL_RCC_EnableRTC)
    [Anonymous Symbol]                       0x0800099c   Section        0  main.o(.text.LL_RCC_EnableRTC)
    LL_RCC_ForceBackupDomainReset            0x080009ad   Thumb Code    20  main.o(.text.LL_RCC_ForceBackupDomainReset)
    [Anonymous Symbol]                       0x080009ac   Section        0  main.o(.text.LL_RCC_ForceBackupDomainReset)
    LL_RCC_GetAHBPrescaler                   0x080009bd   Thumb Code    16  stm32l0xx_ll_rcc.o(.text.LL_RCC_GetAHBPrescaler)
    [Anonymous Symbol]                       0x080009bc   Section        0  stm32l0xx_ll_rcc.o(.text.LL_RCC_GetAHBPrescaler)
    LL_RCC_GetAPB1Prescaler                  0x080009c9   Thumb Code    16  stm32l0xx_ll_rcc.o(.text.LL_RCC_GetAPB1Prescaler)
    [Anonymous Symbol]                       0x080009c8   Section        0  stm32l0xx_ll_rcc.o(.text.LL_RCC_GetAPB1Prescaler)
    LL_RCC_GetAPB2Prescaler                  0x080009d5   Thumb Code    16  stm32l0xx_ll_rcc.o(.text.LL_RCC_GetAPB2Prescaler)
    [Anonymous Symbol]                       0x080009d4   Section        0  stm32l0xx_ll_rcc.o(.text.LL_RCC_GetAPB2Prescaler)
    LL_RCC_GetSysClkSource                   0x080009e1   Thumb Code    16  main.o(.text.LL_RCC_GetSysClkSource)
    [Anonymous Symbol]                       0x080009e0   Section        0  main.o(.text.LL_RCC_GetSysClkSource)
    LL_RCC_GetSysClkSource                   0x080009ed   Thumb Code    16  stm32l0xx_ll_rcc.o(.text.LL_RCC_GetSysClkSource)
    [Anonymous Symbol]                       0x080009ec   Section        0  stm32l0xx_ll_rcc.o(.text.LL_RCC_GetSysClkSource)
    [Anonymous Symbol]                       0x080009f8   Section        0  stm32l0xx_ll_rcc.o(.text.LL_RCC_GetSystemClocksFreq)
    [Anonymous Symbol]                       0x08000a34   Section        0  stm32l0xx_ll_rcc.o(.text.LL_RCC_GetUSARTClockFreq)
    __arm_cp.14_0                            0x08000b48   Number         4  stm32l0xx_ll_rcc.o(.text.LL_RCC_GetUSARTClockFreq)
    __arm_cp.14_1                            0x08000b4c   Number         4  stm32l0xx_ll_rcc.o(.text.LL_RCC_GetUSARTClockFreq)
    __arm_cp.14_2                            0x08000b50   Number         4  stm32l0xx_ll_rcc.o(.text.LL_RCC_GetUSARTClockFreq)
    __arm_cp.14_3                            0x08000b54   Number         4  stm32l0xx_ll_rcc.o(.text.LL_RCC_GetUSARTClockFreq)
    LL_RCC_GetUSARTClockSource               0x08000b59   Thumb Code    28  stm32l0xx_ll_rcc.o(.text.LL_RCC_GetUSARTClockSource)
    [Anonymous Symbol]                       0x08000b58   Section        0  stm32l0xx_ll_rcc.o(.text.LL_RCC_GetUSARTClockSource)
    LL_RCC_HSI_IsReady                       0x08000b71   Thumb Code    16  stm32l0xx_ll_rcc.o(.text.LL_RCC_HSI_IsReady)
    [Anonymous Symbol]                       0x08000b70   Section        0  stm32l0xx_ll_rcc.o(.text.LL_RCC_HSI_IsReady)
    LL_RCC_IsActiveFlag_HSIDIV               0x08000b7d   Thumb Code    16  stm32l0xx_ll_rcc.o(.text.LL_RCC_IsActiveFlag_HSIDIV)
    [Anonymous Symbol]                       0x08000b7c   Section        0  stm32l0xx_ll_rcc.o(.text.LL_RCC_IsActiveFlag_HSIDIV)
    LL_RCC_LSE_Enable                        0x08000b89   Thumb Code    20  main.o(.text.LL_RCC_LSE_Enable)
    [Anonymous Symbol]                       0x08000b88   Section        0  main.o(.text.LL_RCC_LSE_Enable)
    LL_RCC_LSE_IsReady                       0x08000b99   Thumb Code    20  main.o(.text.LL_RCC_LSE_IsReady)
    [Anonymous Symbol]                       0x08000b98   Section        0  main.o(.text.LL_RCC_LSE_IsReady)
    LL_RCC_LSE_IsReady                       0x08000ba9   Thumb Code    20  stm32l0xx_ll_rcc.o(.text.LL_RCC_LSE_IsReady)
    [Anonymous Symbol]                       0x08000ba8   Section        0  stm32l0xx_ll_rcc.o(.text.LL_RCC_LSE_IsReady)
    LL_RCC_LSE_SetDriveCapability            0x08000bb9   Thumb Code    32  main.o(.text.LL_RCC_LSE_SetDriveCapability)
    [Anonymous Symbol]                       0x08000bb8   Section        0  main.o(.text.LL_RCC_LSE_SetDriveCapability)
    LL_RCC_MSI_Enable                        0x08000bd5   Thumb Code    20  main.o(.text.LL_RCC_MSI_Enable)
    [Anonymous Symbol]                       0x08000bd4   Section        0  main.o(.text.LL_RCC_MSI_Enable)
    LL_RCC_MSI_GetRange                      0x08000be5   Thumb Code    16  stm32l0xx_ll_rcc.o(.text.LL_RCC_MSI_GetRange)
    [Anonymous Symbol]                       0x08000be4   Section        0  stm32l0xx_ll_rcc.o(.text.LL_RCC_MSI_GetRange)
    LL_RCC_MSI_IsReady                       0x08000bf1   Thumb Code    20  main.o(.text.LL_RCC_MSI_IsReady)
    [Anonymous Symbol]                       0x08000bf0   Section        0  main.o(.text.LL_RCC_MSI_IsReady)
    __arm_cp.17_0                            0x08000c00   Number         4  main.o(.text.LL_RCC_MSI_IsReady)
    LL_RCC_MSI_SetCalibTrimming              0x08000c05   Thumb Code    36  main.o(.text.LL_RCC_MSI_SetCalibTrimming)
    [Anonymous Symbol]                       0x08000c04   Section        0  main.o(.text.LL_RCC_MSI_SetCalibTrimming)
    LL_RCC_MSI_SetRange                      0x08000c25   Thumb Code    32  main.o(.text.LL_RCC_MSI_SetRange)
    [Anonymous Symbol]                       0x08000c24   Section        0  main.o(.text.LL_RCC_MSI_SetRange)
    __arm_cp.18_0                            0x08000c40   Number         4  main.o(.text.LL_RCC_MSI_SetRange)
    LL_RCC_PLL_GetDivider                    0x08000c45   Thumb Code    16  stm32l0xx_ll_rcc.o(.text.LL_RCC_PLL_GetDivider)
    [Anonymous Symbol]                       0x08000c44   Section        0  stm32l0xx_ll_rcc.o(.text.LL_RCC_PLL_GetDivider)
    LL_RCC_PLL_GetMainSource                 0x08000c51   Thumb Code    16  stm32l0xx_ll_rcc.o(.text.LL_RCC_PLL_GetMainSource)
    [Anonymous Symbol]                       0x08000c50   Section        0  stm32l0xx_ll_rcc.o(.text.LL_RCC_PLL_GetMainSource)
    LL_RCC_PLL_GetMultiplicator              0x08000c5d   Thumb Code    16  stm32l0xx_ll_rcc.o(.text.LL_RCC_PLL_GetMultiplicator)
    [Anonymous Symbol]                       0x08000c5c   Section        0  stm32l0xx_ll_rcc.o(.text.LL_RCC_PLL_GetMultiplicator)
    LL_RCC_ReleaseBackupDomainReset          0x08000c69   Thumb Code    20  main.o(.text.LL_RCC_ReleaseBackupDomainReset)
    [Anonymous Symbol]                       0x08000c68   Section        0  main.o(.text.LL_RCC_ReleaseBackupDomainReset)
    LL_RCC_SetAHBPrescaler                   0x08000c79   Thumb Code    32  main.o(.text.LL_RCC_SetAHBPrescaler)
    [Anonymous Symbol]                       0x08000c78   Section        0  main.o(.text.LL_RCC_SetAHBPrescaler)
    LL_RCC_SetAPB1Prescaler                  0x08000c95   Thumb Code    32  main.o(.text.LL_RCC_SetAPB1Prescaler)
    [Anonymous Symbol]                       0x08000c94   Section        0  main.o(.text.LL_RCC_SetAPB1Prescaler)
    LL_RCC_SetAPB2Prescaler                  0x08000cb1   Thumb Code    32  main.o(.text.LL_RCC_SetAPB2Prescaler)
    [Anonymous Symbol]                       0x08000cb0   Section        0  main.o(.text.LL_RCC_SetAPB2Prescaler)
    LL_RCC_SetRTCClockSource                 0x08000ccd   Thumb Code    32  main.o(.text.LL_RCC_SetRTCClockSource)
    [Anonymous Symbol]                       0x08000ccc   Section        0  main.o(.text.LL_RCC_SetRTCClockSource)
    __arm_cp.26_0                            0x08000ce8   Number         4  main.o(.text.LL_RCC_SetRTCClockSource)
    LL_RCC_SetSysClkSource                   0x08000ced   Thumb Code    32  main.o(.text.LL_RCC_SetSysClkSource)
    [Anonymous Symbol]                       0x08000cec   Section        0  main.o(.text.LL_RCC_SetSysClkSource)
    __arm_cp.31_0                            0x08000d08   Number         4  main.o(.text.LL_RCC_SetSysClkSource)
    LL_RCC_SetUSARTClockSource               0x08000d0d   Thumb Code    36  main.o(.text.LL_RCC_SetUSARTClockSource)
    [Anonymous Symbol]                       0x08000d0c   Section        0  main.o(.text.LL_RCC_SetUSARTClockSource)
    __arm_cp.34_0                            0x08000d2c   Number         4  main.o(.text.LL_RCC_SetUSARTClockSource)
    LL_RTC_ALMA_Disable                      0x08000d31   Thumb Code    24  timers.o(.text.LL_RTC_ALMA_Disable)
    [Anonymous Symbol]                       0x08000d30   Section        0  timers.o(.text.LL_RTC_ALMA_Disable)
    LL_RTC_ALMA_Enable                       0x08000d49   Thumb Code    24  timers.o(.text.LL_RTC_ALMA_Enable)
    [Anonymous Symbol]                       0x08000d48   Section        0  timers.o(.text.LL_RTC_ALMA_Enable)
    LL_RTC_ALMA_SetMask                      0x08000d61   Thumb Code    40  timers.o(.text.LL_RTC_ALMA_SetMask)
    [Anonymous Symbol]                       0x08000d60   Section        0  timers.o(.text.LL_RTC_ALMA_SetMask)
    __arm_cp.7_0                             0x08000d84   Number         4  timers.o(.text.LL_RTC_ALMA_SetMask)
    LL_RTC_ALMA_SetSecond                    0x08000d89   Thumb Code    36  timers.o(.text.LL_RTC_ALMA_SetSecond)
    [Anonymous Symbol]                       0x08000d88   Section        0  timers.o(.text.LL_RTC_ALMA_SetSecond)
    LL_RTC_ClearFlag_RS                      0x08000dad   Thumb Code    30  stm32l0xx_ll_rtc.o(.text.LL_RTC_ClearFlag_RS)
    [Anonymous Symbol]                       0x08000dac   Section        0  stm32l0xx_ll_rtc.o(.text.LL_RTC_ClearFlag_RS)
    LL_RTC_DATE_Config                       0x08000dcd   Thumb Code    88  stm32l0xx_ll_rtc.o(.text.LL_RTC_DATE_Config)
    [Anonymous Symbol]                       0x08000dcc   Section        0  stm32l0xx_ll_rtc.o(.text.LL_RTC_DATE_Config)
    __arm_cp.17_0                            0x08000e20   Number         4  stm32l0xx_ll_rtc.o(.text.LL_RTC_DATE_Config)
    [Anonymous Symbol]                       0x08000e24   Section        0  stm32l0xx_ll_rtc.o(.text.LL_RTC_DATE_Init)
    LL_RTC_DisableInitMode                   0x08000f31   Thumb Code    20  stm32l0xx_ll_rtc.o(.text.LL_RTC_DisableInitMode)
    [Anonymous Symbol]                       0x08000f30   Section        0  stm32l0xx_ll_rtc.o(.text.LL_RTC_DisableInitMode)
    LL_RTC_DisableWriteProtection            0x08000f45   Thumb Code    24  timers.o(.text.LL_RTC_DisableWriteProtection)
    [Anonymous Symbol]                       0x08000f44   Section        0  timers.o(.text.LL_RTC_DisableWriteProtection)
    LL_RTC_DisableWriteProtection            0x08000f5d   Thumb Code    24  stm32l0xx_ll_rtc.o(.text.LL_RTC_DisableWriteProtection)
    [Anonymous Symbol]                       0x08000f5c   Section        0  stm32l0xx_ll_rtc.o(.text.LL_RTC_DisableWriteProtection)
    LL_RTC_EnableInitMode                    0x08000f75   Thumb Code    20  stm32l0xx_ll_rtc.o(.text.LL_RTC_EnableInitMode)
    [Anonymous Symbol]                       0x08000f74   Section        0  stm32l0xx_ll_rtc.o(.text.LL_RTC_EnableInitMode)
    LL_RTC_EnableWriteProtection             0x08000f89   Thumb Code    18  timers.o(.text.LL_RTC_EnableWriteProtection)
    [Anonymous Symbol]                       0x08000f88   Section        0  timers.o(.text.LL_RTC_EnableWriteProtection)
    LL_RTC_EnableWriteProtection             0x08000f9b   Thumb Code    18  stm32l0xx_ll_rtc.o(.text.LL_RTC_EnableWriteProtection)
    [Anonymous Symbol]                       0x08000f9a   Section        0  stm32l0xx_ll_rtc.o(.text.LL_RTC_EnableWriteProtection)
    [Anonymous Symbol]                       0x08000fac   Section        0  stm32l0xx_ll_rtc.o(.text.LL_RTC_EnterInitMode)
    LL_RTC_GetHourFormat                     0x08001037   Thumb Code    20  stm32l0xx_ll_rtc.o(.text.LL_RTC_GetHourFormat)
    [Anonymous Symbol]                       0x08001036   Section        0  stm32l0xx_ll_rtc.o(.text.LL_RTC_GetHourFormat)
    [Anonymous Symbol]                       0x0800104a   Section        0  stm32l0xx_ll_rtc.o(.text.LL_RTC_Init)
    LL_RTC_IsActiveFlag_INIT                 0x080010ad   Thumb Code    22  stm32l0xx_ll_rtc.o(.text.LL_RTC_IsActiveFlag_INIT)
    [Anonymous Symbol]                       0x080010ac   Section        0  stm32l0xx_ll_rtc.o(.text.LL_RTC_IsActiveFlag_INIT)
    LL_RTC_IsActiveFlag_RS                   0x080010c3   Thumb Code    22  stm32l0xx_ll_rtc.o(.text.LL_RTC_IsActiveFlag_RS)
    [Anonymous Symbol]                       0x080010c2   Section        0  stm32l0xx_ll_rtc.o(.text.LL_RTC_IsActiveFlag_RS)
    LL_RTC_IsShadowRegBypassEnabled          0x080010d9   Thumb Code    22  stm32l0xx_ll_rtc.o(.text.LL_RTC_IsShadowRegBypassEnabled)
    [Anonymous Symbol]                       0x080010d8   Section        0  stm32l0xx_ll_rtc.o(.text.LL_RTC_IsShadowRegBypassEnabled)
    LL_RTC_SetAsynchPrescaler                0x080010ef   Thumb Code    38  stm32l0xx_ll_rtc.o(.text.LL_RTC_SetAsynchPrescaler)
    [Anonymous Symbol]                       0x080010ee   Section        0  stm32l0xx_ll_rtc.o(.text.LL_RTC_SetAsynchPrescaler)
    LL_RTC_SetHourFormat                     0x08001115   Thumb Code    34  stm32l0xx_ll_rtc.o(.text.LL_RTC_SetHourFormat)
    [Anonymous Symbol]                       0x08001114   Section        0  stm32l0xx_ll_rtc.o(.text.LL_RTC_SetHourFormat)
    LL_RTC_SetSynchPrescaler                 0x08001139   Thumb Code    40  stm32l0xx_ll_rtc.o(.text.LL_RTC_SetSynchPrescaler)
    [Anonymous Symbol]                       0x08001138   Section        0  stm32l0xx_ll_rtc.o(.text.LL_RTC_SetSynchPrescaler)
    __arm_cp.7_0                             0x0800115c   Number         4  stm32l0xx_ll_rtc.o(.text.LL_RTC_SetSynchPrescaler)
    LL_RTC_TIME_Config                       0x08001161   Thumb Code    84  stm32l0xx_ll_rtc.o(.text.LL_RTC_TIME_Config)
    [Anonymous Symbol]                       0x08001160   Section        0  stm32l0xx_ll_rtc.o(.text.LL_RTC_TIME_Config)
    __arm_cp.13_0                            0x080011b0   Number         4  stm32l0xx_ll_rtc.o(.text.LL_RTC_TIME_Config)
    [Anonymous Symbol]                       0x080011b4   Section        0  stm32l0xx_ll_rtc.o(.text.LL_RTC_TIME_Init)
    __arm_cp.11_0                            0x080012cc   Number         4  stm32l0xx_ll_rtc.o(.text.LL_RTC_TIME_Init)
    [Anonymous Symbol]                       0x080012d0   Section        0  stm32l0xx_ll_rtc.o(.text.LL_RTC_WaitForSynchro)
    [Anonymous Symbol]                       0x080013c0   Section        0  stm32l0xx_ll_spi.o(.text.LL_SPI_Init)
    __arm_cp.5_0                             0x0800145c   Number         4  stm32l0xx_ll_spi.o(.text.LL_SPI_Init)
    LL_SPI_IsEnabled                         0x08001461   Thumb Code    22  stm32l0xx_ll_spi.o(.text.LL_SPI_IsEnabled)
    [Anonymous Symbol]                       0x08001460   Section        0  stm32l0xx_ll_spi.o(.text.LL_SPI_IsEnabled)
    LL_SPI_SetCRCPolynomial                  0x08001477   Thumb Code    26  stm32l0xx_ll_spi.o(.text.LL_SPI_SetCRCPolynomial)
    [Anonymous Symbol]                       0x08001476   Section        0  stm32l0xx_ll_spi.o(.text.LL_SPI_SetCRCPolynomial)
    LL_SPI_SetStandard                       0x08001491   Thumb Code    34  main.o(.text.LL_SPI_SetStandard)
    [Anonymous Symbol]                       0x08001490   Section        0  main.o(.text.LL_SPI_SetStandard)
    LL_SYSTICK_IsActiveCounterFlag           0x080014b5   Thumb Code    20  stm32l0xx_ll_rtc.o(.text.LL_SYSTICK_IsActiveCounterFlag)
    [Anonymous Symbol]                       0x080014b4   Section        0  stm32l0xx_ll_rtc.o(.text.LL_SYSTICK_IsActiveCounterFlag)
    LL_SYSTICK_SetClkSource                  0x080014c5   Thumb Code    48  main.o(.text.LL_SYSTICK_SetClkSource)
    [Anonymous Symbol]                       0x080014c4   Section        0  main.o(.text.LL_SYSTICK_SetClkSource)
    __arm_cp.33_0                            0x080014f0   Number         4  main.o(.text.LL_SYSTICK_SetClkSource)
    [Anonymous Symbol]                       0x080014f4   Section        0  stm32l0xx_ll_utils.o(.text.LL_SetSystemCoreClock)
    __arm_cp.3_0                             0x08001508   Number         4  stm32l0xx_ll_utils.o(.text.LL_SetSystemCoreClock)
    LL_TIM_DisableARRPreload                 0x0800150d   Thumb Code    22  main.o(.text.LL_TIM_DisableARRPreload)
    [Anonymous Symbol]                       0x0800150c   Section        0  main.o(.text.LL_TIM_DisableARRPreload)
    LL_TIM_DisableMasterSlaveMode            0x08001523   Thumb Code    22  main.o(.text.LL_TIM_DisableMasterSlaveMode)
    [Anonymous Symbol]                       0x08001522   Section        0  main.o(.text.LL_TIM_DisableMasterSlaveMode)
    LL_TIM_GenerateEvent_UPDATE              0x08001539   Thumb Code    22  stm32l0xx_ll_tim.o(.text.LL_TIM_GenerateEvent_UPDATE)
    [Anonymous Symbol]                       0x08001538   Section        0  stm32l0xx_ll_tim.o(.text.LL_TIM_GenerateEvent_UPDATE)
    [Anonymous Symbol]                       0x08001550   Section        0  stm32l0xx_ll_tim.o(.text.LL_TIM_Init)
    __arm_cp.6_0                             0x08001604   Number         4  stm32l0xx_ll_tim.o(.text.LL_TIM_Init)
    __arm_cp.6_1                             0x08001608   Number         4  stm32l0xx_ll_tim.o(.text.LL_TIM_Init)
    __arm_cp.6_2                             0x0800160c   Number         4  stm32l0xx_ll_tim.o(.text.LL_TIM_Init)
    LL_TIM_SetAutoReload                     0x08001611   Thumb Code    24  stm32l0xx_ll_tim.o(.text.LL_TIM_SetAutoReload)
    [Anonymous Symbol]                       0x08001610   Section        0  stm32l0xx_ll_tim.o(.text.LL_TIM_SetAutoReload)
    LL_TIM_SetClockSource                    0x08001629   Thumb Code    40  main.o(.text.LL_TIM_SetClockSource)
    [Anonymous Symbol]                       0x08001628   Section        0  main.o(.text.LL_TIM_SetClockSource)
    __arm_cp.40_0                            0x0800164c   Number         4  main.o(.text.LL_TIM_SetClockSource)
    LL_TIM_SetPrescaler                      0x08001651   Thumb Code    24  stm32l0xx_ll_tim.o(.text.LL_TIM_SetPrescaler)
    [Anonymous Symbol]                       0x08001650   Section        0  stm32l0xx_ll_tim.o(.text.LL_TIM_SetPrescaler)
    LL_TIM_SetTriggerOutput                  0x08001669   Thumb Code    34  main.o(.text.LL_TIM_SetTriggerOutput)
    [Anonymous Symbol]                       0x08001668   Section        0  main.o(.text.LL_TIM_SetTriggerOutput)
    LL_USART_ConfigAsyncMode                 0x0800168b   Thumb Code    34  main.o(.text.LL_USART_ConfigAsyncMode)
    [Anonymous Symbol]                       0x0800168a   Section        0  main.o(.text.LL_USART_ConfigAsyncMode)
    LL_USART_Disable                         0x080016ad   Thumb Code    22  main.o(.text.LL_USART_Disable)
    [Anonymous Symbol]                       0x080016ac   Section        0  main.o(.text.LL_USART_Disable)
    LL_USART_Enable                          0x080016c3   Thumb Code    22  main.o(.text.LL_USART_Enable)
    [Anonymous Symbol]                       0x080016c2   Section        0  main.o(.text.LL_USART_Enable)
    [Anonymous Symbol]                       0x080016d8   Section        0  stm32l0xx_ll_usart.o(.text.LL_USART_Init)
    __arm_cp.5_0                             0x080017c4   Number         4  stm32l0xx_ll_usart.o(.text.LL_USART_Init)
    __arm_cp.5_1                             0x080017c8   Number         4  stm32l0xx_ll_usart.o(.text.LL_USART_Init)
    __arm_cp.5_2                             0x080017cc   Number         4  stm32l0xx_ll_usart.o(.text.LL_USART_Init)
    __arm_cp.5_3                             0x080017d0   Number         4  stm32l0xx_ll_usart.o(.text.LL_USART_Init)
    __arm_cp.5_4                             0x080017d4   Number         4  stm32l0xx_ll_usart.o(.text.LL_USART_Init)
    LL_USART_IsEnabled                       0x080017d9   Thumb Code    20  stm32l0xx_ll_usart.o(.text.LL_USART_IsEnabled)
    [Anonymous Symbol]                       0x080017d8   Section        0  stm32l0xx_ll_usart.o(.text.LL_USART_IsEnabled)
    LL_USART_SetBaudRate                     0x080017ed   Thumb Code   116  stm32l0xx_ll_usart.o(.text.LL_USART_SetBaudRate)
    [Anonymous Symbol]                       0x080017ec   Section        0  stm32l0xx_ll_usart.o(.text.LL_USART_SetBaudRate)
    __arm_cp.9_0                             0x0800185c   Number         4  stm32l0xx_ll_usart.o(.text.LL_USART_SetBaudRate)
    LL_USART_SetHWFlowCtrl                   0x08001861   Thumb Code    36  stm32l0xx_ll_usart.o(.text.LL_USART_SetHWFlowCtrl)
    [Anonymous Symbol]                       0x08001860   Section        0  stm32l0xx_ll_usart.o(.text.LL_USART_SetHWFlowCtrl)
    LL_USART_SetStopBitsLength               0x08001885   Thumb Code    36  stm32l0xx_ll_usart.o(.text.LL_USART_SetStopBitsLength)
    [Anonymous Symbol]                       0x08001884   Section        0  stm32l0xx_ll_usart.o(.text.LL_USART_SetStopBitsLength)
    LL_USART_SetTXRXSwap                     0x080018a9   Thumb Code    36  main.o(.text.LL_USART_SetTXRXSwap)
    [Anonymous Symbol]                       0x080018a8   Section        0  main.o(.text.LL_USART_SetTXRXSwap)
    MX_GPIO_Init                             0x080018cd   Thumb Code   300  main.o(.text.MX_GPIO_Init)
    [Anonymous Symbol]                       0x080018cc   Section        0  main.o(.text.MX_GPIO_Init)
    __arm_cp.4_0                             0x080019f4   Number         4  main.o(.text.MX_GPIO_Init)
    MX_RTC_Init                              0x080019f9   Thumb Code   136  main.o(.text.MX_RTC_Init)
    [Anonymous Symbol]                       0x080019f8   Section        0  main.o(.text.MX_RTC_Init)
    __arm_cp.5_0                             0x08001a7c   Number         4  main.o(.text.MX_RTC_Init)
    MX_SPI1_Init                             0x08001a81   Thumb Code   272  main.o(.text.MX_SPI1_Init)
    [Anonymous Symbol]                       0x08001a80   Section        0  main.o(.text.MX_SPI1_Init)
    __arm_cp.6_0                             0x08001b8c   Number         4  main.o(.text.MX_SPI1_Init)
    MX_TIM2_Init                             0x08001b91   Thumb Code   106  main.o(.text.MX_TIM2_Init)
    [Anonymous Symbol]                       0x08001b90   Section        0  main.o(.text.MX_TIM2_Init)
    MX_USART1_UART_Init                      0x08001bfd   Thumb Code   220  main.o(.text.MX_USART1_UART_Init)
    [Anonymous Symbol]                       0x08001bfc   Section        0  main.o(.text.MX_USART1_UART_Init)
    __arm_cp.8_0                             0x08001cd4   Number         4  main.o(.text.MX_USART1_UART_Init)
    MX_USART4_UART_Init                      0x08001cd9   Thumb Code   224  main.o(.text.MX_USART4_UART_Init)
    [Anonymous Symbol]                       0x08001cd8   Section        0  main.o(.text.MX_USART4_UART_Init)
    __arm_cp.9_0                             0x08001db4   Number         4  main.o(.text.MX_USART4_UART_Init)
    [Anonymous Symbol]                       0x08001db8   Section        0  stm32l0xx_it.o(.text.NMI_Handler)
    NVIC_EnableIRQ                           0x08001dbd   Thumb Code    32  main.o(.text.NVIC_EnableIRQ)
    [Anonymous Symbol]                       0x08001dbc   Section        0  main.o(.text.NVIC_EnableIRQ)
    __arm_cp.36_0                            0x08001dd8   Number         4  main.o(.text.NVIC_EnableIRQ)
    NVIC_SetPriority                         0x08001ddd   Thumb Code   140  main.o(.text.NVIC_SetPriority)
    [Anonymous Symbol]                       0x08001ddc   Section        0  main.o(.text.NVIC_SetPriority)
    __arm_cp.35_0                            0x08001e60   Number         4  main.o(.text.NVIC_SetPriority)
    __arm_cp.35_1                            0x08001e64   Number         4  main.o(.text.NVIC_SetPriority)
    [Anonymous Symbol]                       0x08001e68   Section        0  stm32l0xx_it.o(.text.PendSV_Handler)
    [Anonymous Symbol]                       0x08001e6c   Section        0  stm32l0xx_ll_rcc.o(.text.RCC_GetHCLKClockFreq)
    __arm_cp.11_0                            0x08001e90   Number         4  stm32l0xx_ll_rcc.o(.text.RCC_GetHCLKClockFreq)
    [Anonymous Symbol]                       0x08001e94   Section        0  stm32l0xx_ll_rcc.o(.text.RCC_GetPCLK1ClockFreq)
    [Anonymous Symbol]                       0x08001eb8   Section        0  stm32l0xx_ll_rcc.o(.text.RCC_GetPCLK2ClockFreq)
    __arm_cp.13_0                            0x08001edc   Number         4  stm32l0xx_ll_rcc.o(.text.RCC_GetPCLK2ClockFreq)
    [Anonymous Symbol]                       0x08001ee0   Section        0  stm32l0xx_ll_rcc.o(.text.RCC_GetSystemClockFreq)
    [Anonymous Symbol]                       0x08001f5c   Section        0  stm32l0xx_ll_rcc.o(.text.RCC_PLL_GetFreqDomain_SYS)
    __arm_cp.28_0                            0x08001fb4   Number         4  stm32l0xx_ll_rcc.o(.text.RCC_PLL_GetFreqDomain_SYS)
    __arm_cp.28_1                            0x08001fb8   Number         4  stm32l0xx_ll_rcc.o(.text.RCC_PLL_GetFreqDomain_SYS)
    __arm_cp.28_2                            0x08001fbc   Number         4  stm32l0xx_ll_rcc.o(.text.RCC_PLL_GetFreqDomain_SYS)
    __arm_cp.28_3                            0x08001fc0   Number         4  stm32l0xx_ll_rcc.o(.text.RCC_PLL_GetFreqDomain_SYS)
    [Anonymous Symbol]                       0x08001fc4   Section        0  stm32l0xx_it.o(.text.RTC_IRQHandler)
    __arm_cp.5_0                             0x08001ff0   Number         4  stm32l0xx_it.o(.text.RTC_IRQHandler)
    __arm_cp.5_1                             0x08001ff4   Number         4  stm32l0xx_it.o(.text.RTC_IRQHandler)
    __arm_cp.5_2                             0x08001ff8   Number         4  stm32l0xx_it.o(.text.RTC_IRQHandler)
    [Anonymous Symbol]                       0x08001ffc   Section        0  timers.o(.text.RTC_initAlarm)
    __arm_cp.3_0                             0x08002050   Number         4  timers.o(.text.RTC_initAlarm)
    __arm_cp.3_1                             0x08002054   Number         4  timers.o(.text.RTC_initAlarm)
    __arm_cp.3_2                             0x08002058   Number         4  timers.o(.text.RTC_initAlarm)
    __arm_cp.3_3                             0x0800205c   Number         4  timers.o(.text.RTC_initAlarm)
    __arm_cp.3_4                             0x08002060   Number         4  timers.o(.text.RTC_initAlarm)
    [Anonymous Symbol]                       0x08002064   Section        0  stm32l0xx_it.o(.text.SPI1_IRQHandler)
    [Anonymous Symbol]                       0x08002066   Section        0  stm32l0xx_it.o(.text.SVC_Handler)
    [Anonymous Symbol]                       0x08002068   Section        0  stm32l0xx_it.o(.text.SysTick_Handler)
    [Anonymous Symbol]                       0x0800206a   Section        0  main.o(.text.SystemClock_Config)
    [Anonymous Symbol]                       0x08002128   Section        0  system_stm32l0xx_1.o(.text.SystemInit)
    __arm_cp.0_0                             0x08002170   Number         4  system_stm32l0xx_1.o(.text.SystemInit)
    __arm_cp.0_1                             0x08002174   Number         4  system_stm32l0xx_1.o(.text.SystemInit)
    __arm_cp.0_2                             0x08002178   Number         4  system_stm32l0xx_1.o(.text.SystemInit)
    __arm_cp.0_3                             0x0800217c   Number         4  system_stm32l0xx_1.o(.text.SystemInit)
    __arm_cp.0_4                             0x08002180   Number         4  system_stm32l0xx_1.o(.text.SystemInit)
    __arm_cp.0_5                             0x08002184   Number         4  system_stm32l0xx_1.o(.text.SystemInit)
    __arm_cp.0_6                             0x08002188   Number         4  system_stm32l0xx_1.o(.text.SystemInit)
    [Anonymous Symbol]                       0x0800218c   Section        0  stm32l0xx_it.o(.text.TIM2_IRQHandler)
    [Anonymous Symbol]                       0x08002190   Section        0  timers.o(.text.TIM2_init)
    __arm_cp.0_0                             0x080021ac   Number         4  timers.o(.text.TIM2_init)
    __arm_cp.0_1                             0x080021b0   Number         4  timers.o(.text.TIM2_init)
    [Anonymous Symbol]                       0x080021b4   Section        0  stm32l0xx_it.o(.text.USART1_IRQHandler)
    __arm_cp.9_0                             0x080021f0   Number         4  stm32l0xx_it.o(.text.USART1_IRQHandler)
    __arm_cp.9_1                             0x080021f4   Number         4  stm32l0xx_it.o(.text.USART1_IRQHandler)
    __arm_cp.9_2                             0x080021f8   Number         4  stm32l0xx_it.o(.text.USART1_IRQHandler)
    __arm_cp.9_3                             0x080021fc   Number         4  stm32l0xx_it.o(.text.USART1_IRQHandler)
    [Anonymous Symbol]                       0x08002200   Section        0  stm32l0xx_it.o(.text.USART4_5_IRQHandler)
    __arm_cp.6_0                             0x08002228   Number         4  stm32l0xx_it.o(.text.USART4_5_IRQHandler)
    __arm_cp.6_1                             0x0800222c   Number         4  stm32l0xx_it.o(.text.USART4_5_IRQHandler)
    __arm_cp.6_2                             0x08002230   Number         4  stm32l0xx_it.o(.text.USART4_5_IRQHandler)
    __arm_cp.6_3                             0x08002234   Number         4  stm32l0xx_it.o(.text.USART4_5_IRQHandler)
    [Anonymous Symbol]                       0x08002238   Section        0  xbee.o(.text.XB_EnableXbee)
    __arm_cp.2_0                             0x08002244   Number         4  xbee.o(.text.XB_EnableXbee)
    [Anonymous Symbol]                       0x08002248   Section        0  main.o(.text.main)
    __arm_cp.0_0                             0x08002400   Number         4  main.o(.text.main)
    __arm_cp.0_1                             0x08002404   Number         4  main.o(.text.main)
    i.__scatterload_copy                     0x08002408   Section       14  handlers.o(i.__scatterload_copy)
    i.__scatterload_null                     0x08002416   Section        2  handlers.o(i.__scatterload_null)
    i.__scatterload_zeroinit                 0x08002418   Section       14  handlers.o(i.__scatterload_zeroinit)
    FLASH_readFixes.currAddr                 0x20000000   Data           4  flash.o(.data.FLASH_readFixes.currAddr)
    [Anonymous Symbol]                       0x20000000   Section        0  flash.o(.data.FLASH_readFixes.currAddr)
    STACK                                    0x20000098   Section     1024  startup_stm32l071xx.o(STACK)

    Global Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    BuildAttributes$$THM_ISAv3M$S$PE$A:L22$X:L11$S22$IEEE1$IW$~IW$USESV6$~STKCKD$USESV7$~SHL$OTIME$ROPI$EBA8$MICROLIB$REQ8$PRES8$EABIv2 0x00000000   Number         0  anon$$obj.o ABSOLUTE
    __cpp_initialize__aeabi_                  - Undefined Weak Reference
    __cxa_finalize                            - Undefined Weak Reference
    __decompress                              - Undefined Weak Reference
    _clock_init                               - Undefined Weak Reference
    _microlib_exit                            - Undefined Weak Reference
    __Vectors_Size                           0x000000c0   Number         0  startup_stm32l071xx.o ABSOLUTE
    __Vectors                                0x08000000   Data           4  startup_stm32l071xx.o(RESET)
    __Vectors_End                            0x080000c0   Data           0  startup_stm32l071xx.o(RESET)
    __main                                   0x080000c1   Thumb Code     0  entry.o(.ARM.Collect$$$$00000000)
    _main_stk                                0x080000c1   Thumb Code     0  entry2.o(.ARM.Collect$$$$00000001)
    _main_scatterload                        0x080000c5   Thumb Code     0  entry5.o(.ARM.Collect$$$$00000004)
    __main_after_scatterload                 0x080000c9   Thumb Code     0  entry5.o(.ARM.Collect$$$$00000004)
    _main_clock                              0x080000c9   Thumb Code     0  entry7b.o(.ARM.Collect$$$$00000008)
    _main_cpp_init                           0x080000c9   Thumb Code     0  entry8b.o(.ARM.Collect$$$$0000000A)
    _main_init                               0x080000c9   Thumb Code     0  entry9a.o(.ARM.Collect$$$$0000000B)
    __rt_final_cpp                           0x080000d1   Thumb Code     0  entry10a.o(.ARM.Collect$$$$0000000D)
    __rt_final_exit                          0x080000d1   Thumb Code     0  entry11a.o(.ARM.Collect$$$$0000000F)
    Reset_Handler                            0x080000d5   Thumb Code     8  startup_stm32l071xx.o(.text)
    ADC1_COMP_IRQHandler                     0x080000e7   Thumb Code     0  startup_stm32l071xx.o(.text)
    DMA1_Channel1_IRQHandler                 0x080000e7   Thumb Code     0  startup_stm32l071xx.o(.text)
    DMA1_Channel2_3_IRQHandler               0x080000e7   Thumb Code     0  startup_stm32l071xx.o(.text)
    DMA1_Channel4_5_6_7_IRQHandler           0x080000e7   Thumb Code     0  startup_stm32l071xx.o(.text)
    EXTI0_1_IRQHandler                       0x080000e7   Thumb Code     0  startup_stm32l071xx.o(.text)
    EXTI2_3_IRQHandler                       0x080000e7   Thumb Code     0  startup_stm32l071xx.o(.text)
    EXTI4_15_IRQHandler                      0x080000e7   Thumb Code     0  startup_stm32l071xx.o(.text)
    FLASH_IRQHandler                         0x080000e7   Thumb Code     0  startup_stm32l071xx.o(.text)
    I2C1_IRQHandler                          0x080000e7   Thumb Code     0  startup_stm32l071xx.o(.text)
    I2C2_IRQHandler                          0x080000e7   Thumb Code     0  startup_stm32l071xx.o(.text)
    I2C3_IRQHandler                          0x080000e7   Thumb Code     0  startup_stm32l071xx.o(.text)
    LPTIM1_IRQHandler                        0x080000e7   Thumb Code     0  startup_stm32l071xx.o(.text)
    LPUART1_IRQHandler                       0x080000e7   Thumb Code     0  startup_stm32l071xx.o(.text)
    PVD_IRQHandler                           0x080000e7   Thumb Code     0  startup_stm32l071xx.o(.text)
    RCC_IRQHandler                           0x080000e7   Thumb Code     0  startup_stm32l071xx.o(.text)
    SPI2_IRQHandler                          0x080000e7   Thumb Code     0  startup_stm32l071xx.o(.text)
    TIM21_IRQHandler                         0x080000e7   Thumb Code     0  startup_stm32l071xx.o(.text)
    TIM22_IRQHandler                         0x080000e7   Thumb Code     0  startup_stm32l071xx.o(.text)
    TIM3_IRQHandler                          0x080000e7   Thumb Code     0  startup_stm32l071xx.o(.text)
    TIM6_IRQHandler                          0x080000e7   Thumb Code     0  startup_stm32l071xx.o(.text)
    TIM7_IRQHandler                          0x080000e7   Thumb Code     0  startup_stm32l071xx.o(.text)
    USART2_IRQHandler                        0x080000e7   Thumb Code     0  startup_stm32l071xx.o(.text)
    WWDG_IRQHandler                          0x080000e7   Thumb Code     0  startup_stm32l071xx.o(.text)
    __aeabi_uidiv                            0x080000f1   Thumb Code     0  uidiv.o(.text)
    __aeabi_uidivmod                         0x080000f1   Thumb Code    44  uidiv.o(.text)
    __aeabi_memset                           0x0800011d   Thumb Code    14  memseta.o(.text)
    __aeabi_memset4                          0x0800011d   Thumb Code     0  memseta.o(.text)
    __aeabi_memset8                          0x0800011d   Thumb Code     0  memseta.o(.text)
    __aeabi_memclr                           0x0800012b   Thumb Code     4  memseta.o(.text)
    __aeabi_memclr4                          0x0800012b   Thumb Code     0  memseta.o(.text)
    __aeabi_memclr8                          0x0800012b   Thumb Code     0  memseta.o(.text)
    _memset$wrapper                          0x0800012f   Thumb Code    18  memseta.o(.text)
    strcpy                                   0x08000141   Thumb Code    18  strcpy.o(.text)
    __scatterload                            0x08000155   Thumb Code    28  init.o(.text)
    __scatterload_rt2                        0x08000155   Thumb Code     0  init.o(.text)
    EEPROM_WriteByte                         0x08000179   Thumb Code    34  flash.o(.text.EEPROM_WriteByte)
    EEPROM_WriteData                         0x0800019b   Thumb Code    96  flash.o(.text.EEPROM_WriteData)
    Error_Handler                            0x080001fb   Thumb Code     2  main.o(.text.Error_Handler)
    FLASH_Lock                               0x080001fd   Thumb Code    40  flash.o(.text.FLASH_Lock)
    FLASH_ReadData                           0x0800021d   Thumb Code    78  flash.o(.text.FLASH_ReadData)
    FLASH_Unlock                             0x0800026d   Thumb Code    60  flash.o(.text.FLASH_Unlock)
    FLASH_erasePage                          0x080002a5   Thumb Code   104  flash.o(.text.FLASH_erasePage)
    FLASH_initDataStorage                    0x08000309   Thumb Code    84  flash.o(.text.FLASH_initDataStorage)
    FLASH_readFixes                          0x08000355   Thumb Code   132  flash.o(.text.FLASH_readFixes)
    FLASH_saveFix                            0x080003d1   Thumb Code   412  flash.o(.text.FLASH_saveFix)
    FLASH_unlockPrgm                         0x0800056d   Thumb Code    72  flash.o(.text.FLASH_unlockPrgm)
    FLASH_writeWord                          0x080005b5   Thumb Code   100  flash.o(.text.FLASH_writeWord)
    GPS_GPSCSHigh                            0x08000619   Thumb Code    20  gps.o(.text.GPS_GPSCSHigh)
    GPS_GPSDisable                           0x0800062d   Thumb Code    16  gps.o(.text.GPS_GPSDisable)
    HardFault_Handler                        0x0800063d   Thumb Code     4  stm32l0xx_it.o(.text.HardFault_Handler)
    LL_GPIO_Init                             0x080006bd   Thumb Code   222  stm32l0xx_ll_gpio.o(.text.LL_GPIO_Init)
    LL_Init1msTick                           0x08000915   Thumb Code    26  stm32l0xx_ll_utils.o(.text.LL_Init1msTick)
    LL_RCC_GetSystemClocksFreq               0x080009f9   Thumb Code    58  stm32l0xx_ll_rcc.o(.text.LL_RCC_GetSystemClocksFreq)
    LL_RCC_GetUSARTClockFreq                 0x08000a35   Thumb Code   292  stm32l0xx_ll_rcc.o(.text.LL_RCC_GetUSARTClockFreq)
    LL_RTC_DATE_Init                         0x08000e25   Thumb Code   272  stm32l0xx_ll_rtc.o(.text.LL_RTC_DATE_Init)
    LL_RTC_EnterInitMode                     0x08000fad   Thumb Code   138  stm32l0xx_ll_rtc.o(.text.LL_RTC_EnterInitMode)
    LL_RTC_Init                              0x0800104b   Thumb Code    98  stm32l0xx_ll_rtc.o(.text.LL_RTC_Init)
    LL_RTC_TIME_Init                         0x080011b5   Thumb Code   284  stm32l0xx_ll_rtc.o(.text.LL_RTC_TIME_Init)
    LL_RTC_WaitForSynchro                    0x080012d1   Thumb Code   240  stm32l0xx_ll_rtc.o(.text.LL_RTC_WaitForSynchro)
    LL_SPI_Init                              0x080013c1   Thumb Code   160  stm32l0xx_ll_spi.o(.text.LL_SPI_Init)
    LL_SetSystemCoreClock                    0x080014f5   Thumb Code    24  stm32l0xx_ll_utils.o(.text.LL_SetSystemCoreClock)
    LL_TIM_Init                              0x08001551   Thumb Code   192  stm32l0xx_ll_tim.o(.text.LL_TIM_Init)
    LL_USART_Init                            0x080016d9   Thumb Code   256  stm32l0xx_ll_usart.o(.text.LL_USART_Init)
    NMI_Handler                              0x08001db9   Thumb Code     2  stm32l0xx_it.o(.text.NMI_Handler)
    PendSV_Handler                           0x08001e69   Thumb Code     2  stm32l0xx_it.o(.text.PendSV_Handler)
    RCC_GetHCLKClockFreq                     0x08001e6d   Thumb Code    40  stm32l0xx_ll_rcc.o(.text.RCC_GetHCLKClockFreq)
    RCC_GetPCLK1ClockFreq                    0x08001e95   Thumb Code    40  stm32l0xx_ll_rcc.o(.text.RCC_GetPCLK1ClockFreq)
    RCC_GetPCLK2ClockFreq                    0x08001eb9   Thumb Code    40  stm32l0xx_ll_rcc.o(.text.RCC_GetPCLK2ClockFreq)
    RCC_GetSystemClockFreq                   0x08001ee1   Thumb Code   136  stm32l0xx_ll_rcc.o(.text.RCC_GetSystemClockFreq)
    RCC_PLL_GetFreqDomain_SYS                0x08001f5d   Thumb Code   104  stm32l0xx_ll_rcc.o(.text.RCC_PLL_GetFreqDomain_SYS)
    RTC_IRQHandler                           0x08001fc5   Thumb Code    56  stm32l0xx_it.o(.text.RTC_IRQHandler)
    RTC_initAlarm                            0x08001ffd   Thumb Code   104  timers.o(.text.RTC_initAlarm)
    SPI1_IRQHandler                          0x08002065   Thumb Code     2  stm32l0xx_it.o(.text.SPI1_IRQHandler)
    SVC_Handler                              0x08002067   Thumb Code     2  stm32l0xx_it.o(.text.SVC_Handler)
    SysTick_Handler                          0x08002069   Thumb Code     2  stm32l0xx_it.o(.text.SysTick_Handler)
    SystemClock_Config                       0x0800206b   Thumb Code   190  main.o(.text.SystemClock_Config)
    SystemInit                               0x08002129   Thumb Code   100  system_stm32l0xx_1.o(.text.SystemInit)
    TIM2_IRQHandler                          0x0800218d   Thumb Code     2  stm32l0xx_it.o(.text.TIM2_IRQHandler)
    TIM2_init                                0x08002191   Thumb Code    36  timers.o(.text.TIM2_init)
    USART1_IRQHandler                        0x080021b5   Thumb Code    76  stm32l0xx_it.o(.text.USART1_IRQHandler)
    USART4_5_IRQHandler                      0x08002201   Thumb Code    56  stm32l0xx_it.o(.text.USART4_5_IRQHandler)
    XB_EnableXbee                            0x08002239   Thumb Code    16  xbee.o(.text.XB_EnableXbee)
    main                                     0x08002249   Thumb Code   448  main.o(.text.main)
    __scatterload_copy                       0x08002409   Thumb Code    14  handlers.o(i.__scatterload_copy)
    __scatterload_null                       0x08002417   Thumb Code     2  handlers.o(i.__scatterload_null)
    __scatterload_zeroinit                   0x08002419   Thumb Code    14  handlers.o(i.__scatterload_zeroinit)
    AHBPrescTable                            0x08002426   Data          16  system_stm32l0xx_1.o(.rodata.AHBPrescTable)
    APBPrescTable                            0x08002436   Data           8  system_stm32l0xx_1.o(.rodata.APBPrescTable)
    PLLMulTable                              0x0800243e   Data           9  system_stm32l0xx_1.o(.rodata.PLLMulTable)
    Region$$Table$$Base                      0x08002448   Number         0  anon$$obj.o(Region$$Table)
    Region$$Table$$Limit                     0x08002468   Number         0  anon$$obj.o(Region$$Table)
    SystemCoreClock                          0x20000004   Data           4  system_stm32l0xx_1.o(.data.SystemCoreClock)
    ComRxBuff                                0x20000008   Data          64  comport.o(.bss.ComRxBuff)
    ComRxWriteIndex                          0x20000048   Data           4  comport.o(.bss.ComRxWriteIndex)
    XbeeRxBuff                               0x2000004c   Data          64  xbee.o(.bss.XbeeRxBuff)
    XbeeRxBufferActive                       0x2000008c   Data           4  xbee.o(.bss.XbeeRxBufferActive)
    XbeeRxWriteIndex                         0x20000090   Data           4  xbee.o(.bss.XbeeRxWriteIndex)
    checkSchedule                            0x20000094   Data           4  main.o(.bss.checkSchedule)
    __initial_sp                             0x20000498   Data           0  startup_stm32l071xx.o(STACK)



==============================================================================

Memory Map of the image

  Image Entry point : 0x080000c1

  Load Region LR_IROM1 (Base: 0x08000000, Size: 0x00002470, Max: 0x00030000, ABSOLUTE)

    Execution Region ER_IROM1 (Exec base: 0x08000000, Load base: 0x08000000, Size: 0x00002468, Max: 0x00030000, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x08000000   0x08000000   0x000000c0   Data   RO            3    RESET               startup_stm32l071xx.o
    0x080000c0   0x080000c0   0x00000000   Code   RO          866  * .ARM.Collect$$$$00000000  mc_p.l(entry.o)
    0x080000c0   0x080000c0   0x00000004   Code   RO          929    .ARM.Collect$$$$00000001  mc_p.l(entry2.o)
    0x080000c4   0x080000c4   0x00000004   Code   RO          932    .ARM.Collect$$$$00000004  mc_p.l(entry5.o)
    0x080000c8   0x080000c8   0x00000000   Code   RO          934    .ARM.Collect$$$$00000008  mc_p.l(entry7b.o)
    0x080000c8   0x080000c8   0x00000000   Code   RO          936    .ARM.Collect$$$$0000000A  mc_p.l(entry8b.o)
    0x080000c8   0x080000c8   0x00000008   Code   RO          937    .ARM.Collect$$$$0000000B  mc_p.l(entry9a.o)
    0x080000d0   0x080000d0   0x00000000   Code   RO          939    .ARM.Collect$$$$0000000D  mc_p.l(entry10a.o)
    0x080000d0   0x080000d0   0x00000000   Code   RO          941    .ARM.Collect$$$$0000000F  mc_p.l(entry11a.o)
    0x080000d0   0x080000d0   0x00000004   Code   RO          930    .ARM.Collect$$$$00002712  mc_p.l(entry2.o)
    0x080000d4   0x080000d4   0x0000001c   Code   RO            4    .text               startup_stm32l071xx.o
    0x080000f0   0x080000f0   0x0000002c   Code   RO          869    .text               mc_p.l(uidiv.o)
    0x0800011c   0x0800011c   0x00000024   Code   RO          875    .text               mc_p.l(memseta.o)
    0x08000140   0x08000140   0x00000012   Code   RO          883    .text               mc_p.l(strcpy.o)
    0x08000152   0x08000152   0x00000002   PAD
    0x08000154   0x08000154   0x00000024   Code   RO          972    .text               mc_p.l(init.o)
    0x08000178   0x08000178   0x00000022   Code   RO           66    .text.EEPROM_WriteByte  flash.o
    0x0800019a   0x0800019a   0x00000060   Code   RO           68    .text.EEPROM_WriteData  flash.o
    0x080001fa   0x080001fa   0x00000002   Code   RO          263    .text.Error_Handler  main.o
    0x080001fc   0x080001fc   0x00000020   Code   RO           64    .text.FLASH_Lock    flash.o
    0x0800021c   0x0800021c   0x0000004e   Code   RO           70    .text.FLASH_ReadData  flash.o
    0x0800026a   0x0800026a   0x00000002   PAD
    0x0800026c   0x0800026c   0x00000038   Code   RO           62    .text.FLASH_Unlock  flash.o
    0x080002a4   0x080002a4   0x00000064   Code   RO           76    .text.FLASH_erasePage  flash.o
    0x08000308   0x08000308   0x0000004c   Code   RO           78    .text.FLASH_initDataStorage  flash.o
    0x08000354   0x08000354   0x0000007c   Code   RO           82    .text.FLASH_readFixes  flash.o
    0x080003d0   0x080003d0   0x0000019c   Code   RO           80    .text.FLASH_saveFix  flash.o
    0x0800056c   0x0800056c   0x00000048   Code   RO           72    .text.FLASH_unlockPrgm  flash.o
    0x080005b4   0x080005b4   0x00000064   Code   RO           74    .text.FLASH_writeWord  flash.o
    0x08000618   0x08000618   0x00000014   Code   RO           99    .text.GPS_GPSCSHigh  gps.o
    0x0800062c   0x0800062c   0x00000010   Code   RO           95    .text.GPS_GPSDisable  gps.o
    0x0800063c   0x0800063c   0x00000004   Code   RO          340    .text.HardFault_Handler  stm32l0xx_it.o
    0x08000640   0x08000640   0x00000028   Code   RO          239    .text.LL_APB1_GRP1_EnableClock  main.o
    0x08000668   0x08000668   0x00000028   Code   RO          237    .text.LL_APB2_GRP1_EnableClock  main.o
    0x08000690   0x08000690   0x0000000c   Code   RO          261    .text.LL_FLASH_GetLatency  main.o
    0x0800069c   0x0800069c   0x00000020   Code   RO          259    .text.LL_FLASH_SetLatency  main.o
    0x080006bc   0x080006bc   0x000000de   Code   RO          388    .text.LL_GPIO_Init  stm32l0xx_ll_gpio.o
    0x0800079a   0x0800079a   0x00000018   Code   RO          325    .text.LL_GPIO_ResetOutputPin  main.o
    0x080007b2   0x080007b2   0x0000003a   Code   RO          396    .text.LL_GPIO_SetAFPin_0_7  stm32l0xx_ll_gpio.o
    0x080007ec   0x080007ec   0x0000003c   Code   RO          398    .text.LL_GPIO_SetAFPin_8_15  stm32l0xx_ll_gpio.o
    0x08000828   0x08000828   0x00000032   Code   RO          390    .text.LL_GPIO_SetPinMode  stm32l0xx_ll_gpio.o
    0x0800085a   0x0800085a   0x0000002c   Code   RO          400    .text.LL_GPIO_SetPinOutputType  stm32l0xx_ll_gpio.o
    0x08000886   0x08000886   0x00000032   Code   RO          394    .text.LL_GPIO_SetPinPull  stm32l0xx_ll_gpio.o
    0x080008b8   0x080008b8   0x00000032   Code   RO          392    .text.LL_GPIO_SetPinSpeed  stm32l0xx_ll_gpio.o
    0x080008ea   0x080008ea   0x00000002   PAD
    0x080008ec   0x080008ec   0x00000028   Code   RO          309    .text.LL_IOP_GRP1_EnableClock  main.o
    0x08000914   0x08000914   0x0000001a   Code   RO          805    .text.LL_Init1msTick  stm32l0xx_ll_utils.o
    0x0800092e   0x0800092e   0x00000002   PAD
    0x08000930   0x08000930   0x0000003c   Code   RO          807    .text.LL_InitTick   stm32l0xx_ll_utils.o
    0x0800096c   0x0800096c   0x00000010   Code   RO          275    .text.LL_PWR_EnableBkUpAccess  main.o
    0x0800097c   0x0800097c   0x00000020   Code   RO          265    .text.LL_PWR_SetRegulVoltageScaling  main.o
    0x0800099c   0x0800099c   0x00000010   Code   RO          289    .text.LL_RCC_EnableRTC  main.o
    0x080009ac   0x080009ac   0x00000010   Code   RO          277    .text.LL_RCC_ForceBackupDomainReset  main.o
    0x080009bc   0x080009bc   0x0000000c   Code   RO          785    .text.LL_RCC_GetAHBPrescaler  stm32l0xx_ll_rcc.o
    0x080009c8   0x080009c8   0x0000000c   Code   RO          787    .text.LL_RCC_GetAPB1Prescaler  stm32l0xx_ll_rcc.o
    0x080009d4   0x080009d4   0x0000000c   Code   RO          789    .text.LL_RCC_GetAPB2Prescaler  stm32l0xx_ll_rcc.o
    0x080009e0   0x080009e0   0x0000000c   Code   RO          299    .text.LL_RCC_GetSysClkSource  main.o
    0x080009ec   0x080009ec   0x0000000c   Code   RO          779    .text.LL_RCC_GetSysClkSource  stm32l0xx_ll_rcc.o
    0x080009f8   0x080009f8   0x0000003a   Code   RO          745    .text.LL_RCC_GetSystemClocksFreq  stm32l0xx_ll_rcc.o
    0x08000a32   0x08000a32   0x00000002   PAD
    0x08000a34   0x08000a34   0x00000124   Code   RO          755    .text.LL_RCC_GetUSARTClockFreq  stm32l0xx_ll_rcc.o
    0x08000b58   0x08000b58   0x00000018   Code   RO          757    .text.LL_RCC_GetUSARTClockSource  stm32l0xx_ll_rcc.o
    0x08000b70   0x08000b70   0x0000000c   Code   RO          759    .text.LL_RCC_HSI_IsReady  stm32l0xx_ll_rcc.o
    0x08000b7c   0x08000b7c   0x0000000c   Code   RO          761    .text.LL_RCC_IsActiveFlag_HSIDIV  stm32l0xx_ll_rcc.o
    0x08000b88   0x08000b88   0x00000010   Code   RO          283    .text.LL_RCC_LSE_Enable  main.o
    0x08000b98   0x08000b98   0x00000010   Code   RO          285    .text.LL_RCC_LSE_IsReady  main.o
    0x08000ba8   0x08000ba8   0x00000010   Code   RO          763    .text.LL_RCC_LSE_IsReady  stm32l0xx_ll_rcc.o
    0x08000bb8   0x08000bb8   0x0000001c   Code   RO          281    .text.LL_RCC_LSE_SetDriveCapability  main.o
    0x08000bd4   0x08000bd4   0x00000010   Code   RO          267    .text.LL_RCC_MSI_Enable  main.o
    0x08000be4   0x08000be4   0x0000000c   Code   RO          781    .text.LL_RCC_MSI_GetRange  stm32l0xx_ll_rcc.o
    0x08000bf0   0x08000bf0   0x00000014   Code   RO          269    .text.LL_RCC_MSI_IsReady  main.o
    0x08000c04   0x08000c04   0x00000020   Code   RO          273    .text.LL_RCC_MSI_SetCalibTrimming  main.o
    0x08000c24   0x08000c24   0x00000020   Code   RO          271    .text.LL_RCC_MSI_SetRange  main.o
    0x08000c44   0x08000c44   0x0000000c   Code   RO          795    .text.LL_RCC_PLL_GetDivider  stm32l0xx_ll_rcc.o
    0x08000c50   0x08000c50   0x0000000c   Code   RO          791    .text.LL_RCC_PLL_GetMainSource  stm32l0xx_ll_rcc.o
    0x08000c5c   0x08000c5c   0x0000000c   Code   RO          793    .text.LL_RCC_PLL_GetMultiplicator  stm32l0xx_ll_rcc.o
    0x08000c68   0x08000c68   0x00000010   Code   RO          279    .text.LL_RCC_ReleaseBackupDomainReset  main.o
    0x08000c78   0x08000c78   0x0000001c   Code   RO          291    .text.LL_RCC_SetAHBPrescaler  main.o
    0x08000c94   0x08000c94   0x0000001c   Code   RO          293    .text.LL_RCC_SetAPB1Prescaler  main.o
    0x08000cb0   0x08000cb0   0x0000001c   Code   RO          295    .text.LL_RCC_SetAPB2Prescaler  main.o
    0x08000ccc   0x08000ccc   0x00000020   Code   RO          287    .text.LL_RCC_SetRTCClockSource  main.o
    0x08000cec   0x08000cec   0x00000020   Code   RO          297    .text.LL_RCC_SetSysClkSource  main.o
    0x08000d0c   0x08000d0c   0x00000024   Code   RO          303    .text.LL_RCC_SetUSARTClockSource  main.o
    0x08000d30   0x08000d30   0x00000018   Code   RO          154    .text.LL_RTC_ALMA_Disable  timers.o
    0x08000d48   0x08000d48   0x00000018   Code   RO          160    .text.LL_RTC_ALMA_Enable  timers.o
    0x08000d60   0x08000d60   0x00000028   Code   RO          158    .text.LL_RTC_ALMA_SetMask  timers.o
    0x08000d88   0x08000d88   0x00000024   Code   RO          156    .text.LL_RTC_ALMA_SetSecond  timers.o
    0x08000dac   0x08000dac   0x0000001e   Code   RO          490    .text.LL_RTC_ClearFlag_RS  stm32l0xx_ll_rtc.o
    0x08000dca   0x08000dca   0x00000002   PAD
    0x08000dcc   0x08000dcc   0x00000058   Code   RO          446    .text.LL_RTC_DATE_Config  stm32l0xx_ll_rtc.o
    0x08000e24   0x08000e24   0x0000010c   Code   RO          444    .text.LL_RTC_DATE_Init  stm32l0xx_ll_rtc.o
    0x08000f30   0x08000f30   0x00000014   Code   RO          430    .text.LL_RTC_DisableInitMode  stm32l0xx_ll_rtc.o
    0x08000f44   0x08000f44   0x00000018   Code   RO          152    .text.LL_RTC_DisableWriteProtection  timers.o
    0x08000f5c   0x08000f5c   0x00000018   Code   RO          414    .text.LL_RTC_DisableWriteProtection  stm32l0xx_ll_rtc.o
    0x08000f74   0x08000f74   0x00000014   Code   RO          484    .text.LL_RTC_EnableInitMode  stm32l0xx_ll_rtc.o
    0x08000f88   0x08000f88   0x00000012   Code   RO          162    .text.LL_RTC_EnableWriteProtection  timers.o
    0x08000f9a   0x08000f9a   0x00000012   Code   RO          420    .text.LL_RTC_EnableWriteProtection  stm32l0xx_ll_rtc.o
    0x08000fac   0x08000fac   0x0000008a   Code   RO          416    .text.LL_RTC_EnterInitMode  stm32l0xx_ll_rtc.o
    0x08001036   0x08001036   0x00000014   Code   RO          436    .text.LL_RTC_GetHourFormat  stm32l0xx_ll_rtc.o
    0x0800104a   0x0800104a   0x00000062   Code   RO          422    .text.LL_RTC_Init   stm32l0xx_ll_rtc.o
    0x080010ac   0x080010ac   0x00000016   Code   RO          482    .text.LL_RTC_IsActiveFlag_INIT  stm32l0xx_ll_rtc.o
    0x080010c2   0x080010c2   0x00000016   Code   RO          492    .text.LL_RTC_IsActiveFlag_RS  stm32l0xx_ll_rtc.o
    0x080010d8   0x080010d8   0x00000016   Code   RO          440    .text.LL_RTC_IsShadowRegBypassEnabled  stm32l0xx_ll_rtc.o
    0x080010ee   0x080010ee   0x00000026   Code   RO          428    .text.LL_RTC_SetAsynchPrescaler  stm32l0xx_ll_rtc.o
    0x08001114   0x08001114   0x00000022   Code   RO          424    .text.LL_RTC_SetHourFormat  stm32l0xx_ll_rtc.o
    0x08001136   0x08001136   0x00000002   PAD
    0x08001138   0x08001138   0x00000028   Code   RO          426    .text.LL_RTC_SetSynchPrescaler  stm32l0xx_ll_rtc.o
    0x08001160   0x08001160   0x00000054   Code   RO          438    .text.LL_RTC_TIME_Config  stm32l0xx_ll_rtc.o
    0x080011b4   0x080011b4   0x0000011c   Code   RO          434    .text.LL_RTC_TIME_Init  stm32l0xx_ll_rtc.o
    0x080012d0   0x080012d0   0x000000f0   Code   RO          418    .text.LL_RTC_WaitForSynchro  stm32l0xx_ll_rtc.o
    0x080013c0   0x080013c0   0x000000a0   Code   RO          512    .text.LL_SPI_Init   stm32l0xx_ll_spi.o
    0x08001460   0x08001460   0x00000016   Code   RO          514    .text.LL_SPI_IsEnabled  stm32l0xx_ll_spi.o
    0x08001476   0x08001476   0x0000001a   Code   RO          516    .text.LL_SPI_SetCRCPolynomial  stm32l0xx_ll_spi.o
    0x08001490   0x08001490   0x00000022   Code   RO          311    .text.LL_SPI_SetStandard  main.o
    0x080014b2   0x080014b2   0x00000002   PAD
    0x080014b4   0x080014b4   0x00000010   Code   RO          486    .text.LL_SYSTICK_IsActiveCounterFlag  stm32l0xx_ll_rtc.o
    0x080014c4   0x080014c4   0x00000030   Code   RO          301    .text.LL_SYSTICK_SetClkSource  main.o
    0x080014f4   0x080014f4   0x00000018   Code   RO          811    .text.LL_SetSystemCoreClock  stm32l0xx_ll_utils.o
    0x0800150c   0x0800150c   0x00000016   Code   RO          313    .text.LL_TIM_DisableARRPreload  main.o
    0x08001522   0x08001522   0x00000016   Code   RO          319    .text.LL_TIM_DisableMasterSlaveMode  main.o
    0x08001538   0x08001538   0x00000016   Code   RO          643    .text.LL_TIM_GenerateEvent_UPDATE  stm32l0xx_ll_tim.o
    0x0800154e   0x0800154e   0x00000002   PAD
    0x08001550   0x08001550   0x000000c0   Code   RO          637    .text.LL_TIM_Init   stm32l0xx_ll_tim.o
    0x08001610   0x08001610   0x00000018   Code   RO          639    .text.LL_TIM_SetAutoReload  stm32l0xx_ll_tim.o
    0x08001628   0x08001628   0x00000028   Code   RO          315    .text.LL_TIM_SetClockSource  main.o
    0x08001650   0x08001650   0x00000018   Code   RO          641    .text.LL_TIM_SetPrescaler  stm32l0xx_ll_tim.o
    0x08001668   0x08001668   0x00000022   Code   RO          317    .text.LL_TIM_SetTriggerOutput  main.o
    0x0800168a   0x0800168a   0x00000022   Code   RO          321    .text.LL_USART_ConfigAsyncMode  main.o
    0x080016ac   0x080016ac   0x00000016   Code   RO          255    .text.LL_USART_Disable  main.o
    0x080016c2   0x080016c2   0x00000016   Code   RO          257    .text.LL_USART_Enable  main.o
    0x080016d8   0x080016d8   0x00000100   Code   RO          701    .text.LL_USART_Init  stm32l0xx_ll_usart.o
    0x080017d8   0x080017d8   0x00000014   Code   RO          703    .text.LL_USART_IsEnabled  stm32l0xx_ll_usart.o
    0x080017ec   0x080017ec   0x00000074   Code   RO          709    .text.LL_USART_SetBaudRate  stm32l0xx_ll_usart.o
    0x08001860   0x08001860   0x00000024   Code   RO          707    .text.LL_USART_SetHWFlowCtrl  stm32l0xx_ll_usart.o
    0x08001884   0x08001884   0x00000024   Code   RO          705    .text.LL_USART_SetStopBitsLength  stm32l0xx_ll_usart.o
    0x080018a8   0x080018a8   0x00000024   Code   RO          323    .text.LL_USART_SetTXRXSwap  main.o
    0x080018cc   0x080018cc   0x0000012c   Code   RO          243    .text.MX_GPIO_Init  main.o
    0x080019f8   0x080019f8   0x00000088   Code   RO          245    .text.MX_RTC_Init   main.o
    0x08001a80   0x08001a80   0x00000110   Code   RO          247    .text.MX_SPI1_Init  main.o
    0x08001b90   0x08001b90   0x0000006a   Code   RO          249    .text.MX_TIM2_Init  main.o
    0x08001bfa   0x08001bfa   0x00000002   PAD
    0x08001bfc   0x08001bfc   0x000000dc   Code   RO          251    .text.MX_USART1_UART_Init  main.o
    0x08001cd8   0x08001cd8   0x000000e0   Code   RO          253    .text.MX_USART4_UART_Init  main.o
    0x08001db8   0x08001db8   0x00000002   Code   RO          338    .text.NMI_Handler   stm32l0xx_it.o
    0x08001dba   0x08001dba   0x00000002   PAD
    0x08001dbc   0x08001dbc   0x00000020   Code   RO          307    .text.NVIC_EnableIRQ  main.o
    0x08001ddc   0x08001ddc   0x0000008c   Code   RO          305    .text.NVIC_SetPriority  main.o
    0x08001e68   0x08001e68   0x00000002   Code   RO          344    .text.PendSV_Handler  stm32l0xx_it.o
    0x08001e6a   0x08001e6a   0x00000002   PAD
    0x08001e6c   0x08001e6c   0x00000028   Code   RO          749    .text.RCC_GetHCLKClockFreq  stm32l0xx_ll_rcc.o
    0x08001e94   0x08001e94   0x00000024   Code   RO          751    .text.RCC_GetPCLK1ClockFreq  stm32l0xx_ll_rcc.o
    0x08001eb8   0x08001eb8   0x00000028   Code   RO          753    .text.RCC_GetPCLK2ClockFreq  stm32l0xx_ll_rcc.o
    0x08001ee0   0x08001ee0   0x0000007c   Code   RO          747    .text.RCC_GetSystemClockFreq  stm32l0xx_ll_rcc.o
    0x08001f5c   0x08001f5c   0x00000068   Code   RO          783    .text.RCC_PLL_GetFreqDomain_SYS  stm32l0xx_ll_rcc.o
    0x08001fc4   0x08001fc4   0x00000038   Code   RO          348    .text.RTC_IRQHandler  stm32l0xx_it.o
    0x08001ffc   0x08001ffc   0x00000068   Code   RO          150    .text.RTC_initAlarm  timers.o
    0x08002064   0x08002064   0x00000002   Code   RO          354    .text.SPI1_IRQHandler  stm32l0xx_it.o
    0x08002066   0x08002066   0x00000002   Code   RO          342    .text.SVC_Handler   stm32l0xx_it.o
    0x08002068   0x08002068   0x00000002   Code   RO          346    .text.SysTick_Handler  stm32l0xx_it.o
    0x0800206a   0x0800206a   0x000000be   Code   RO          241    .text.SystemClock_Config  main.o
    0x08002128   0x08002128   0x00000064   Code   RO          366    .text.SystemInit    system_stm32l0xx_1.o
    0x0800218c   0x0800218c   0x00000002   Code   RO          352    .text.TIM2_IRQHandler  stm32l0xx_it.o
    0x0800218e   0x0800218e   0x00000002   PAD
    0x08002190   0x08002190   0x00000024   Code   RO          144    .text.TIM2_init     timers.o
    0x080021b4   0x080021b4   0x0000004c   Code   RO          356    .text.USART1_IRQHandler  stm32l0xx_it.o
    0x08002200   0x08002200   0x00000038   Code   RO          350    .text.USART4_5_IRQHandler  stm32l0xx_it.o
    0x08002238   0x08002238   0x00000010   Code   RO          196    .text.XB_EnableXbee  xbee.o
    0x08002248   0x08002248   0x000001c0   Code   RO          235    .text.main          main.o
    0x08002408   0x08002408   0x0000000e   Code   RO         1020    i.__scatterload_copy  mc_p.l(handlers.o)
    0x08002416   0x08002416   0x00000002   Code   RO         1021    i.__scatterload_null  mc_p.l(handlers.o)
    0x08002418   0x08002418   0x0000000e   Code   RO         1022    i.__scatterload_zeroinit  mc_p.l(handlers.o)
    0x08002426   0x08002426   0x00000010   Data   RO          371    .rodata.AHBPrescTable  system_stm32l0xx_1.o
    0x08002436   0x08002436   0x00000008   Data   RO          372    .rodata.APBPrescTable  system_stm32l0xx_1.o
    0x0800243e   0x0800243e   0x00000009   Data   RO          373    .rodata.PLLMulTable  system_stm32l0xx_1.o
    0x08002447   0x08002447   0x00000001   PAD
    0x08002448   0x08002448   0x00000020   Data   RO         1019    Region$$Table       anon$$obj.o


    Execution Region RW_IRAM1 (Exec base: 0x20000000, Load base: 0x08002468, Size: 0x00000498, Max: 0x00005000, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x20000000   0x08002468   0x00000004   Data   RW           84    .data.FLASH_readFixes.currAddr  flash.o
    0x20000004   0x0800246c   0x00000004   Data   RW          370    .data.SystemCoreClock  system_stm32l0xx_1.o
    0x20000008        -       0x00000040   Zero   RW           51    .bss.ComRxBuff      comport.o
    0x20000048        -       0x00000004   Zero   RW           49    .bss.ComRxWriteIndex  comport.o
    0x2000004c        -       0x00000040   Zero   RW          221    .bss.XbeeRxBuff     xbee.o
    0x2000008c        -       0x00000004   Zero   RW          225    .bss.XbeeRxBufferActive  xbee.o
    0x20000090        -       0x00000004   Zero   RW          222    .bss.XbeeRxWriteIndex  xbee.o
    0x20000094        -       0x00000004   Zero   RW          327    .bss.checkSchedule  main.o
    0x20000098        -       0x00000400   Zero   RW            1    STACK               startup_stm32l071xx.o


==============================================================================

Image component sizes


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Object Name

         0          0          0          0         68       5473   comport.o
      1180         52          0          4          0       3914   flash.o
        36          8          0          0          0       6178   gps.o
      3024         88          0          0          4      12730   main.o
        28          8        192          0       1024        584   startup_stm32l071xx.o
       204         44          0          0          0       2319   stm32l0xx_it.o
       534          0          0          0          0       3817   stm32l0xx_ll_gpio.o
       854         72          0          0          0       6837   stm32l0xx_ll_rcc.o
      1526         16          0          0          0       9502   stm32l0xx_ll_rtc.o
       208          4          0          0          0       4725   stm32l0xx_ll_spi.o
       262         12          0          0          0       7590   stm32l0xx_ll_tim.o
       464         24          0          0          0       4699   stm32l0xx_ll_usart.o
       110         16          0          0          0       6420   stm32l0xx_ll_utils.o
       100         28         33          4          0       2172   system_stm32l0xx_1.o
       306         32          0          0          0       5147   timers.o
        16          4          0          0         72       4185   xbee.o

    ----------------------------------------------------------------------
      8876        408        258          8       1168      86292   Object Totals
         0          0         32          0          0          0   (incl. Generated)
        24          0          1          0          0          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Member Name

         0          0          0          0          0          0   entry.o
         0          0          0          0          0          0   entry10a.o
         0          0          0          0          0          0   entry11a.o
         8          4          0          0          0          0   entry2.o
         4          0          0          0          0          0   entry5.o
         0          0          0          0          0          0   entry7b.o
         0          0          0          0          0          0   entry8b.o
         8          4          0          0          0          0   entry9a.o
        30          0          0          0          0          0   handlers.o
        36          8          0          0          0         68   init.o
        36          0          0          0          0        100   memseta.o
        18          0          0          0          0         60   strcpy.o
        44          0          0          0          0         72   uidiv.o

    ----------------------------------------------------------------------
       186         16          0          0          0        300   Library Totals
         2          0          0          0          0          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Name

       184         16          0          0          0        300   mc_p.l

    ----------------------------------------------------------------------
       186         16          0          0          0        300   Library Totals

    ----------------------------------------------------------------------

==============================================================================


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   

      9062        424        258          8       1168      86448   Grand Totals
      9062        424        258          8       1168      86448   ELF Image Totals
      9062        424        258          8          0          0   ROM Totals

==============================================================================

    Total RO  Size (Code + RO Data)                 9320 (   9.10kB)
    Total RW  Size (RW Data + ZI Data)              1176 (   1.15kB)
    Total ROM Size (Code + RO Data + RW Data)       9328 (   9.11kB)

==============================================================================

